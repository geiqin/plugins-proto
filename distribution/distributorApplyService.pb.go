// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: distributorApplyService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DistributorApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                       //ID
	MemberId    int64       `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id"`           //申请者用户ID
	LevelId     int32       `protobuf:"varint,3,opt,name=level_id,json=levelId,proto3" json:"level_id"`              //申请的等级ID
	IsAutoAudit string      `protobuf:"bytes,4,opt,name=is_auto_audit,json=isAutoAudit,proto3" json:"is_auto_audit"` //是否自动审核
	ReferrerId  int64       `protobuf:"varint,5,opt,name=referrer_id,json=referrerId,proto3" json:"referrer_id"`     //推荐人ID
	FailReason  string      `protobuf:"bytes,6,opt,name=fail_reason,json=failReason,proto3" json:"fail_reason"`      //审核未通过原因
	Conditions  string      `protobuf:"bytes,7,opt,name=conditions,proto3" json:"conditions"`                        //申请时的附加条件门槛信息
	Status      string      `protobuf:"bytes,8,opt,name=status,proto3" json:"status"`                                //申请状态：0待审核，1审核通过，2审核未通过
	CreatedAt   string      `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt   string      `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Member      *MemberInfo `protobuf:"bytes,11,opt,name=member,proto3" json:"member"`
	Referrer    *MemberInfo `protobuf:"bytes,12,opt,name=referrer,proto3" json:"referrer"`
	Level       *Level      `protobuf:"bytes,14,opt,name=level,proto3" json:"level"`
	StatusName  string      `protobuf:"bytes,15,opt,name=status_name,json=statusName,proto3" json:"status_name"`
}

func (x *DistributorApply) Reset() {
	*x = DistributorApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributorApplyService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributorApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributorApply) ProtoMessage() {}

func (x *DistributorApply) ProtoReflect() protoreflect.Message {
	mi := &file_distributorApplyService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributorApply.ProtoReflect.Descriptor instead.
func (*DistributorApply) Descriptor() ([]byte, []int) {
	return file_distributorApplyService_proto_rawDescGZIP(), []int{0}
}

func (x *DistributorApply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DistributorApply) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *DistributorApply) GetLevelId() int32 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *DistributorApply) GetIsAutoAudit() string {
	if x != nil {
		return x.IsAutoAudit
	}
	return ""
}

func (x *DistributorApply) GetReferrerId() int64 {
	if x != nil {
		return x.ReferrerId
	}
	return 0
}

func (x *DistributorApply) GetFailReason() string {
	if x != nil {
		return x.FailReason
	}
	return ""
}

func (x *DistributorApply) GetConditions() string {
	if x != nil {
		return x.Conditions
	}
	return ""
}

func (x *DistributorApply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DistributorApply) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *DistributorApply) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *DistributorApply) GetMember() *MemberInfo {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *DistributorApply) GetReferrer() *MemberInfo {
	if x != nil {
		return x.Referrer
	}
	return nil
}

func (x *DistributorApply) GetLevel() *Level {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *DistributorApply) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

type DistributorApplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged      int64   `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize   int64   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Top        int64   `protobuf:"varint,3,opt,name=top,proto3" json:"top"`
	Id         int64   `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	Mobile     string  `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile"`
	Keywords   string  `protobuf:"bytes,6,opt,name=keywords,proto3" json:"keywords"`
	Status     string  `protobuf:"bytes,7,opt,name=status,proto3" json:"status"`
	LevelId    int32   `protobuf:"varint,8,opt,name=level_id,json=levelId,proto3" json:"level_id"`
	MemberId   int64   `protobuf:"varint,9,opt,name=member_id,json=memberId,proto3" json:"member_id"`
	ReferrerId int64   `protobuf:"varint,10,opt,name=referrer_id,json=referrerId,proto3" json:"referrer_id"`
	Ids        []int64 `protobuf:"varint,11,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *DistributorApplyRequest) Reset() {
	*x = DistributorApplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributorApplyService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributorApplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributorApplyRequest) ProtoMessage() {}

func (x *DistributorApplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_distributorApplyService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributorApplyRequest.ProtoReflect.Descriptor instead.
func (*DistributorApplyRequest) Descriptor() ([]byte, []int) {
	return file_distributorApplyService_proto_rawDescGZIP(), []int{1}
}

func (x *DistributorApplyRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *DistributorApplyRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DistributorApplyRequest) GetTop() int64 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *DistributorApplyRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DistributorApplyRequest) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *DistributorApplyRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *DistributorApplyRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DistributorApplyRequest) GetLevelId() int32 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *DistributorApplyRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *DistributorApplyRequest) GetReferrerId() int64 {
	if x != nil {
		return x.ReferrerId
	}
	return 0
}

func (x *DistributorApplyRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DistributorApplyRecruit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`                             //标题
	PosterUrl   string   `protobuf:"bytes,2,opt,name=poster_url,json=posterUrl,proto3" json:"poster_url"`    //海报URL
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description"`                 //描述
	ButtonName  string   `protobuf:"bytes,4,opt,name=button_name,json=buttonName,proto3" json:"button_name"` //申请按钮名称
	EquityList  []string `protobuf:"bytes,6,rep,name=equity_list,json=equityList,proto3" json:"equity_list"` //权益列表
}

func (x *DistributorApplyRecruit) Reset() {
	*x = DistributorApplyRecruit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributorApplyService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributorApplyRecruit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributorApplyRecruit) ProtoMessage() {}

func (x *DistributorApplyRecruit) ProtoReflect() protoreflect.Message {
	mi := &file_distributorApplyService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributorApplyRecruit.ProtoReflect.Descriptor instead.
func (*DistributorApplyRecruit) Descriptor() ([]byte, []int) {
	return file_distributorApplyService_proto_rawDescGZIP(), []int{2}
}

func (x *DistributorApplyRecruit) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DistributorApplyRecruit) GetPosterUrl() string {
	if x != nil {
		return x.PosterUrl
	}
	return ""
}

func (x *DistributorApplyRecruit) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DistributorApplyRecruit) GetButtonName() string {
	if x != nil {
		return x.ButtonName
	}
	return ""
}

func (x *DistributorApplyRecruit) GetEquityList() []string {
	if x != nil {
		return x.EquityList
	}
	return nil
}

type DistributorApplyAudit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     string `protobuf:"bytes,1,opt,name=status,proto3" json:"status"`                           //状态：0待审核，1审核通过，2审核未通过
	FailReason string `protobuf:"bytes,2,opt,name=fail_reason,json=failReason,proto3" json:"fail_reason"` //失败原因
	AuditTime  string `protobuf:"bytes,3,opt,name=audit_time,json=auditTime,proto3" json:"audit_time"`    //审核时间
	ApplyTime  string `protobuf:"bytes,4,opt,name=apply_time,json=applyTime,proto3" json:"apply_time"`    //申请时间
}

func (x *DistributorApplyAudit) Reset() {
	*x = DistributorApplyAudit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributorApplyService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributorApplyAudit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributorApplyAudit) ProtoMessage() {}

func (x *DistributorApplyAudit) ProtoReflect() protoreflect.Message {
	mi := &file_distributorApplyService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributorApplyAudit.ProtoReflect.Descriptor instead.
func (*DistributorApplyAudit) Descriptor() ([]byte, []int) {
	return file_distributorApplyService_proto_rawDescGZIP(), []int{3}
}

func (x *DistributorApplyAudit) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DistributorApplyAudit) GetFailReason() string {
	if x != nil {
		return x.FailReason
	}
	return ""
}

func (x *DistributorApplyAudit) GetAuditTime() string {
	if x != nil {
		return x.AuditTime
	}
	return ""
}

func (x *DistributorApplyAudit) GetApplyTime() string {
	if x != nil {
		return x.ApplyTime
	}
	return ""
}

type DistributorApplyIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recruit       *DistributorApplyRecruit `protobuf:"bytes,1,opt,name=recruit,proto3" json:"recruit"`                                    //招募海报
	Audit         *DistributorApplyAudit   `protobuf:"bytes,2,opt,name=audit,proto3" json:"audit"`                                        //审核结果
	IsDistributor string                   `protobuf:"bytes,3,opt,name=is_distributor,json=isDistributor,proto3" json:"is_distributor"`   //是否已成分销员：0否，1是
	IsRefuseApply string                   `protobuf:"bytes,4,opt,name=is_refuse_apply,json=isRefuseApply,proto3" json:"is_refuse_apply"` //是否拒绝申请：0否，1是
}

func (x *DistributorApplyIndexResponse) Reset() {
	*x = DistributorApplyIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributorApplyService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributorApplyIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributorApplyIndexResponse) ProtoMessage() {}

func (x *DistributorApplyIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_distributorApplyService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributorApplyIndexResponse.ProtoReflect.Descriptor instead.
func (*DistributorApplyIndexResponse) Descriptor() ([]byte, []int) {
	return file_distributorApplyService_proto_rawDescGZIP(), []int{4}
}

func (x *DistributorApplyIndexResponse) GetRecruit() *DistributorApplyRecruit {
	if x != nil {
		return x.Recruit
	}
	return nil
}

func (x *DistributorApplyIndexResponse) GetAudit() *DistributorApplyAudit {
	if x != nil {
		return x.Audit
	}
	return nil
}

func (x *DistributorApplyIndexResponse) GetIsDistributor() string {
	if x != nil {
		return x.IsDistributor
	}
	return ""
}

func (x *DistributorApplyIndexResponse) GetIsRefuseApply() string {
	if x != nil {
		return x.IsRefuseApply
	}
	return ""
}

type DistributorApplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *DistributorApply   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager       `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*DistributorApply `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Info   string              `protobuf:"bytes,4,opt,name=info,proto3" json:"info"`
}

func (x *DistributorApplyResponse) Reset() {
	*x = DistributorApplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributorApplyService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributorApplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributorApplyResponse) ProtoMessage() {}

func (x *DistributorApplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_distributorApplyService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributorApplyResponse.ProtoReflect.Descriptor instead.
func (*DistributorApplyResponse) Descriptor() ([]byte, []int) {
	return file_distributorApplyService_proto_rawDescGZIP(), []int{5}
}

func (x *DistributorApplyResponse) GetEntity() *DistributorApply {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *DistributorApplyResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *DistributorApplyResponse) GetItems() []*DistributorApply {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *DistributorApplyResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_distributorApplyService_proto protoreflect.FileDescriptor

var file_distributorApplyService_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xde, 0x03, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x73, 0x41,
	0x75, 0x74, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x69,
	0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x66, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x2c, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30,
	0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72,
	0x12, 0x25, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa5, 0x02, 0x0a, 0x17, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0xb2, 0x01, 0x0a, 0x17, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x63, 0x72, 0x75, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72,
	0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x71, 0x75, 0x69, 0x74, 0x79, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x74,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8e, 0x01, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x6c, 0x79,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70,
	0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xe2, 0x01, 0x0a, 0x1d, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x72,
	0x75, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x63, 0x72, 0x75, 0x69, 0x74, 0x52, 0x07, 0x72, 0x65,
	0x63, 0x72, 0x75, 0x69, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x69, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65,
	0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x73,
	0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x22, 0xb9, 0x01, 0x0a, 0x18,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x72, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0x9f, 0x03, 0x0a, 0x17, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x1a, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x49, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x06, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_distributorApplyService_proto_rawDescOnce sync.Once
	file_distributorApplyService_proto_rawDescData = file_distributorApplyService_proto_rawDesc
)

func file_distributorApplyService_proto_rawDescGZIP() []byte {
	file_distributorApplyService_proto_rawDescOnce.Do(func() {
		file_distributorApplyService_proto_rawDescData = protoimpl.X.CompressGZIP(file_distributorApplyService_proto_rawDescData)
	})
	return file_distributorApplyService_proto_rawDescData
}

var file_distributorApplyService_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_distributorApplyService_proto_goTypes = []interface{}{
	(*DistributorApply)(nil),              // 0: services.DistributorApply
	(*DistributorApplyRequest)(nil),       // 1: services.DistributorApplyRequest
	(*DistributorApplyRecruit)(nil),       // 2: services.DistributorApplyRecruit
	(*DistributorApplyAudit)(nil),         // 3: services.DistributorApplyAudit
	(*DistributorApplyIndexResponse)(nil), // 4: services.DistributorApplyIndexResponse
	(*DistributorApplyResponse)(nil),      // 5: services.DistributorApplyResponse
	(*MemberInfo)(nil),                    // 6: services.MemberInfo
	(*Level)(nil),                         // 7: services.Level
	(*common.Pager)(nil),                  // 8: common.Pager
}
var file_distributorApplyService_proto_depIdxs = []int32{
	6,  // 0: services.DistributorApply.member:type_name -> services.MemberInfo
	6,  // 1: services.DistributorApply.referrer:type_name -> services.MemberInfo
	7,  // 2: services.DistributorApply.level:type_name -> services.Level
	2,  // 3: services.DistributorApplyIndexResponse.recruit:type_name -> services.DistributorApplyRecruit
	3,  // 4: services.DistributorApplyIndexResponse.audit:type_name -> services.DistributorApplyAudit
	0,  // 5: services.DistributorApplyResponse.entity:type_name -> services.DistributorApply
	8,  // 6: services.DistributorApplyResponse.pager:type_name -> common.Pager
	0,  // 7: services.DistributorApplyResponse.items:type_name -> services.DistributorApply
	0,  // 8: services.DistributorApplyService.Index:input_type -> services.DistributorApply
	0,  // 9: services.DistributorApplyService.Create:input_type -> services.DistributorApply
	0,  // 10: services.DistributorApplyService.Audit:input_type -> services.DistributorApply
	0,  // 11: services.DistributorApplyService.Detail:input_type -> services.DistributorApply
	1,  // 12: services.DistributorApplyService.Search:input_type -> services.DistributorApplyRequest
	4,  // 13: services.DistributorApplyService.Index:output_type -> services.DistributorApplyIndexResponse
	5,  // 14: services.DistributorApplyService.Create:output_type -> services.DistributorApplyResponse
	5,  // 15: services.DistributorApplyService.Audit:output_type -> services.DistributorApplyResponse
	5,  // 16: services.DistributorApplyService.Detail:output_type -> services.DistributorApplyResponse
	5,  // 17: services.DistributorApplyService.Search:output_type -> services.DistributorApplyResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_distributorApplyService_proto_init() }
func file_distributorApplyService_proto_init() {
	if File_distributorApplyService_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	file_levelService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_distributorApplyService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributorApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributorApplyService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributorApplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributorApplyService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributorApplyRecruit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributorApplyService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributorApplyAudit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributorApplyService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributorApplyIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributorApplyService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributorApplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_distributorApplyService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_distributorApplyService_proto_goTypes,
		DependencyIndexes: file_distributorApplyService_proto_depIdxs,
		MessageInfos:      file_distributorApplyService_proto_msgTypes,
	}.Build()
	File_distributorApplyService_proto = out.File
	file_distributorApplyService_proto_rawDesc = nil
	file_distributorApplyService_proto_goTypes = nil
	file_distributorApplyService_proto_depIdxs = nil
}
