// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: configureService.proto

package services

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for ConfigureService service

func NewConfigureServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for ConfigureService service

type ConfigureService interface {
	//获取分销配置信息
	GetConfig(ctx context.Context, in *DistributionConfig, opts ...client.CallOption) (*ConfigureResponse, error)
	//保存分销配置信息
	SaveConfig(ctx context.Context, in *DistributionConfig, opts ...client.CallOption) (*ConfigureResponse, error)
	//保存推广海报数据
	SavePosterData(ctx context.Context, in *PosterData, opts ...client.CallOption) (*ConfigureResponse, error)
	//保存商品海报数据
	SavePosterGoodsData(ctx context.Context, in *PosterGoodsData, opts ...client.CallOption) (*ConfigureResponse, error)
	//清空推广海报生成数据
	ClearPoster(ctx context.Context, in *PosterRequest, opts ...client.CallOption) (*ConfigureResponse, error)
	//清空商品海报生成数据
	ClearPosterGoods(ctx context.Context, in *PosterRequest, opts ...client.CallOption) (*ConfigureResponse, error)
}

type configureService struct {
	c    client.Client
	name string
}

func NewConfigureService(name string, c client.Client) ConfigureService {
	return &configureService{
		c:    c,
		name: name,
	}
}

func (c *configureService) GetConfig(ctx context.Context, in *DistributionConfig, opts ...client.CallOption) (*ConfigureResponse, error) {
	req := c.c.NewRequest(c.name, "ConfigureService.GetConfig", in)
	out := new(ConfigureResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configureService) SaveConfig(ctx context.Context, in *DistributionConfig, opts ...client.CallOption) (*ConfigureResponse, error) {
	req := c.c.NewRequest(c.name, "ConfigureService.SaveConfig", in)
	out := new(ConfigureResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configureService) SavePosterData(ctx context.Context, in *PosterData, opts ...client.CallOption) (*ConfigureResponse, error) {
	req := c.c.NewRequest(c.name, "ConfigureService.SavePosterData", in)
	out := new(ConfigureResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configureService) SavePosterGoodsData(ctx context.Context, in *PosterGoodsData, opts ...client.CallOption) (*ConfigureResponse, error) {
	req := c.c.NewRequest(c.name, "ConfigureService.SavePosterGoodsData", in)
	out := new(ConfigureResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configureService) ClearPoster(ctx context.Context, in *PosterRequest, opts ...client.CallOption) (*ConfigureResponse, error) {
	req := c.c.NewRequest(c.name, "ConfigureService.ClearPoster", in)
	out := new(ConfigureResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configureService) ClearPosterGoods(ctx context.Context, in *PosterRequest, opts ...client.CallOption) (*ConfigureResponse, error) {
	req := c.c.NewRequest(c.name, "ConfigureService.ClearPosterGoods", in)
	out := new(ConfigureResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ConfigureService service

type ConfigureServiceHandler interface {
	//获取分销配置信息
	GetConfig(context.Context, *DistributionConfig, *ConfigureResponse) error
	//保存分销配置信息
	SaveConfig(context.Context, *DistributionConfig, *ConfigureResponse) error
	//保存推广海报数据
	SavePosterData(context.Context, *PosterData, *ConfigureResponse) error
	//保存商品海报数据
	SavePosterGoodsData(context.Context, *PosterGoodsData, *ConfigureResponse) error
	//清空推广海报生成数据
	ClearPoster(context.Context, *PosterRequest, *ConfigureResponse) error
	//清空商品海报生成数据
	ClearPosterGoods(context.Context, *PosterRequest, *ConfigureResponse) error
}

func RegisterConfigureServiceHandler(s server.Server, hdlr ConfigureServiceHandler, opts ...server.HandlerOption) error {
	type configureService interface {
		GetConfig(ctx context.Context, in *DistributionConfig, out *ConfigureResponse) error
		SaveConfig(ctx context.Context, in *DistributionConfig, out *ConfigureResponse) error
		SavePosterData(ctx context.Context, in *PosterData, out *ConfigureResponse) error
		SavePosterGoodsData(ctx context.Context, in *PosterGoodsData, out *ConfigureResponse) error
		ClearPoster(ctx context.Context, in *PosterRequest, out *ConfigureResponse) error
		ClearPosterGoods(ctx context.Context, in *PosterRequest, out *ConfigureResponse) error
	}
	type ConfigureService struct {
		configureService
	}
	h := &configureServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&ConfigureService{h}, opts...))
}

type configureServiceHandler struct {
	ConfigureServiceHandler
}

func (h *configureServiceHandler) GetConfig(ctx context.Context, in *DistributionConfig, out *ConfigureResponse) error {
	return h.ConfigureServiceHandler.GetConfig(ctx, in, out)
}

func (h *configureServiceHandler) SaveConfig(ctx context.Context, in *DistributionConfig, out *ConfigureResponse) error {
	return h.ConfigureServiceHandler.SaveConfig(ctx, in, out)
}

func (h *configureServiceHandler) SavePosterData(ctx context.Context, in *PosterData, out *ConfigureResponse) error {
	return h.ConfigureServiceHandler.SavePosterData(ctx, in, out)
}

func (h *configureServiceHandler) SavePosterGoodsData(ctx context.Context, in *PosterGoodsData, out *ConfigureResponse) error {
	return h.ConfigureServiceHandler.SavePosterGoodsData(ctx, in, out)
}

func (h *configureServiceHandler) ClearPoster(ctx context.Context, in *PosterRequest, out *ConfigureResponse) error {
	return h.ConfigureServiceHandler.ClearPoster(ctx, in, out)
}

func (h *configureServiceHandler) ClearPosterGoods(ctx context.Context, in *PosterRequest, out *ConfigureResponse) error {
	return h.ConfigureServiceHandler.ClearPosterGoods(ctx, in, out)
}
