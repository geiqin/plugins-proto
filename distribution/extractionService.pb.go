// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: extractionService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Extraction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                         //ID
	MemberId     int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id"`             //站点所属用户id
	LogoUrl      string `protobuf:"bytes,3,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url"`                 //logo图片
	Alias        string `protobuf:"bytes,4,opt,name=alias,proto3" json:"alias"`                                    //别名
	Name         string `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`                                      //别名
	Tel          string `protobuf:"bytes,6,opt,name=tel,proto3" json:"tel"`                                        //电话
	ProvinceId   int64  `protobuf:"varint,8,opt,name=province_id,json=provinceId,proto3" json:"province_id"`       //所在省ID
	CityId       int64  `protobuf:"varint,9,opt,name=city_id,json=cityId,proto3" json:"city_id"`                   //所在市ID
	CountyId     int64  `protobuf:"varint,10,opt,name=county_id,json=countyId,proto3" json:"county_id"`            //所在县/区ID
	ProvinceName string `protobuf:"bytes,11,opt,name=province_name,json=provinceName,proto3" json:"province_name"` //所在省-名称
	CityName     string `protobuf:"bytes,12,opt,name=city_name,json=cityName,proto3" json:"city_name"`             //所在市-名称
	CountyName   string `protobuf:"bytes,13,opt,name=county_name,json=countyName,proto3" json:"county_name"`       //所在县/区-名称
	Address      string `protobuf:"bytes,14,opt,name=address,proto3" json:"address"`                               //详细地址
	Lng          string `protobuf:"bytes,15,opt,name=lng,proto3" json:"lng"`                                       //经度
	Lat          string `protobuf:"bytes,16,opt,name=lat,proto3" json:"lat"`                                       //纬度
	FailReason   string `protobuf:"bytes,17,opt,name=fail_reason,json=failReason,proto3" json:"fail_reason"`       //审核拒绝原因
	Status       string `protobuf:"bytes,18,opt,name=status,proto3" json:"status"`                                 //状态（0待审核, 1已通过, 2已拒绝, 3已解约）
	CreatedAt    string `protobuf:"bytes,19,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt    string `protobuf:"bytes,20,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	StatusName   string `protobuf:"bytes,21,opt,name=status_name,json=statusName,proto3" json:"status_name"`
}

func (x *Extraction) Reset() {
	*x = Extraction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extractionService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Extraction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Extraction) ProtoMessage() {}

func (x *Extraction) ProtoReflect() protoreflect.Message {
	mi := &file_extractionService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Extraction.ProtoReflect.Descriptor instead.
func (*Extraction) Descriptor() ([]byte, []int) {
	return file_extractionService_proto_rawDescGZIP(), []int{0}
}

func (x *Extraction) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Extraction) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *Extraction) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *Extraction) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Extraction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Extraction) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

func (x *Extraction) GetProvinceId() int64 {
	if x != nil {
		return x.ProvinceId
	}
	return 0
}

func (x *Extraction) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *Extraction) GetCountyId() int64 {
	if x != nil {
		return x.CountyId
	}
	return 0
}

func (x *Extraction) GetProvinceName() string {
	if x != nil {
		return x.ProvinceName
	}
	return ""
}

func (x *Extraction) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *Extraction) GetCountyName() string {
	if x != nil {
		return x.CountyName
	}
	return ""
}

func (x *Extraction) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Extraction) GetLng() string {
	if x != nil {
		return x.Lng
	}
	return ""
}

func (x *Extraction) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *Extraction) GetFailReason() string {
	if x != nil {
		return x.FailReason
	}
	return ""
}

func (x *Extraction) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Extraction) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Extraction) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Extraction) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

type ExtractionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int64   `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int64   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Top      int64   `protobuf:"varint,3,opt,name=top,proto3" json:"top"`
	Id       int64   `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	Status   string  `protobuf:"bytes,6,opt,name=status,proto3" json:"status"`
	IsPassed string  `protobuf:"bytes,7,opt,name=is_passed,json=isPassed,proto3" json:"is_passed"`
	Ids      []int64 `protobuf:"varint,8,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *ExtractionRequest) Reset() {
	*x = ExtractionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extractionService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtractionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractionRequest) ProtoMessage() {}

func (x *ExtractionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extractionService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractionRequest.ProtoReflect.Descriptor instead.
func (*ExtractionRequest) Descriptor() ([]byte, []int) {
	return file_extractionService_proto_rawDescGZIP(), []int{1}
}

func (x *ExtractionRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *ExtractionRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ExtractionRequest) GetTop() int64 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *ExtractionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExtractionRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ExtractionRequest) GetIsPassed() string {
	if x != nil {
		return x.IsPassed
	}
	return ""
}

func (x *ExtractionRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ExtractionIndexStatistical struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderWait    int64 `protobuf:"varint,2,opt,name=order_wait,json=orderWait,proto3" json:"order_wait"`          //待处理
	OrderAlready int64 `protobuf:"varint,3,opt,name=order_already,json=orderAlready,proto3" json:"order_already"` //已处理
}

func (x *ExtractionIndexStatistical) Reset() {
	*x = ExtractionIndexStatistical{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extractionService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtractionIndexStatistical) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractionIndexStatistical) ProtoMessage() {}

func (x *ExtractionIndexStatistical) ProtoReflect() protoreflect.Message {
	mi := &file_extractionService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractionIndexStatistical.ProtoReflect.Descriptor instead.
func (*ExtractionIndexStatistical) Descriptor() ([]byte, []int) {
	return file_extractionService_proto_rawDescGZIP(), []int{2}
}

func (x *ExtractionIndexStatistical) GetOrderWait() int64 {
	if x != nil {
		return x.OrderWait
	}
	return 0
}

func (x *ExtractionIndexStatistical) GetOrderAlready() int64 {
	if x != nil {
		return x.OrderAlready
	}
	return 0
}

type ExtractionIndexData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base        *DistributionConfig         `protobuf:"bytes,1,opt,name=base,proto3" json:"base"`
	Extraction  *Extraction                 `protobuf:"bytes,2,opt,name=extraction,proto3" json:"extraction"`
	Statistical *ExtractionIndexStatistical `protobuf:"bytes,3,opt,name=statistical,proto3" json:"statistical"`
}

func (x *ExtractionIndexData) Reset() {
	*x = ExtractionIndexData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extractionService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtractionIndexData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractionIndexData) ProtoMessage() {}

func (x *ExtractionIndexData) ProtoReflect() protoreflect.Message {
	mi := &file_extractionService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractionIndexData.ProtoReflect.Descriptor instead.
func (*ExtractionIndexData) Descriptor() ([]byte, []int) {
	return file_extractionService_proto_rawDescGZIP(), []int{3}
}

func (x *ExtractionIndexData) GetBase() *DistributionConfig {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *ExtractionIndexData) GetExtraction() *Extraction {
	if x != nil {
		return x.Extraction
	}
	return nil
}

func (x *ExtractionIndexData) GetStatistical() *ExtractionIndexStatistical {
	if x != nil {
		return x.Statistical
	}
	return nil
}

type ExtractionIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *ExtractionIndexData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error        `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *ExtractionIndexResponse) Reset() {
	*x = ExtractionIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extractionService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtractionIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractionIndexResponse) ProtoMessage() {}

func (x *ExtractionIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_extractionService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractionIndexResponse.ProtoReflect.Descriptor instead.
func (*ExtractionIndexResponse) Descriptor() ([]byte, []int) {
	return file_extractionService_proto_rawDescGZIP(), []int{4}
}

func (x *ExtractionIndexResponse) GetData() *ExtractionIndexData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ExtractionIndexResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ExtractionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Extraction *Extraction   `protobuf:"bytes,1,opt,name=extraction,proto3" json:"extraction"`
	Pager      *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items      []*Extraction `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Info       string        `protobuf:"bytes,5,opt,name=info,proto3" json:"info"`
}

func (x *ExtractionResponse) Reset() {
	*x = ExtractionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extractionService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtractionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractionResponse) ProtoMessage() {}

func (x *ExtractionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_extractionService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractionResponse.ProtoReflect.Descriptor instead.
func (*ExtractionResponse) Descriptor() ([]byte, []int) {
	return file_extractionService_proto_rawDescGZIP(), []int{5}
}

func (x *ExtractionResponse) GetExtraction() *Extraction {
	if x != nil {
		return x.Extraction
	}
	return nil
}

func (x *ExtractionResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *ExtractionResponse) GetItems() []*Extraction {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ExtractionResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_extractionService_proto protoreflect.FileDescriptor

var file_extractionService_proto_rawDesc = []byte{
	0x0a, 0x17, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0,
	0x04, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f,
	0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x65,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x69,
	0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x66, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xaf, 0x01, 0x0a, 0x11, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x50, 0x61, 0x73, 0x73, 0x65,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x22, 0x60, 0x0a, 0x1a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x57, 0x61, 0x69, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6c,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x22, 0xc5, 0x01, 0x0a, 0x13, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x22, 0x71, 0x0a,
	0x17, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0xaf, 0x01, 0x0a, 0x12, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x32, 0xa9, 0x06, 0x0a, 0x11, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x13, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x13, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x61, 0x76, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x48, 0x0a, 0x10, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0f, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x14, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x11, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x6c, 0x69, 0x65, 0x76, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x10, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x14, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x53, 0x61, 0x76, 0x65, 0x12, 0x1b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x1b, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d,
	0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_extractionService_proto_rawDescOnce sync.Once
	file_extractionService_proto_rawDescData = file_extractionService_proto_rawDesc
)

func file_extractionService_proto_rawDescGZIP() []byte {
	file_extractionService_proto_rawDescOnce.Do(func() {
		file_extractionService_proto_rawDescData = protoimpl.X.CompressGZIP(file_extractionService_proto_rawDescData)
	})
	return file_extractionService_proto_rawDescData
}

var file_extractionService_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_extractionService_proto_goTypes = []interface{}{
	(*Extraction)(nil),                 // 0: services.Extraction
	(*ExtractionRequest)(nil),          // 1: services.ExtractionRequest
	(*ExtractionIndexStatistical)(nil), // 2: services.ExtractionIndexStatistical
	(*ExtractionIndexData)(nil),        // 3: services.ExtractionIndexData
	(*ExtractionIndexResponse)(nil),    // 4: services.ExtractionIndexResponse
	(*ExtractionResponse)(nil),         // 5: services.ExtractionResponse
	(*DistributionConfig)(nil),         // 6: services.DistributionConfig
	(*common.Error)(nil),               // 7: common.Error
	(*common.Pager)(nil),               // 8: common.Pager
}
var file_extractionService_proto_depIdxs = []int32{
	6,  // 0: services.ExtractionIndexData.base:type_name -> services.DistributionConfig
	0,  // 1: services.ExtractionIndexData.extraction:type_name -> services.Extraction
	2,  // 2: services.ExtractionIndexData.statistical:type_name -> services.ExtractionIndexStatistical
	3,  // 3: services.ExtractionIndexResponse.data:type_name -> services.ExtractionIndexData
	7,  // 4: services.ExtractionIndexResponse.error:type_name -> common.Error
	0,  // 5: services.ExtractionResponse.extraction:type_name -> services.Extraction
	8,  // 6: services.ExtractionResponse.pager:type_name -> common.Pager
	0,  // 7: services.ExtractionResponse.items:type_name -> services.Extraction
	0,  // 8: services.ExtractionService.ExtractionIndex:input_type -> services.Extraction
	0,  // 9: services.ExtractionService.ExtractionApplyInfo:input_type -> services.Extraction
	0,  // 10: services.ExtractionService.ExtractionApplySave:input_type -> services.Extraction
	0,  // 11: services.ExtractionService.ExtractionDetail:input_type -> services.Extraction
	0,  // 12: services.ExtractionService.ExtractionAudit:input_type -> services.Extraction
	1,  // 13: services.ExtractionService.ExtractionRelieve:input_type -> services.ExtractionRequest
	1,  // 14: services.ExtractionService.ExtractionDelete:input_type -> services.ExtractionRequest
	1,  // 15: services.ExtractionService.ExtractionSwitchSave:input_type -> services.ExtractionRequest
	1,  // 16: services.ExtractionService.UserCustomExtractionAddress:input_type -> services.ExtractionRequest
	1,  // 17: services.ExtractionService.Search:input_type -> services.ExtractionRequest
	4,  // 18: services.ExtractionService.ExtractionIndex:output_type -> services.ExtractionIndexResponse
	5,  // 19: services.ExtractionService.ExtractionApplyInfo:output_type -> services.ExtractionResponse
	5,  // 20: services.ExtractionService.ExtractionApplySave:output_type -> services.ExtractionResponse
	5,  // 21: services.ExtractionService.ExtractionDetail:output_type -> services.ExtractionResponse
	5,  // 22: services.ExtractionService.ExtractionAudit:output_type -> services.ExtractionResponse
	5,  // 23: services.ExtractionService.ExtractionRelieve:output_type -> services.ExtractionResponse
	5,  // 24: services.ExtractionService.ExtractionDelete:output_type -> services.ExtractionResponse
	5,  // 25: services.ExtractionService.ExtractionSwitchSave:output_type -> services.ExtractionResponse
	5,  // 26: services.ExtractionService.UserCustomExtractionAddress:output_type -> services.ExtractionResponse
	5,  // 27: services.ExtractionService.Search:output_type -> services.ExtractionResponse
	18, // [18:28] is the sub-list for method output_type
	8,  // [8:18] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_extractionService_proto_init() }
func file_extractionService_proto_init() {
	if File_extractionService_proto != nil {
		return
	}
	file_configureService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_extractionService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Extraction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extractionService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtractionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extractionService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtractionIndexStatistical); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extractionService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtractionIndexData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extractionService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtractionIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extractionService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtractionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_extractionService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_extractionService_proto_goTypes,
		DependencyIndexes: file_extractionService_proto_depIdxs,
		MessageInfos:      file_extractionService_proto_msgTypes,
	}.Build()
	File_extractionService_proto = out.File
	file_extractionService_proto_rawDesc = nil
	file_extractionService_proto_goTypes = nil
	file_extractionService_proto_depIdxs = nil
}
