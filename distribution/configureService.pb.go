// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: configureService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//分销配置
type DistributionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	H5Url                          string           `protobuf:"bytes,1,opt,name=h5_url,json=h5Url,proto3" json:"h5_url"`                                                                                    //H5自定义地址
	MobileHomePage                 string           `protobuf:"bytes,2,opt,name=mobile_home_page,json=mobileHomePage,proto3" json:"mobile_home_page"`                                                       //手机端首页地址
	UserPosterTopDesc              []string         `protobuf:"bytes,3,rep,name=user_poster_top_desc,json=userPosterTopDesc,proto3" json:"user_poster_top_desc"`                                            //用户海报页面顶部描述
	UserPosterShareTitle           string           `protobuf:"bytes,4,opt,name=user_poster_share_title,json=userPosterShareTitle,proto3" json:"user_poster_share_title"`                                   //用户海报分享标题(空则读取站点页面名称)
	UserPosterShareDesc            string           `protobuf:"bytes,5,opt,name=user_poster_share_desc,json=userPosterShareDesc,proto3" json:"user_poster_share_desc"`                                      //用户海报分享描述
	IsUpperReturn                  string           `protobuf:"bytes,6,opt,name=is_upper_return,json=isUpperReturn,proto3" json:"is_upper_return"`                                                          //向上返佣,默认关闭
	Level                          int32            `protobuf:"varint,7,opt,name=level,proto3" json:"level"`                                                                                                //分销层级,默认三级
	SelfBuy                        string           `protobuf:"bytes,8,opt,name=self_buy,json=selfBuy,proto3" json:"self_buy"`                                                                              //分销商内购,默认关闭
	AutoLevelType                  string           `protobuf:"bytes,9,opt,name=auto_level_type,json=autoLevelType,proto3" json:"auto_level_type"`                                                          //自动升级分销等级类型
	IsDownReturn                   string           `protobuf:"bytes,10,opt,name=is_down_return,json=isDownReturn,proto3" json:"is_down_return"`                                                            //向下返佣
	DownReturnNumber               int32            `protobuf:"varint,11,opt,name=down_return_number,json=downReturnNumber,proto3" json:"down_return_number"`                                               //最多分摊佣金人数
	IsUpperReturnIntegral          string           `protobuf:"bytes,12,opt,name=is_upper_return_integral,json=isUpperReturnIntegral,proto3" json:"is_upper_return_integral"`                               //向上返积分
	UpperReturnIntegral            int64            `protobuf:"varint,13,opt,name=upper_return_integral,json=upperReturnIntegral,proto3" json:"upper_return_integral"`                                      //向上返积分数量
	IsDownReturnIntegral           string           `protobuf:"bytes,14,opt,name=is_down_return_integral,json=isDownReturnIntegral,proto3" json:"is_down_return_integral"`                                  //向下返积分
	DownReturnIntegral             int64            `protobuf:"varint,15,opt,name=down_return_integral,json=downReturnIntegral,proto3" json:"down_return_integral"`                                         //向下返积分数量
	DownReturnIntegralPeople       int32            `protobuf:"varint,16,opt,name=down_return_integral_people,json=downReturnIntegralPeople,proto3" json:"down_return_integral_people"`                     //最多分摊积分人数
	IsAppointGoods                 string           `protobuf:"bytes,17,opt,name=is_appoint_goods,json=isAppointGoods,proto3" json:"is_appoint_goods"`                                                      //指定商品返佣折扣
	AppointLevelOrderMinNumber     int32            `protobuf:"varint,18,opt,name=appoint_level_order_min_number,json=appointLevelOrderMinNumber,proto3" json:"appoint_level_order_min_number"`             //购买指定商品成为指定分销等级(需要满足订单数量)
	AppointLevelGoodsMinNumber     int32            `protobuf:"varint,19,opt,name=appoint_level_goods_min_number,json=appointLevelGoodsMinNumber,proto3" json:"appoint_level_goods_min_number"`             //购买指定商品成为指定分销等级(需要满足商品购买数量)
	AppointGoodsProfitNumber       int32            `protobuf:"varint,20,opt,name=appoint_goods_profit_number,json=appointGoodsProfitNumber,proto3" json:"appoint_goods_profit_number"`                     //推荐多少个用户购买指定商品后返现商品的金额(指定用户数量)
	AppointGoodsSaleNumber         int32            `protobuf:"varint,21,opt,name=appoint_goods_sale_number,json=appointGoodsSaleNumber,proto3" json:"appoint_goods_sale_number"`                           //指定商品满足销售数量后返佣（商品购买最低数量）
	AppointGoodsSalePrice          int64            `protobuf:"varint,22,opt,name=appoint_goods_sale_price,json=appointGoodsSalePrice,proto3" json:"appoint_goods_sale_price"`                              //指定商品满足销售数量后返佣（返佣固定金额）
	AppointGoodsSaleRate           int32            `protobuf:"varint,23,opt,name=appoint_goods_sale_rate,json=appointGoodsSaleRate,proto3" json:"appoint_goods_sale_rate"`                                 //指定商品满足销售数量后返佣 (返佣比例 0~100 的数字)
	AppointGoodsRepurchaseDiscount string           `protobuf:"bytes,24,opt,name=appoint_goods_repurchase_discount,json=appointGoodsRepurchaseDiscount,proto3" json:"appoint_goods_repurchase_discount"`    //指定商品复购折扣优惠(指定商品复购折扣优惠 0~1 的数字)
	GoodsDetailIcon                string           `protobuf:"bytes,25,opt,name=goods_detail_icon,json=goodsDetailIcon,proto3" json:"goods_detail_icon"`                                                   //指定商品复购折扣优惠(商品详情折扣图标名称)
	AppointGoodsLadderIntervalTime int64            `protobuf:"varint,26,opt,name=appoint_goods_ladder_interval_time,json=appointGoodsLadderIntervalTime,proto3" json:"appoint_goods_ladder_interval_time"` //指定商品阶梯返佣(阶梯间隔时间)
	IsEnableSelfExtraction         string           `protobuf:"bytes,27,opt,name=is_enable_self_extraction,json=isEnableSelfExtraction,proto3" json:"is_enable_self_extraction"`                            //自提取货点申请(0关闭/1开启)
	IsBuyDefaultExtractionAddress  string           `protobuf:"bytes,28,opt,name=is_buy_default_extraction_address,json=isBuyDefaultExtractionAddress,proto3" json:"is_buy_default_extraction_address"`     //下单默认取货地址(0关闭/1开启)
	IsSelfExtraction               string           `protobuf:"bytes,29,opt,name=is_self_extraction,json=isSelfExtraction,proto3" json:"is_self_extraction"`                                                //取货点返佣(0关闭/1开启)
	IsSelfExtractionCloseUpper     string           `protobuf:"bytes,30,opt,name=is_self_extraction_close_upper,json=isSelfExtractionCloseUpper,proto3" json:"is_self_extraction_close_upper"`              //取货点返佣后不再向上返佣逻辑(0关闭/1开启)
	ExtractionProfitLevel          string           `protobuf:"bytes,31,opt,name=extraction_profit_level,json=extractionProfitLevel,proto3" json:"extraction_profit_level"`                                 //取货点返佣层级(0关闭/1开启)
	SelfExtractionApplyDesc        []string         `protobuf:"bytes,32,rep,name=self_extraction_apply_desc,json=selfExtractionApplyDesc,proto3" json:"self_extraction_apply_desc"`                         //自提取货点申请介绍
	SelfExtractionCommonNotice     []string         `protobuf:"bytes,33,rep,name=self_extraction_common_notice,json=selfExtractionCommonNotice,proto3" json:"self_extraction_common_notice"`                //自提取货点顶部公告
	ProfitType                     string           `protobuf:"bytes,34,opt,name=profit_type,json=profitType,proto3" json:"profit_type"`                                                                    //返佣类型（0所有订单，1首单）
	ProfitSettlementLimitTime      int64            `protobuf:"varint,35,opt,name=profit_settlement_limit_time,json=profitSettlementLimitTime,proto3" json:"profit_settlement_limit_time"`                  //佣金结算周期(分钟)
	IsShowIntroduce                string           `protobuf:"bytes,36,opt,name=is_show_introduce,json=isShowIntroduce,proto3" json:"is_show_introduce"`                                                   //分销中心开启等级介绍(0关闭/1开启)
	UserCenterLevelDesc            []string         `protobuf:"bytes,37,rep,name=user_center_level_desc,json=userCenterLevelDesc,proto3" json:"user_center_level_desc"`                                     //等级介绍顶部描述
	NonConformityDesc              []string         `protobuf:"bytes,38,rep,name=non_conformity_desc,json=nonConformityDesc,proto3" json:"non_conformity_desc"`                                             //不符合分销条件描述
	UserCenterNotice               []string         `protobuf:"bytes,39,rep,name=user_center_notice,json=userCenterNotice,proto3" json:"user_center_notice"`                                                //分销中心公告
	AppointLevelId                 int32            `protobuf:"varint,40,opt,name=appoint_level_id,json=appointLevelId,proto3" json:"appoint_level_id"`                                                     //
	IsAdminUserLevelShow           string           `protobuf:"bytes,41,opt,name=is_admin_user_level_show,json=isAdminUserLevelShow,proto3" json:"is_admin_user_level_show"`                                //用户列表展示等级
	IsAdminOrderUserReferrerShow   string           `protobuf:"bytes,42,opt,name=is_admin_order_user_referrer_show,json=isAdminOrderUserReferrerShow,proto3" json:"is_admin_order_user_referrer_show"`      //订单列表展示邀请用户
	IsUserMenu                     string           `protobuf:"bytes,43,opt,name=is_user_menu,json=isUserMenu,proto3" json:"is_user_menu"`                                                                  //开启用户中心菜单入口
	IsUserExtractionSwitch         string           `protobuf:"bytes,44,opt,name=is_user_extraction_switch,json=isUserExtractionSwitch,proto3" json:"is_user_extraction_switch"`                            //开启自提地址切换
	IsFixedPriceMultiple           string           `protobuf:"bytes,45,opt,name=is_fixed_price_multiple,json=isFixedPriceMultiple,proto3" json:"is_fixed_price_multiple"`                                  //商品自定义返佣金额倍数
	IsShowSuperior                 string           `protobuf:"bytes,46,opt,name=is_show_superior,json=isShowSuperior,proto3" json:"is_show_superior"`                                                      //用户分销中心展示上级用户
	IsGoodsDetailPoster            string           `protobuf:"bytes,47,opt,name=is_goods_detail_poster,json=isGoodsDetailPoster,proto3" json:"is_goods_detail_poster"`                                     //开启商品详情页海报
	IsRealstoreOrderNotProfit      string           `protobuf:"bytes,48,opt,name=is_realstore_order_not_profit,json=isRealstoreOrderNotProfit,proto3" json:"is_realstore_order_not_profit"`                 //从门店插件下单不返佣
	IsProfitShop                   string           `protobuf:"bytes,49,opt,name=is_profit_shop,json=isProfitShop,proto3" json:"is_profit_shop"`                                                            //支持多商户(0关闭/1开启)
	IsProfitDownReturnShop         string           `protobuf:"bytes,50,opt,name=is_profit_down_return_shop,json=isProfitDownReturnShop,proto3" json:"is_profit_down_return_shop"`                          //支持向下返佣(多商户)(0关闭/1开启)
	IsProfitSelfBuyShop            string           `protobuf:"bytes,51,opt,name=is_profit_self_buy_shop,json=isProfitSelfBuyShop,proto3" json:"is_profit_self_buy_shop"`                                   //支持内购返佣(多商户)(0关闭/1开启)
	AppointGoodsSaleIsUser         string           `protobuf:"bytes,52,opt,name=appoint_goods_sale_is_user,json=appointGoodsSaleIsUser,proto3" json:"appoint_goods_sale_is_user"`
	IsShowProfitLadderTips         string           `protobuf:"bytes,53,opt,name=is_show_profit_ladder_tips,json=isShowProfitLadderTips,proto3" json:"is_show_profit_ladder_tips"`
	SystemType                     string           `protobuf:"bytes,54,opt,name=system_type,json=systemType,proto3" json:"system_type"`
	DefaultLevelImageUrl           string           `protobuf:"bytes,55,opt,name=default_level_image_url,json=defaultLevelImageUrl,proto3" json:"default_level_image_url"` //默认等级图标
	DefaultQrcodeLogoUrl           string           `protobuf:"bytes,56,opt,name=default_qrcode_logo_url,json=defaultQrcodeLogoUrl,proto3" json:"default_qrcode_logo_url"` //默认二维码logo
	PosterData                     *PosterData      `protobuf:"bytes,57,opt,name=poster_data,json=posterData,proto3" json:"poster_data"`                                   //推广海报数据
	PosterGoodsData                *PosterGoodsData `protobuf:"bytes,58,opt,name=poster_goods_data,json=posterGoodsData,proto3" json:"poster_goods_data"`                  //商品海报数据
}

func (x *DistributionConfig) Reset() {
	*x = DistributionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributionConfig) ProtoMessage() {}

func (x *DistributionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributionConfig.ProtoReflect.Descriptor instead.
func (*DistributionConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{0}
}

func (x *DistributionConfig) GetH5Url() string {
	if x != nil {
		return x.H5Url
	}
	return ""
}

func (x *DistributionConfig) GetMobileHomePage() string {
	if x != nil {
		return x.MobileHomePage
	}
	return ""
}

func (x *DistributionConfig) GetUserPosterTopDesc() []string {
	if x != nil {
		return x.UserPosterTopDesc
	}
	return nil
}

func (x *DistributionConfig) GetUserPosterShareTitle() string {
	if x != nil {
		return x.UserPosterShareTitle
	}
	return ""
}

func (x *DistributionConfig) GetUserPosterShareDesc() string {
	if x != nil {
		return x.UserPosterShareDesc
	}
	return ""
}

func (x *DistributionConfig) GetIsUpperReturn() string {
	if x != nil {
		return x.IsUpperReturn
	}
	return ""
}

func (x *DistributionConfig) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *DistributionConfig) GetSelfBuy() string {
	if x != nil {
		return x.SelfBuy
	}
	return ""
}

func (x *DistributionConfig) GetAutoLevelType() string {
	if x != nil {
		return x.AutoLevelType
	}
	return ""
}

func (x *DistributionConfig) GetIsDownReturn() string {
	if x != nil {
		return x.IsDownReturn
	}
	return ""
}

func (x *DistributionConfig) GetDownReturnNumber() int32 {
	if x != nil {
		return x.DownReturnNumber
	}
	return 0
}

func (x *DistributionConfig) GetIsUpperReturnIntegral() string {
	if x != nil {
		return x.IsUpperReturnIntegral
	}
	return ""
}

func (x *DistributionConfig) GetUpperReturnIntegral() int64 {
	if x != nil {
		return x.UpperReturnIntegral
	}
	return 0
}

func (x *DistributionConfig) GetIsDownReturnIntegral() string {
	if x != nil {
		return x.IsDownReturnIntegral
	}
	return ""
}

func (x *DistributionConfig) GetDownReturnIntegral() int64 {
	if x != nil {
		return x.DownReturnIntegral
	}
	return 0
}

func (x *DistributionConfig) GetDownReturnIntegralPeople() int32 {
	if x != nil {
		return x.DownReturnIntegralPeople
	}
	return 0
}

func (x *DistributionConfig) GetIsAppointGoods() string {
	if x != nil {
		return x.IsAppointGoods
	}
	return ""
}

func (x *DistributionConfig) GetAppointLevelOrderMinNumber() int32 {
	if x != nil {
		return x.AppointLevelOrderMinNumber
	}
	return 0
}

func (x *DistributionConfig) GetAppointLevelGoodsMinNumber() int32 {
	if x != nil {
		return x.AppointLevelGoodsMinNumber
	}
	return 0
}

func (x *DistributionConfig) GetAppointGoodsProfitNumber() int32 {
	if x != nil {
		return x.AppointGoodsProfitNumber
	}
	return 0
}

func (x *DistributionConfig) GetAppointGoodsSaleNumber() int32 {
	if x != nil {
		return x.AppointGoodsSaleNumber
	}
	return 0
}

func (x *DistributionConfig) GetAppointGoodsSalePrice() int64 {
	if x != nil {
		return x.AppointGoodsSalePrice
	}
	return 0
}

func (x *DistributionConfig) GetAppointGoodsSaleRate() int32 {
	if x != nil {
		return x.AppointGoodsSaleRate
	}
	return 0
}

func (x *DistributionConfig) GetAppointGoodsRepurchaseDiscount() string {
	if x != nil {
		return x.AppointGoodsRepurchaseDiscount
	}
	return ""
}

func (x *DistributionConfig) GetGoodsDetailIcon() string {
	if x != nil {
		return x.GoodsDetailIcon
	}
	return ""
}

func (x *DistributionConfig) GetAppointGoodsLadderIntervalTime() int64 {
	if x != nil {
		return x.AppointGoodsLadderIntervalTime
	}
	return 0
}

func (x *DistributionConfig) GetIsEnableSelfExtraction() string {
	if x != nil {
		return x.IsEnableSelfExtraction
	}
	return ""
}

func (x *DistributionConfig) GetIsBuyDefaultExtractionAddress() string {
	if x != nil {
		return x.IsBuyDefaultExtractionAddress
	}
	return ""
}

func (x *DistributionConfig) GetIsSelfExtraction() string {
	if x != nil {
		return x.IsSelfExtraction
	}
	return ""
}

func (x *DistributionConfig) GetIsSelfExtractionCloseUpper() string {
	if x != nil {
		return x.IsSelfExtractionCloseUpper
	}
	return ""
}

func (x *DistributionConfig) GetExtractionProfitLevel() string {
	if x != nil {
		return x.ExtractionProfitLevel
	}
	return ""
}

func (x *DistributionConfig) GetSelfExtractionApplyDesc() []string {
	if x != nil {
		return x.SelfExtractionApplyDesc
	}
	return nil
}

func (x *DistributionConfig) GetSelfExtractionCommonNotice() []string {
	if x != nil {
		return x.SelfExtractionCommonNotice
	}
	return nil
}

func (x *DistributionConfig) GetProfitType() string {
	if x != nil {
		return x.ProfitType
	}
	return ""
}

func (x *DistributionConfig) GetProfitSettlementLimitTime() int64 {
	if x != nil {
		return x.ProfitSettlementLimitTime
	}
	return 0
}

func (x *DistributionConfig) GetIsShowIntroduce() string {
	if x != nil {
		return x.IsShowIntroduce
	}
	return ""
}

func (x *DistributionConfig) GetUserCenterLevelDesc() []string {
	if x != nil {
		return x.UserCenterLevelDesc
	}
	return nil
}

func (x *DistributionConfig) GetNonConformityDesc() []string {
	if x != nil {
		return x.NonConformityDesc
	}
	return nil
}

func (x *DistributionConfig) GetUserCenterNotice() []string {
	if x != nil {
		return x.UserCenterNotice
	}
	return nil
}

func (x *DistributionConfig) GetAppointLevelId() int32 {
	if x != nil {
		return x.AppointLevelId
	}
	return 0
}

func (x *DistributionConfig) GetIsAdminUserLevelShow() string {
	if x != nil {
		return x.IsAdminUserLevelShow
	}
	return ""
}

func (x *DistributionConfig) GetIsAdminOrderUserReferrerShow() string {
	if x != nil {
		return x.IsAdminOrderUserReferrerShow
	}
	return ""
}

func (x *DistributionConfig) GetIsUserMenu() string {
	if x != nil {
		return x.IsUserMenu
	}
	return ""
}

func (x *DistributionConfig) GetIsUserExtractionSwitch() string {
	if x != nil {
		return x.IsUserExtractionSwitch
	}
	return ""
}

func (x *DistributionConfig) GetIsFixedPriceMultiple() string {
	if x != nil {
		return x.IsFixedPriceMultiple
	}
	return ""
}

func (x *DistributionConfig) GetIsShowSuperior() string {
	if x != nil {
		return x.IsShowSuperior
	}
	return ""
}

func (x *DistributionConfig) GetIsGoodsDetailPoster() string {
	if x != nil {
		return x.IsGoodsDetailPoster
	}
	return ""
}

func (x *DistributionConfig) GetIsRealstoreOrderNotProfit() string {
	if x != nil {
		return x.IsRealstoreOrderNotProfit
	}
	return ""
}

func (x *DistributionConfig) GetIsProfitShop() string {
	if x != nil {
		return x.IsProfitShop
	}
	return ""
}

func (x *DistributionConfig) GetIsProfitDownReturnShop() string {
	if x != nil {
		return x.IsProfitDownReturnShop
	}
	return ""
}

func (x *DistributionConfig) GetIsProfitSelfBuyShop() string {
	if x != nil {
		return x.IsProfitSelfBuyShop
	}
	return ""
}

func (x *DistributionConfig) GetAppointGoodsSaleIsUser() string {
	if x != nil {
		return x.AppointGoodsSaleIsUser
	}
	return ""
}

func (x *DistributionConfig) GetIsShowProfitLadderTips() string {
	if x != nil {
		return x.IsShowProfitLadderTips
	}
	return ""
}

func (x *DistributionConfig) GetSystemType() string {
	if x != nil {
		return x.SystemType
	}
	return ""
}

func (x *DistributionConfig) GetDefaultLevelImageUrl() string {
	if x != nil {
		return x.DefaultLevelImageUrl
	}
	return ""
}

func (x *DistributionConfig) GetDefaultQrcodeLogoUrl() string {
	if x != nil {
		return x.DefaultQrcodeLogoUrl
	}
	return ""
}

func (x *DistributionConfig) GetPosterData() *PosterData {
	if x != nil {
		return x.PosterData
	}
	return nil
}

func (x *DistributionConfig) GetPosterGoodsData() *PosterGoodsData {
	if x != nil {
		return x.PosterGoodsData
	}
	return nil
}

//商品海报
type PosterGoodsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsTitleTextColor  string `protobuf:"bytes,1,opt,name=goods_title_text_color,json=goodsTitleTextColor,proto3" json:"goods_title_text_color"`    //商品标题颜色
	GoodsSimpleTextColor string `protobuf:"bytes,2,opt,name=goods_simple_text_color,json=goodsSimpleTextColor,proto3" json:"goods_simple_text_color"` //商品简述颜色
	BottomLeftTextColor  string `protobuf:"bytes,3,opt,name=bottom_left_text_color,json=bottomLeftTextColor,proto3" json:"bottom_left_text_color"`    //底部左侧文本颜色
	BottomRightTextColor string `protobuf:"bytes,4,opt,name=bottom_right_text_color,json=bottomRightTextColor,proto3" json:"bottom_right_text_color"` //底部右侧文本颜色
	BottomLeftText       string `protobuf:"bytes,5,opt,name=bottom_left_text,json=bottomLeftText,proto3" json:"bottom_left_text"`                     //底部左侧文本
	BottomRightText      string `protobuf:"bytes,6,opt,name=bottom_right_text,json=bottomRightText,proto3" json:"bottom_right_text"`                  //底部右侧文本
}

func (x *PosterGoodsData) Reset() {
	*x = PosterGoodsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PosterGoodsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PosterGoodsData) ProtoMessage() {}

func (x *PosterGoodsData) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PosterGoodsData.ProtoReflect.Descriptor instead.
func (*PosterGoodsData) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{1}
}

func (x *PosterGoodsData) GetGoodsTitleTextColor() string {
	if x != nil {
		return x.GoodsTitleTextColor
	}
	return ""
}

func (x *PosterGoodsData) GetGoodsSimpleTextColor() string {
	if x != nil {
		return x.GoodsSimpleTextColor
	}
	return ""
}

func (x *PosterGoodsData) GetBottomLeftTextColor() string {
	if x != nil {
		return x.BottomLeftTextColor
	}
	return ""
}

func (x *PosterGoodsData) GetBottomRightTextColor() string {
	if x != nil {
		return x.BottomRightTextColor
	}
	return ""
}

func (x *PosterGoodsData) GetBottomLeftText() string {
	if x != nil {
		return x.BottomLeftText
	}
	return ""
}

func (x *PosterGoodsData) GetBottomRightText() string {
	if x != nil {
		return x.BottomRightText
	}
	return ""
}

//推广海报
type PosterData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Backdrop           string `protobuf:"bytes,1,opt,name=backdrop,proto3" json:"backdrop"`                                                  //海报背景图片
	AvatarWidth        int64  `protobuf:"varint,2,opt,name=avatar_width,json=avatarWidth,proto3" json:"avatar_width"`                        //头像宽度
	AvatarBorderStyle  string `protobuf:"bytes,3,opt,name=avatar_border_style,json=avatarBorderStyle,proto3" json:"avatar_border_style"`     //头像样式
	AvatarTop          int64  `protobuf:"varint,4,opt,name=avatar_top,json=avatarTop,proto3" json:"avatar_top"`                              //
	AvatarLeft         int64  `protobuf:"varint,5,opt,name=avatar_left,json=avatarLeft,proto3" json:"avatar_left"`                           //
	QrcodeWidth        int64  `protobuf:"varint,6,opt,name=qrcode_width,json=qrcodeWidth,proto3" json:"qrcode_width"`                        //二维码宽度
	QrcodeTop          int64  `protobuf:"varint,7,opt,name=qrcode_top,json=qrcodeTop,proto3" json:"qrcode_top"`                              //
	QrcodeLeft         int64  `protobuf:"varint,8,opt,name=qrcode_left,json=qrcodeLeft,proto3" json:"qrcode_left"`                           //
	QrcodeBorderStyle  string `protobuf:"bytes,9,opt,name=qrcode_border_style,json=qrcodeBorderStyle,proto3" json:"qrcode_border_style"`     //二维码样式
	NicknameColor      string `protobuf:"bytes,10,opt,name=nickname_color,json=nicknameColor,proto3" json:"nickname_color"`                  //昵称颜色
	NicknameAutoCenter string `protobuf:"bytes,11,opt,name=nickname_auto_center,json=nicknameAutoCenter,proto3" json:"nickname_auto_center"` //自动计算居中位置
	NicknameTop        int64  `protobuf:"varint,12,opt,name=nickname_top,json=nicknameTop,proto3" json:"nickname_top"`                       //
	NicknameLeft       int64  `protobuf:"varint,13,opt,name=nickname_left,json=nicknameLeft,proto3" json:"nickname_left"`                    //
	CreatedAt          string `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt          string `protobuf:"bytes,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
}

func (x *PosterData) Reset() {
	*x = PosterData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PosterData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PosterData) ProtoMessage() {}

func (x *PosterData) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PosterData.ProtoReflect.Descriptor instead.
func (*PosterData) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{2}
}

func (x *PosterData) GetBackdrop() string {
	if x != nil {
		return x.Backdrop
	}
	return ""
}

func (x *PosterData) GetAvatarWidth() int64 {
	if x != nil {
		return x.AvatarWidth
	}
	return 0
}

func (x *PosterData) GetAvatarBorderStyle() string {
	if x != nil {
		return x.AvatarBorderStyle
	}
	return ""
}

func (x *PosterData) GetAvatarTop() int64 {
	if x != nil {
		return x.AvatarTop
	}
	return 0
}

func (x *PosterData) GetAvatarLeft() int64 {
	if x != nil {
		return x.AvatarLeft
	}
	return 0
}

func (x *PosterData) GetQrcodeWidth() int64 {
	if x != nil {
		return x.QrcodeWidth
	}
	return 0
}

func (x *PosterData) GetQrcodeTop() int64 {
	if x != nil {
		return x.QrcodeTop
	}
	return 0
}

func (x *PosterData) GetQrcodeLeft() int64 {
	if x != nil {
		return x.QrcodeLeft
	}
	return 0
}

func (x *PosterData) GetQrcodeBorderStyle() string {
	if x != nil {
		return x.QrcodeBorderStyle
	}
	return ""
}

func (x *PosterData) GetNicknameColor() string {
	if x != nil {
		return x.NicknameColor
	}
	return ""
}

func (x *PosterData) GetNicknameAutoCenter() string {
	if x != nil {
		return x.NicknameAutoCenter
	}
	return ""
}

func (x *PosterData) GetNicknameTop() int64 {
	if x != nil {
		return x.NicknameTop
	}
	return 0
}

func (x *PosterData) GetNicknameLeft() int64 {
	if x != nil {
		return x.NicknameLeft
	}
	return 0
}

func (x *PosterData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PosterData) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type PosterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsClearAll  string `protobuf:"bytes,1,opt,name=is_clear_all,json=isClearAll,proto3" json:"is_clear_all"`    //清除全部
	IsClearUser string `protobuf:"bytes,2,opt,name=is_clear_user,json=isClearUser,proto3" json:"is_clear_user"` //清除用户
}

func (x *PosterRequest) Reset() {
	*x = PosterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PosterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PosterRequest) ProtoMessage() {}

func (x *PosterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PosterRequest.ProtoReflect.Descriptor instead.
func (*PosterRequest) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{3}
}

func (x *PosterRequest) GetIsClearAll() string {
	if x != nil {
		return x.IsClearAll
	}
	return ""
}

func (x *PosterRequest) GetIsClearUser() string {
	if x != nil {
		return x.IsClearUser
	}
	return ""
}

type ConfigureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *DistributionConfig `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error       `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *ConfigureResponse) Reset() {
	*x = ConfigureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureResponse) ProtoMessage() {}

func (x *ConfigureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureResponse.ProtoReflect.Descriptor instead.
func (*ConfigureResponse) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigureResponse) GetData() *DistributionConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigureResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_configureService_proto protoreflect.FileDescriptor

var file_configureService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x18, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x15, 0x0a, 0x06,
	0x68, 0x35, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x68, 0x35,
	0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x68, 0x6f,
	0x6d, 0x65, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a,
	0x14, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x70,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x75, 0x73, 0x65,
	0x72, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x70, 0x44, 0x65, 0x73, 0x63, 0x12, 0x35,
	0x0a, 0x17, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x75, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x6f,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73,
	0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x55, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x66,
	0x5f, 0x62, 0x75, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x6c, 0x66,
	0x42, 0x75, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x75,
	0x74, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69,
	0x73, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x64,
	0x6f, 0x77, 0x6e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x37, 0x0a, 0x18, 0x69, 0x73, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x69, 0x73, 0x55, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x75, 0x70, 0x70, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x75, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x17,
	0x69, 0x73, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69,
	0x73, 0x44, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x3d, 0x0a, 0x1b, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x5f, 0x70, 0x65,
	0x6f, 0x70, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x64, 0x6f, 0x77, 0x6e,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x50, 0x65,
	0x6f, 0x70, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x69, 0x73, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x42,
	0x0a, 0x1e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x42, 0x0a, 0x1e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x61, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4d, 0x69, 0x6e,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x1b, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x19, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x61, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x37, 0x0a, 0x18, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x15, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x53, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x61, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x49, 0x0a, 0x21, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x72, 0x65, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x22, 0x61, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x1e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x65, 0x6c, 0x66, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48,
	0x0a, 0x21, 0x69, 0x73, 0x5f, 0x62, 0x75, 0x79, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x69, 0x73, 0x42, 0x75, 0x79,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x73,
	0x65, 0x6c, 0x66, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x1e, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x6c,
	0x66, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a,
	0x69, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x55, 0x70, 0x70, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x3b, 0x0a, 0x1a, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x20, 0x20, 0x03, 0x28, 0x09, 0x52, 0x17, 0x73, 0x65, 0x6c, 0x66, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x41, 0x0a, 0x1d, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x18, 0x21, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1a, 0x73, 0x65, 0x6c, 0x66, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x12, 0x33, 0x0a, 0x16, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x25, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x44, 0x65, 0x73, 0x63, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x26, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x11, 0x6e, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x69, 0x74,
	0x79, 0x44, 0x65, 0x73, 0x63, 0x12, 0x2c, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x27, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x36, 0x0a,
	0x18, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x47, 0x0a, 0x21, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1c, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x20,
	0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x2b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75,
	0x12, 0x39, 0x0a, 0x19, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x2c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x69, 0x73, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x35, 0x0a, 0x17, 0x69,
	0x73, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x73,
	0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73,
	0x53, 0x68, 0x6f, 0x77, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x16,
	0x69, 0x73, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f,
	0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x69, 0x73,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x40, 0x0a, 0x1d, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x69, 0x73, 0x52, 0x65, 0x61, 0x6c,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x5f, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x31, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x73, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x3a, 0x0a, 0x1a, 0x69, 0x73, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x69,
	0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x34, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x62, 0x75, 0x79, 0x5f, 0x73, 0x68, 0x6f, 0x70,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x53, 0x65, 0x6c, 0x66, 0x42, 0x75, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x3a, 0x0a, 0x1a, 0x61,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x61, 0x6c,
	0x65, 0x5f, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x61, 0x6c,
	0x65, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x1a, 0x69, 0x73, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x5f, 0x6c, 0x61, 0x64, 0x64, 0x65, 0x72,
	0x5f, 0x74, 0x69, 0x70, 0x73, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x69, 0x73, 0x53,
	0x68, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x54,
	0x69, 0x70, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x37, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x17, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6c, 0x6f,
	0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x55,
	0x72, 0x6c, 0x12, 0x35, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x70,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x11, 0x70, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x3a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0f, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x22, 0xbf, 0x02, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x16, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x17, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x33, 0x0a, 0x16, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x17, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10,
	0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x4c, 0x65,
	0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d,
	0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65,
	0x78, 0x74, 0x22, 0xad, 0x04, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x64, 0x72, 0x6f, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x64, 0x72, 0x6f, 0x70, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x2e, 0x0a, 0x13, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x62, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x6f, 0x70, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4c, 0x65, 0x66, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x6f,
	0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x54,
	0x6f, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6c, 0x65, 0x66,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x4c,
	0x65, 0x66, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x62, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x70, 0x12,
	0x23, 0x0a, 0x0d, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x65, 0x66, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x4c, 0x65, 0x66, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x55, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f,
	0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x41, 0x6c, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x73,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x22, 0x6a, 0x0a, 0x11, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xd2, 0x03, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x53, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x45, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x50, 0x6f,
	0x73, 0x74, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0b, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a,
	0x0a, 0x10, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e,
	0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_configureService_proto_rawDescOnce sync.Once
	file_configureService_proto_rawDescData = file_configureService_proto_rawDesc
)

func file_configureService_proto_rawDescGZIP() []byte {
	file_configureService_proto_rawDescOnce.Do(func() {
		file_configureService_proto_rawDescData = protoimpl.X.CompressGZIP(file_configureService_proto_rawDescData)
	})
	return file_configureService_proto_rawDescData
}

var file_configureService_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_configureService_proto_goTypes = []interface{}{
	(*DistributionConfig)(nil), // 0: services.DistributionConfig
	(*PosterGoodsData)(nil),    // 1: services.PosterGoodsData
	(*PosterData)(nil),         // 2: services.PosterData
	(*PosterRequest)(nil),      // 3: services.PosterRequest
	(*ConfigureResponse)(nil),  // 4: services.ConfigureResponse
	(*common.Error)(nil),       // 5: common.Error
}
var file_configureService_proto_depIdxs = []int32{
	2,  // 0: services.DistributionConfig.poster_data:type_name -> services.PosterData
	1,  // 1: services.DistributionConfig.poster_goods_data:type_name -> services.PosterGoodsData
	0,  // 2: services.ConfigureResponse.data:type_name -> services.DistributionConfig
	5,  // 3: services.ConfigureResponse.error:type_name -> common.Error
	0,  // 4: services.ConfigureService.GetConfig:input_type -> services.DistributionConfig
	0,  // 5: services.ConfigureService.SaveConfig:input_type -> services.DistributionConfig
	2,  // 6: services.ConfigureService.SavePosterData:input_type -> services.PosterData
	1,  // 7: services.ConfigureService.SavePosterGoodsData:input_type -> services.PosterGoodsData
	3,  // 8: services.ConfigureService.ClearPoster:input_type -> services.PosterRequest
	3,  // 9: services.ConfigureService.ClearPosterGoods:input_type -> services.PosterRequest
	4,  // 10: services.ConfigureService.GetConfig:output_type -> services.ConfigureResponse
	4,  // 11: services.ConfigureService.SaveConfig:output_type -> services.ConfigureResponse
	4,  // 12: services.ConfigureService.SavePosterData:output_type -> services.ConfigureResponse
	4,  // 13: services.ConfigureService.SavePosterGoodsData:output_type -> services.ConfigureResponse
	4,  // 14: services.ConfigureService.ClearPoster:output_type -> services.ConfigureResponse
	4,  // 15: services.ConfigureService.ClearPosterGoods:output_type -> services.ConfigureResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_configureService_proto_init() }
func file_configureService_proto_init() {
	if File_configureService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_configureService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PosterGoodsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PosterData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PosterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_configureService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_configureService_proto_goTypes,
		DependencyIndexes: file_configureService_proto_depIdxs,
		MessageInfos:      file_configureService_proto_msgTypes,
	}.Build()
	File_configureService_proto = out.File
	file_configureService_proto_rawDesc = nil
	file_configureService_proto_goTypes = nil
	file_configureService_proto_depIdxs = nil
}
