// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: purchaseService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 购物车信息
type Cart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderType         string            `protobuf:"bytes,1,opt,name=order_type,json=orderType,proto3" json:"order_type"`
	UserNote          string            `protobuf:"bytes,2,opt,name=user_note,json=userNote,proto3" json:"user_note"`
	TotalPrice        int64             `protobuf:"varint,3,opt,name=total_price,json=totalPrice,proto3" json:"total_price"`                      //订单总价
	ActualPrice       int64             `protobuf:"varint,4,opt,name=actual_price,json=actualPrice,proto3" json:"actual_price"`                   //订单实际支付金额(已减去优惠金额, 已加上增加金额)
	IncreasePrice     int64             `protobuf:"varint,5,opt,name=increase_price,json=increasePrice,proto3" json:"increase_price"`             //增加金额
	PreferentialPrice int64             `protobuf:"varint,6,opt,name=preferential_price,json=preferentialPrice,proto3" json:"preferential_price"` //优惠金额
	SpecWeightTotal   int64             `protobuf:"varint,7,opt,name=spec_weight_total,json=specWeightTotal,proto3" json:"spec_weight_total"`     //规格重量总计
	SpecVolumeTotal   int64             `protobuf:"varint,8,opt,name=spec_volume_total,json=specVolumeTotal,proto3" json:"spec_volume_total"`     //规格体积总计
	BuyCount          float32           `protobuf:"fixed32,9,opt,name=buy_count,json=buyCount,proto3" json:"buy_count"`                           //购买商品总数量(总件数+总称重（千克）)
	BuyNumberCount    int64             `protobuf:"varint,10,opt,name=buy_number_count,json=buyNumberCount,proto3" json:"buy_number_count"`       //购买商品总件数（非称重商品）
	BuyWeightCount    int64             `protobuf:"varint,11,opt,name=buy_weight_count,json=buyWeightCount,proto3" json:"buy_weight_count"`       //购买商品总秤重（称重商品.克）
	IsScatter         string            `protobuf:"bytes,15,opt,name=is_scatter,json=isScatter,proto3" json:"is_scatter"`                         //是否散客（0否，1是）
	CashierHangingId  int64             `protobuf:"varint,16,opt,name=cashier_hanging_id,json=cashierHangingId,proto3" json:"cashier_hanging_id"` //挂单ID
	ModifyPriceType   string            `protobuf:"bytes,17,opt,name=modify_price_type,json=modifyPriceType,proto3" json:"modify_price_type"`     //整单改价类型
	ModifyPriceValue  int64             `protobuf:"varint,18,opt,name=modify_price_value,json=modifyPriceValue,proto3" json:"modify_price_value"` //整单改价值
	RealstoreId       int64             `protobuf:"varint,19,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`                  //门店ID
	MemberId          int64             `protobuf:"varint,20,opt,name=member_id,json=memberId,proto3" json:"member_id"`                           //会员ID
	TableCodeId       int64             `protobuf:"varint,21,opt,name=table_code_id,json=tableCodeId,proto3" json:"table_code_id"`                //卓码ID
	BuyDatetimeValue  string            `protobuf:"bytes,22,opt,name=buy_datetime_value,json=buyDatetimeValue,proto3" json:"buy_datetime_value"`
	PaymentId         int32             `protobuf:"varint,23,opt,name=payment_id,json=paymentId,proto3" json:"payment_id"`            //选中的支付方式
	CouponId          int64             `protobuf:"varint,24,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id"`               //选中的优惠劵凭证ID
	UseIntegral       int64             `protobuf:"varint,25,opt,name=use_integral,json=useIntegral,proto3" json:"use_integral"`      //使用的积分数
	UseSurplus        int64             `protobuf:"varint,26,opt,name=use_surplus,json=useSurplus,proto3" json:"use_surplus"`         //使用的余额数
	Member            *MemberInfo       `protobuf:"bytes,28,opt,name=member,proto3" json:"member"`                                    //会员信息
	AddressData       *OrderAddress     `protobuf:"bytes,29,opt,name=address_data,json=addressData,proto3" json:"address_data"`       //收件地址
	ExtensionData     []*OrderExtension `protobuf:"bytes,30,rep,name=extension_data,json=extensionData,proto3" json:"extension_data"` //扩展数据
	Commodities       []*CartCommodity  `protobuf:"bytes,31,rep,name=commodities,proto3" json:"commodities"`                          //商品列表
}

func (x *Cart) Reset() {
	*x = Cart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchaseService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cart) ProtoMessage() {}

func (x *Cart) ProtoReflect() protoreflect.Message {
	mi := &file_purchaseService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cart.ProtoReflect.Descriptor instead.
func (*Cart) Descriptor() ([]byte, []int) {
	return file_purchaseService_proto_rawDescGZIP(), []int{0}
}

func (x *Cart) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *Cart) GetUserNote() string {
	if x != nil {
		return x.UserNote
	}
	return ""
}

func (x *Cart) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *Cart) GetActualPrice() int64 {
	if x != nil {
		return x.ActualPrice
	}
	return 0
}

func (x *Cart) GetIncreasePrice() int64 {
	if x != nil {
		return x.IncreasePrice
	}
	return 0
}

func (x *Cart) GetPreferentialPrice() int64 {
	if x != nil {
		return x.PreferentialPrice
	}
	return 0
}

func (x *Cart) GetSpecWeightTotal() int64 {
	if x != nil {
		return x.SpecWeightTotal
	}
	return 0
}

func (x *Cart) GetSpecVolumeTotal() int64 {
	if x != nil {
		return x.SpecVolumeTotal
	}
	return 0
}

func (x *Cart) GetBuyCount() float32 {
	if x != nil {
		return x.BuyCount
	}
	return 0
}

func (x *Cart) GetBuyNumberCount() int64 {
	if x != nil {
		return x.BuyNumberCount
	}
	return 0
}

func (x *Cart) GetBuyWeightCount() int64 {
	if x != nil {
		return x.BuyWeightCount
	}
	return 0
}

func (x *Cart) GetIsScatter() string {
	if x != nil {
		return x.IsScatter
	}
	return ""
}

func (x *Cart) GetCashierHangingId() int64 {
	if x != nil {
		return x.CashierHangingId
	}
	return 0
}

func (x *Cart) GetModifyPriceType() string {
	if x != nil {
		return x.ModifyPriceType
	}
	return ""
}

func (x *Cart) GetModifyPriceValue() int64 {
	if x != nil {
		return x.ModifyPriceValue
	}
	return 0
}

func (x *Cart) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *Cart) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *Cart) GetTableCodeId() int64 {
	if x != nil {
		return x.TableCodeId
	}
	return 0
}

func (x *Cart) GetBuyDatetimeValue() string {
	if x != nil {
		return x.BuyDatetimeValue
	}
	return ""
}

func (x *Cart) GetPaymentId() int32 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *Cart) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *Cart) GetUseIntegral() int64 {
	if x != nil {
		return x.UseIntegral
	}
	return 0
}

func (x *Cart) GetUseSurplus() int64 {
	if x != nil {
		return x.UseSurplus
	}
	return 0
}

func (x *Cart) GetMember() *MemberInfo {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *Cart) GetAddressData() *OrderAddress {
	if x != nil {
		return x.AddressData
	}
	return nil
}

func (x *Cart) GetExtensionData() []*OrderExtension {
	if x != nil {
		return x.ExtensionData
	}
	return nil
}

func (x *Cart) GetCommodities() []*CartCommodity {
	if x != nil {
		return x.Commodities
	}
	return nil
}

type CartCommodity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//int64  id =1;//ID
	Title         string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`                                                                                              //标题
	ImageUrl      string               `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`                                                                        //封面图片
	SpuId         int64                `protobuf:"varint,4,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`                                                                                //商品spuId
	Md5Key        string               `protobuf:"bytes,5,opt,name=md5_key,json=md5Key,proto3" json:"md5_key"`                                                                              //商品规格md5_key
	Inventory     int64                `protobuf:"varint,6,opt,name=inventory,proto3" json:"inventory"`                                                                                     //库存数量
	OriginalPrice int64                `protobuf:"varint,7,opt,name=original_price,json=originalPrice,proto3" json:"original_price"`                                                        //原价
	Price         int64                `protobuf:"varint,8,opt,name=price,proto3" json:"price"`                                                                                             //销售价格
	BuyMinNumber  int64                `protobuf:"varint,9,opt,name=buy_min_number,json=buyMinNumber,proto3" json:"buy_min_number"`                                                         //购买数量
	BuyMaxNumber  int64                `protobuf:"varint,10,opt,name=buy_max_number,json=buyMaxNumber,proto3" json:"buy_max_number"`                                                        //购买数量
	SpecWeight    int64                `protobuf:"varint,11,opt,name=spec_weight,json=specWeight,proto3" json:"spec_weight"`                                                                //规格重量
	SpecVolume    int64                `protobuf:"varint,12,opt,name=spec_volume,json=specVolume,proto3" json:"spec_volume"`                                                                //规格体积
	SpecCoding    string               `protobuf:"bytes,13,opt,name=spec_coding,json=specCoding,proto3" json:"spec_coding"`                                                                 //规格编码
	SpecBarcode   string               `protobuf:"bytes,14,opt,name=spec_barcode,json=specBarcode,proto3" json:"spec_barcode"`                                                              //规格条码
	Unit          string               `protobuf:"bytes,15,opt,name=unit,proto3" json:"unit"`                                                                                               //库存单位
	UnitRate      float32              `protobuf:"fixed32,16,opt,name=unit_rate,json=unitRate,proto3" json:"unit_rate"`                                                                     //库存单位换算率
	IsOpenWeight  string               `protobuf:"bytes,17,opt,name=is_open_weight,json=isOpenWeight,proto3" json:"is_open_weight"`                                                         //是否开启称重（0否，1是）
	Extends       map[string]string    `protobuf:"bytes,19,rep,name=extends,proto3" json:"extends" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //扩展数据
	IsInvalid     string               `protobuf:"bytes,20,opt,name=is_invalid,json=isInvalid,proto3" json:"is_invalid"`                                                                    //是否无效（0否，1是）
	IsError       string               `protobuf:"bytes,21,opt,name=is_error,json=isError,proto3" json:"is_error"`                                                                          //是否错误（0否，1是）
	ErrorMsg      string               `protobuf:"bytes,22,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg"`                                                                       //错误信息
	Stock         int64                `protobuf:"varint,23,opt,name=stock,proto3" json:"stock"`                                                                                            //购买数量
	SubtotalPrice int64                `protobuf:"varint,24,opt,name=subtotal_price,json=subtotalPrice,proto3" json:"subtotal_price"`                                                       //商品小计
	Spec          []*SpecificationData `protobuf:"bytes,25,rep,name=spec,proto3" json:"spec"`                                                                                               //规格描述
	SpecDesc      string               `protobuf:"bytes,26,opt,name=spec_desc,json=specDesc,proto3" json:"spec_desc"`
	BrandName     string               `protobuf:"bytes,27,opt,name=brand_name,json=brandName,proto3" json:"brand_name"`
	GoodsUrl      string               `protobuf:"bytes,28,opt,name=goods_url,json=goodsUrl,proto3" json:"goods_url"`
	SiteType      string               `protobuf:"bytes,29,opt,name=site_type,json=siteType,proto3" json:"site_type"`
}

func (x *CartCommodity) Reset() {
	*x = CartCommodity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchaseService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartCommodity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartCommodity) ProtoMessage() {}

func (x *CartCommodity) ProtoReflect() protoreflect.Message {
	mi := &file_purchaseService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartCommodity.ProtoReflect.Descriptor instead.
func (*CartCommodity) Descriptor() ([]byte, []int) {
	return file_purchaseService_proto_rawDescGZIP(), []int{1}
}

func (x *CartCommodity) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CartCommodity) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *CartCommodity) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *CartCommodity) GetMd5Key() string {
	if x != nil {
		return x.Md5Key
	}
	return ""
}

func (x *CartCommodity) GetInventory() int64 {
	if x != nil {
		return x.Inventory
	}
	return 0
}

func (x *CartCommodity) GetOriginalPrice() int64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *CartCommodity) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CartCommodity) GetBuyMinNumber() int64 {
	if x != nil {
		return x.BuyMinNumber
	}
	return 0
}

func (x *CartCommodity) GetBuyMaxNumber() int64 {
	if x != nil {
		return x.BuyMaxNumber
	}
	return 0
}

func (x *CartCommodity) GetSpecWeight() int64 {
	if x != nil {
		return x.SpecWeight
	}
	return 0
}

func (x *CartCommodity) GetSpecVolume() int64 {
	if x != nil {
		return x.SpecVolume
	}
	return 0
}

func (x *CartCommodity) GetSpecCoding() string {
	if x != nil {
		return x.SpecCoding
	}
	return ""
}

func (x *CartCommodity) GetSpecBarcode() string {
	if x != nil {
		return x.SpecBarcode
	}
	return ""
}

func (x *CartCommodity) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *CartCommodity) GetUnitRate() float32 {
	if x != nil {
		return x.UnitRate
	}
	return 0
}

func (x *CartCommodity) GetIsOpenWeight() string {
	if x != nil {
		return x.IsOpenWeight
	}
	return ""
}

func (x *CartCommodity) GetExtends() map[string]string {
	if x != nil {
		return x.Extends
	}
	return nil
}

func (x *CartCommodity) GetIsInvalid() string {
	if x != nil {
		return x.IsInvalid
	}
	return ""
}

func (x *CartCommodity) GetIsError() string {
	if x != nil {
		return x.IsError
	}
	return ""
}

func (x *CartCommodity) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *CartCommodity) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *CartCommodity) GetSubtotalPrice() int64 {
	if x != nil {
		return x.SubtotalPrice
	}
	return 0
}

func (x *CartCommodity) GetSpec() []*SpecificationData {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *CartCommodity) GetSpecDesc() string {
	if x != nil {
		return x.SpecDesc
	}
	return ""
}

func (x *CartCommodity) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *CartCommodity) GetGoodsUrl() string {
	if x != nil {
		return x.GoodsUrl
	}
	return ""
}

func (x *CartCommodity) GetSiteType() string {
	if x != nil {
		return x.SiteType
	}
	return ""
}

// 购买确认数据
type PurchaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cart        *Cart             `protobuf:"bytes,1,opt,name=cart,proto3" json:"cart"`                                                                                                                          //购物车信息
	Submit      *CartSubmit       `protobuf:"bytes,2,opt,name=submit,proto3" json:"submit"`                                                                                                                      //购物车提交
	AddressList []*OrderAddress   `protobuf:"bytes,3,rep,name=address_list,json=addressList,proto3" json:"address_list"`                                                                                         //收件地址
	Pager       *common.Pager     `protobuf:"bytes,4,opt,name=pager,proto3" json:"pager"`                                                                                                                        //分页
	PluginsData map[string]string `protobuf:"bytes,6,rep,name=plugins_data,json=pluginsData,proto3" json:"plugins_data" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //插件数据
	Info        string            `protobuf:"bytes,7,opt,name=info,proto3" json:"info"`
}

func (x *PurchaseResponse) Reset() {
	*x = PurchaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchaseService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseResponse) ProtoMessage() {}

func (x *PurchaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_purchaseService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseResponse.ProtoReflect.Descriptor instead.
func (*PurchaseResponse) Descriptor() ([]byte, []int) {
	return file_purchaseService_proto_rawDescGZIP(), []int{2}
}

func (x *PurchaseResponse) GetCart() *Cart {
	if x != nil {
		return x.Cart
	}
	return nil
}

func (x *PurchaseResponse) GetSubmit() *CartSubmit {
	if x != nil {
		return x.Submit
	}
	return nil
}

func (x *PurchaseResponse) GetAddressList() []*OrderAddress {
	if x != nil {
		return x.AddressList
	}
	return nil
}

func (x *PurchaseResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *PurchaseResponse) GetPluginsData() map[string]string {
	if x != nil {
		return x.PluginsData
	}
	return nil
}

func (x *PurchaseResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

// 购买提交数据
type CartSubmit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderAllotIds []int64 `protobuf:"varint,1,rep,packed,name=order_allot_ids,json=orderAllotIds,proto3" json:"order_allot_ids"`
	OrderIds      []int64 `protobuf:"varint,2,rep,packed,name=order_ids,json=orderIds,proto3" json:"order_ids"`
	IsPayment     string  `protobuf:"bytes,3,opt,name=is_payment,json=isPayment,proto3" json:"is_payment"`     //是否已支付（0否，1是）
	TotalPrice    int64   `protobuf:"varint,4,opt,name=total_price,json=totalPrice,proto3" json:"total_price"` //实付金额
}

func (x *CartSubmit) Reset() {
	*x = CartSubmit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchaseService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartSubmit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartSubmit) ProtoMessage() {}

func (x *CartSubmit) ProtoReflect() protoreflect.Message {
	mi := &file_purchaseService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartSubmit.ProtoReflect.Descriptor instead.
func (*CartSubmit) Descriptor() ([]byte, []int) {
	return file_purchaseService_proto_rawDescGZIP(), []int{3}
}

func (x *CartSubmit) GetOrderAllotIds() []int64 {
	if x != nil {
		return x.OrderAllotIds
	}
	return nil
}

func (x *CartSubmit) GetOrderIds() []int64 {
	if x != nil {
		return x.OrderIds
	}
	return nil
}

func (x *CartSubmit) GetIsPayment() string {
	if x != nil {
		return x.IsPayment
	}
	return ""
}

func (x *CartSubmit) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

// 门店下单请求
type PurchaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderType             string  `protobuf:"bytes,1,opt,name=order_type,json=orderType,proto3" json:"order_type"`
	IsRealstoreCashier    string  `protobuf:"bytes,2,opt,name=is_realstore_cashier,json=isRealstoreCashier,proto3" json:"is_realstore_cashier"`
	AddressData           string  `protobuf:"bytes,3,opt,name=address_data,json=addressData,proto3" json:"address_data"`
	CashierHangingId      int32   `protobuf:"varint,4,opt,name=cashier_hanging_id,json=cashierHangingId,proto3" json:"cashier_hanging_id"`
	UserNote              string  `protobuf:"bytes,5,opt,name=user_note,json=userNote,proto3" json:"user_note"`
	OrderModifyPriceType  string  `protobuf:"bytes,6,opt,name=order_modify_price_type,json=orderModifyPriceType,proto3" json:"order_modify_price_type"`
	OrderModifyPriceValue int64   `protobuf:"varint,7,opt,name=order_modify_price_value,json=orderModifyPriceValue,proto3" json:"order_modify_price_value"`
	RealstoreId           int64   `protobuf:"varint,8,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`
	MemberId              int64   `protobuf:"varint,9,opt,name=member_id,json=memberId,proto3" json:"member_id"`
	TableCodeId           int64   `protobuf:"varint,10,opt,name=table_code_id,json=tableCodeId,proto3" json:"table_code_id"`
	BuyDatetimeValue      string  `protobuf:"bytes,11,opt,name=buy_datetime_value,json=buyDatetimeValue,proto3" json:"buy_datetime_value"`
	PaymentId             int32   `protobuf:"varint,12,opt,name=payment_id,json=paymentId,proto3" json:"payment_id"`       //选中的支付方式
	CouponId              int64   `protobuf:"varint,13,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id"`          //选中的优惠劵凭证ID
	UseIntegral           int64   `protobuf:"varint,14,opt,name=use_integral,json=useIntegral,proto3" json:"use_integral"` //使用的积分数
	PaymentCode           string  `protobuf:"bytes,15,opt,name=payment_code,json=paymentCode,proto3" json:"payment_code"`  //支付码
	OrderIds              []int64 `protobuf:"varint,16,rep,packed,name=order_ids,json=orderIds,proto3" json:"order_ids"`
}

func (x *PurchaseRequest) Reset() {
	*x = PurchaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchaseService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseRequest) ProtoMessage() {}

func (x *PurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_purchaseService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseRequest.ProtoReflect.Descriptor instead.
func (*PurchaseRequest) Descriptor() ([]byte, []int) {
	return file_purchaseService_proto_rawDescGZIP(), []int{4}
}

func (x *PurchaseRequest) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *PurchaseRequest) GetIsRealstoreCashier() string {
	if x != nil {
		return x.IsRealstoreCashier
	}
	return ""
}

func (x *PurchaseRequest) GetAddressData() string {
	if x != nil {
		return x.AddressData
	}
	return ""
}

func (x *PurchaseRequest) GetCashierHangingId() int32 {
	if x != nil {
		return x.CashierHangingId
	}
	return 0
}

func (x *PurchaseRequest) GetUserNote() string {
	if x != nil {
		return x.UserNote
	}
	return ""
}

func (x *PurchaseRequest) GetOrderModifyPriceType() string {
	if x != nil {
		return x.OrderModifyPriceType
	}
	return ""
}

func (x *PurchaseRequest) GetOrderModifyPriceValue() int64 {
	if x != nil {
		return x.OrderModifyPriceValue
	}
	return 0
}

func (x *PurchaseRequest) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *PurchaseRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *PurchaseRequest) GetTableCodeId() int64 {
	if x != nil {
		return x.TableCodeId
	}
	return 0
}

func (x *PurchaseRequest) GetBuyDatetimeValue() string {
	if x != nil {
		return x.BuyDatetimeValue
	}
	return ""
}

func (x *PurchaseRequest) GetPaymentId() int32 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *PurchaseRequest) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *PurchaseRequest) GetUseIntegral() int64 {
	if x != nil {
		return x.UseIntegral
	}
	return 0
}

func (x *PurchaseRequest) GetPaymentCode() string {
	if x != nil {
		return x.PaymentCode
	}
	return ""
}

func (x *PurchaseRequest) GetOrderIds() []int64 {
	if x != nil {
		return x.OrderIds
	}
	return nil
}

// 用户商品查询请求
type UserGoodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged       int64  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize    int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords    string `protobuf:"bytes,3,opt,name=keywords,proto3" json:"keywords"`
	Id          int32  `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	Name        string `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
	Platform    string `protobuf:"bytes,6,opt,name=platform,proto3" json:"platform"`
	IsEnable    string `protobuf:"bytes,7,opt,name=is_enable,json=isEnable,proto3" json:"is_enable"`
	RealstoreId string `protobuf:"bytes,8,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`
	EventType   string `protobuf:"bytes,9,opt,name=event_type,json=eventType,proto3" json:"event_type"`
}

func (x *UserGoodsRequest) Reset() {
	*x = UserGoodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchaseService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGoodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGoodsRequest) ProtoMessage() {}

func (x *UserGoodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_purchaseService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGoodsRequest.ProtoReflect.Descriptor instead.
func (*UserGoodsRequest) Descriptor() ([]byte, []int) {
	return file_purchaseService_proto_rawDescGZIP(), []int{5}
}

func (x *UserGoodsRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *UserGoodsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *UserGoodsRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *UserGoodsRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserGoodsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserGoodsRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *UserGoodsRequest) GetIsEnable() string {
	if x != nil {
		return x.IsEnable
	}
	return ""
}

func (x *UserGoodsRequest) GetRealstoreId() string {
	if x != nil {
		return x.RealstoreId
	}
	return ""
}

func (x *UserGoodsRequest) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

var File_purchaseService_proto protoreflect.FileDescriptor

var file_purchaseService_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc3, 0x08, 0x0a, 0x04,
	0x43, 0x61, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x6e,
	0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x70,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x70,
	0x65, 0x63, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x62, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x28, 0x0a, 0x10, 0x62, 0x75, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x75, 0x79, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x75, 0x79,
	0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x75, 0x79, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x53, 0x63, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x5f, 0x68, 0x61,
	0x6e, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x12, 0x62, 0x75, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x75, 0x79, 0x44,
	0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x75, 0x73, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x73, 0x65, 0x5f, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x75, 0x73, 0x65, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x06,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0c, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x22, 0xad, 0x07, 0x0a, 0x0d, 0x43, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x6d, 0x64, 0x35, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x64, 0x35, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x75, 0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x4d, 0x69,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x75, 0x79, 0x5f, 0x6d,
	0x61, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x62, 0x75, 0x79, 0x4d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x42, 0x61, 0x72, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x73,
	0x4f, 0x70, 0x65, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3e, 0x0a, 0x07, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x69, 0x74, 0x79, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x73, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x73, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73,
	0x67, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2f,
	0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x3a, 0x0a, 0x0c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xe8, 0x02, 0x0a, 0x10, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x43, 0x61, 0x72, 0x74, 0x52, 0x04, 0x63, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x52, 0x06, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x0c, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x1a, 0x3e, 0x0a, 0x10,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x91, 0x01, 0x0a,
	0x0a, 0x43, 0x61, 0x72, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x74,
	0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x22, 0xf1, 0x04, 0x0a, 0x0f, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x69, 0x73, 0x52, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x61,
	0x73, 0x68, 0x69, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x61, 0x73, 0x68,
	0x69, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x48, 0x61, 0x6e,
	0x67, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x6f, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x6f, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x75, 0x79, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x75, 0x79, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x22, 0x80, 0x02, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x61,
	0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x32, 0x9a, 0x03, 0x0a, 0x0f, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x43,
	0x61, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x74, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x61, 0x72, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x41, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x12, 0x19, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x09, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_purchaseService_proto_rawDescOnce sync.Once
	file_purchaseService_proto_rawDescData = file_purchaseService_proto_rawDesc
)

func file_purchaseService_proto_rawDescGZIP() []byte {
	file_purchaseService_proto_rawDescOnce.Do(func() {
		file_purchaseService_proto_rawDescData = protoimpl.X.CompressGZIP(file_purchaseService_proto_rawDescData)
	})
	return file_purchaseService_proto_rawDescData
}

var file_purchaseService_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_purchaseService_proto_goTypes = []interface{}{
	(*Cart)(nil),              // 0: services.Cart
	(*CartCommodity)(nil),     // 1: services.CartCommodity
	(*PurchaseResponse)(nil),  // 2: services.PurchaseResponse
	(*CartSubmit)(nil),        // 3: services.CartSubmit
	(*PurchaseRequest)(nil),   // 4: services.PurchaseRequest
	(*UserGoodsRequest)(nil),  // 5: services.UserGoodsRequest
	nil,                       // 6: services.CartCommodity.ExtendsEntry
	nil,                       // 7: services.PurchaseResponse.PluginsDataEntry
	(*MemberInfo)(nil),        // 8: services.MemberInfo
	(*OrderAddress)(nil),      // 9: services.OrderAddress
	(*OrderExtension)(nil),    // 10: services.OrderExtension
	(*SpecificationData)(nil), // 11: services.SpecificationData
	(*common.Pager)(nil),      // 12: common.Pager
}
var file_purchaseService_proto_depIdxs = []int32{
	8,  // 0: services.Cart.member:type_name -> services.MemberInfo
	9,  // 1: services.Cart.address_data:type_name -> services.OrderAddress
	10, // 2: services.Cart.extension_data:type_name -> services.OrderExtension
	1,  // 3: services.Cart.commodities:type_name -> services.CartCommodity
	6,  // 4: services.CartCommodity.extends:type_name -> services.CartCommodity.ExtendsEntry
	11, // 5: services.CartCommodity.spec:type_name -> services.SpecificationData
	0,  // 6: services.PurchaseResponse.cart:type_name -> services.Cart
	3,  // 7: services.PurchaseResponse.submit:type_name -> services.CartSubmit
	9,  // 8: services.PurchaseResponse.address_list:type_name -> services.OrderAddress
	12, // 9: services.PurchaseResponse.pager:type_name -> common.Pager
	7,  // 10: services.PurchaseResponse.plugins_data:type_name -> services.PurchaseResponse.PluginsDataEntry
	0,  // 11: services.PurchaseService.CartUpdate:input_type -> services.Cart
	0,  // 12: services.PurchaseService.CartSubmit:input_type -> services.Cart
	4,  // 13: services.PurchaseService.OrderPay:input_type -> services.PurchaseRequest
	5,  // 14: services.PurchaseService.GoodsSearch:input_type -> services.UserGoodsRequest
	5,  // 15: services.PurchaseService.GoodsSpec:input_type -> services.UserGoodsRequest
	4,  // 16: services.PurchaseService.UserAddress:input_type -> services.PurchaseRequest
	2,  // 17: services.PurchaseService.CartUpdate:output_type -> services.PurchaseResponse
	2,  // 18: services.PurchaseService.CartSubmit:output_type -> services.PurchaseResponse
	2,  // 19: services.PurchaseService.OrderPay:output_type -> services.PurchaseResponse
	2,  // 20: services.PurchaseService.GoodsSearch:output_type -> services.PurchaseResponse
	2,  // 21: services.PurchaseService.GoodsSpec:output_type -> services.PurchaseResponse
	2,  // 22: services.PurchaseService.UserAddress:output_type -> services.PurchaseResponse
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_purchaseService_proto_init() }
func file_purchaseService_proto_init() {
	if File_purchaseService_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_purchaseService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purchaseService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartCommodity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purchaseService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purchaseService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartSubmit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purchaseService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purchaseService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGoodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_purchaseService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_purchaseService_proto_goTypes,
		DependencyIndexes: file_purchaseService_proto_depIdxs,
		MessageInfos:      file_purchaseService_proto_msgTypes,
	}.Build()
	File_purchaseService_proto = out.File
	file_purchaseService_proto_rawDesc = nil
	file_purchaseService_proto_goTypes = nil
	file_purchaseService_proto_depIdxs = nil
}
