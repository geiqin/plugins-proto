// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: cashierHangingService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 收银挂单
type CashierHanging struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                        //ID
	RealstoreId      int64                   `protobuf:"varint,2,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`                   //门店id
	MemberId         int64                   `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id"`                            //客户用户id
	OrderType        string                  `protobuf:"bytes,4,opt,name=order_type,json=orderType,proto3" json:"order_type"`                          //订单模式（0快递配送, 1客户自提, 2上门服务, 3虚拟产品）
	BuyCount         int64                   `protobuf:"varint,5,opt,name=buy_count,json=buyCount,proto3" json:"buy_count"`                            //购买商品总数量
	BuyNumberCount   int64                   `protobuf:"varint,6,opt,name=buy_number_count,json=buyNumberCount,proto3" json:"buy_number_count"`        //购买商品总数量
	BuyWeightCount   int64                   `protobuf:"varint,7,opt,name=buy_weight_count,json=buyWeightCount,proto3" json:"buy_weight_count"`        //购买商品总数量
	TotalPrice       int64                   `protobuf:"varint,8,opt,name=total_price,json=totalPrice,proto3" json:"total_price"`                      //订单单价
	UserNote         string                  `protobuf:"bytes,9,opt,name=user_note,json=userNote,proto3" json:"user_note"`                             //特别说明（管理员填写）
	CardValue        string                  `protobuf:"bytes,10,opt,name=card_value,json=cardValue,proto3" json:"card_value"`                         //门店次卡（json存储）
	AddressData      string                  `protobuf:"bytes,11,opt,name=address_data,json=addressData,proto3" json:"address_data"`                   //地址数据（json存储）
	Commodities      []*CashierHangingDetail `protobuf:"bytes,12,rep,name=commodities,proto3" json:"commodities"`                                      //详情数据（json存储）
	TableCodeId      int64                   `protobuf:"varint,13,opt,name=table_code_id,json=tableCodeId,proto3" json:"table_code_id"`                //桌码id
	BuyDatetimeValue string                  `protobuf:"bytes,14,opt,name=buy_datetime_value,json=buyDatetimeValue,proto3" json:"buy_datetime_value"`  //指定时间
	ChangePriceType  string                  `protobuf:"bytes,15,opt,name=change_price_type,json=changePriceType,proto3" json:"change_price_type"`     //订单改价类型（0减少、1增加）
	ChangePriceValue int64                   `protobuf:"varint,16,opt,name=change_price_value,json=changePriceValue,proto3" json:"change_price_value"` //订单改价值
	CreatedAt        string                  `protobuf:"bytes,17,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt        string                  `protobuf:"bytes,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Realstore        *Realstore              `protobuf:"bytes,19,opt,name=realstore,proto3" json:"realstore"`
	Member           *MemberInfo             `protobuf:"bytes,20,opt,name=member,proto3" json:"member"`
	OrderTypeName    string                  `protobuf:"bytes,21,opt,name=order_type_name,json=orderTypeName,proto3" json:"order_type_name"`
}

func (x *CashierHanging) Reset() {
	*x = CashierHanging{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashierHangingService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashierHanging) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashierHanging) ProtoMessage() {}

func (x *CashierHanging) ProtoReflect() protoreflect.Message {
	mi := &file_cashierHangingService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashierHanging.ProtoReflect.Descriptor instead.
func (*CashierHanging) Descriptor() ([]byte, []int) {
	return file_cashierHangingService_proto_rawDescGZIP(), []int{0}
}

func (x *CashierHanging) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CashierHanging) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *CashierHanging) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *CashierHanging) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *CashierHanging) GetBuyCount() int64 {
	if x != nil {
		return x.BuyCount
	}
	return 0
}

func (x *CashierHanging) GetBuyNumberCount() int64 {
	if x != nil {
		return x.BuyNumberCount
	}
	return 0
}

func (x *CashierHanging) GetBuyWeightCount() int64 {
	if x != nil {
		return x.BuyWeightCount
	}
	return 0
}

func (x *CashierHanging) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *CashierHanging) GetUserNote() string {
	if x != nil {
		return x.UserNote
	}
	return ""
}

func (x *CashierHanging) GetCardValue() string {
	if x != nil {
		return x.CardValue
	}
	return ""
}

func (x *CashierHanging) GetAddressData() string {
	if x != nil {
		return x.AddressData
	}
	return ""
}

func (x *CashierHanging) GetCommodities() []*CashierHangingDetail {
	if x != nil {
		return x.Commodities
	}
	return nil
}

func (x *CashierHanging) GetTableCodeId() int64 {
	if x != nil {
		return x.TableCodeId
	}
	return 0
}

func (x *CashierHanging) GetBuyDatetimeValue() string {
	if x != nil {
		return x.BuyDatetimeValue
	}
	return ""
}

func (x *CashierHanging) GetChangePriceType() string {
	if x != nil {
		return x.ChangePriceType
	}
	return ""
}

func (x *CashierHanging) GetChangePriceValue() int64 {
	if x != nil {
		return x.ChangePriceValue
	}
	return 0
}

func (x *CashierHanging) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CashierHanging) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *CashierHanging) GetRealstore() *Realstore {
	if x != nil {
		return x.Realstore
	}
	return nil
}

func (x *CashierHanging) GetMember() *MemberInfo {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *CashierHanging) GetOrderTypeName() string {
	if x != nil {
		return x.OrderTypeName
	}
	return ""
}

type CashierHangingDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpuId         int64   `protobuf:"varint,1,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`                          //商品id
	Md5Key        string  `protobuf:"bytes,2,opt,name=md5_key,json=md5Key,proto3" json:"md5_key"`                        //货品MD5KEY
	Title         string  `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`                                        //标题
	ImageUrl      string  `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`                  //标题
	Inventory     int64   `protobuf:"varint,5,opt,name=inventory,proto3" json:"inventory"`                               //库存数量
	Unit          string  `protobuf:"bytes,6,opt,name=unit,proto3" json:"unit"`                                          //单位
	UnitRate      float32 `protobuf:"fixed32,7,opt,name=unit_rate,json=unitRate,proto3" json:"unit_rate"`                //单位换算率
	IsOpenWeight  string  `protobuf:"bytes,8,opt,name=is_open_weight,json=isOpenWeight,proto3" json:"is_open_weight"`    //是否开启称重
	SpecWeight    int64   `protobuf:"varint,11,opt,name=spec_weight,json=specWeight,proto3" json:"spec_weight"`          //规格重量
	SpecVolume    int64   `protobuf:"varint,12,opt,name=spec_volume,json=specVolume,proto3" json:"spec_volume"`          //规格体积
	SpecCoding    string  `protobuf:"bytes,13,opt,name=spec_coding,json=specCoding,proto3" json:"spec_coding"`           //规格编码
	SpecBarcode   string  `protobuf:"bytes,14,opt,name=spec_barcode,json=specBarcode,proto3" json:"spec_barcode"`        //规格条码
	SpecDesc      string  `protobuf:"bytes,15,opt,name=spec_desc,json=specDesc,proto3" json:"spec_desc"`                 //规格描述
	Stock         int64   `protobuf:"varint,16,opt,name=stock,proto3" json:"stock"`                                      //购买数量
	Price         int64   `protobuf:"varint,17,opt,name=price,proto3" json:"price"`                                      //销售价格
	SubtotalPrice int64   `protobuf:"varint,18,opt,name=subtotal_price,json=subtotalPrice,proto3" json:"subtotal_price"` //商品小计
	OriginalPrice int64   `protobuf:"varint,19,opt,name=original_price,json=originalPrice,proto3" json:"original_price"` //原价
	IsError       string  `protobuf:"bytes,20,opt,name=is_error,json=isError,proto3" json:"is_error"`                    //是否错误（0否，1是）
	ErrorMsg      string  `protobuf:"bytes,21,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg"`                 //错误信息
}

func (x *CashierHangingDetail) Reset() {
	*x = CashierHangingDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashierHangingService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashierHangingDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashierHangingDetail) ProtoMessage() {}

func (x *CashierHangingDetail) ProtoReflect() protoreflect.Message {
	mi := &file_cashierHangingService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashierHangingDetail.ProtoReflect.Descriptor instead.
func (*CashierHangingDetail) Descriptor() ([]byte, []int) {
	return file_cashierHangingService_proto_rawDescGZIP(), []int{1}
}

func (x *CashierHangingDetail) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *CashierHangingDetail) GetMd5Key() string {
	if x != nil {
		return x.Md5Key
	}
	return ""
}

func (x *CashierHangingDetail) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CashierHangingDetail) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *CashierHangingDetail) GetInventory() int64 {
	if x != nil {
		return x.Inventory
	}
	return 0
}

func (x *CashierHangingDetail) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *CashierHangingDetail) GetUnitRate() float32 {
	if x != nil {
		return x.UnitRate
	}
	return 0
}

func (x *CashierHangingDetail) GetIsOpenWeight() string {
	if x != nil {
		return x.IsOpenWeight
	}
	return ""
}

func (x *CashierHangingDetail) GetSpecWeight() int64 {
	if x != nil {
		return x.SpecWeight
	}
	return 0
}

func (x *CashierHangingDetail) GetSpecVolume() int64 {
	if x != nil {
		return x.SpecVolume
	}
	return 0
}

func (x *CashierHangingDetail) GetSpecCoding() string {
	if x != nil {
		return x.SpecCoding
	}
	return ""
}

func (x *CashierHangingDetail) GetSpecBarcode() string {
	if x != nil {
		return x.SpecBarcode
	}
	return ""
}

func (x *CashierHangingDetail) GetSpecDesc() string {
	if x != nil {
		return x.SpecDesc
	}
	return ""
}

func (x *CashierHangingDetail) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *CashierHangingDetail) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CashierHangingDetail) GetSubtotalPrice() int64 {
	if x != nil {
		return x.SubtotalPrice
	}
	return 0
}

func (x *CashierHangingDetail) GetOriginalPrice() int64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *CashierHangingDetail) GetIsError() string {
	if x != nil {
		return x.IsError
	}
	return ""
}

func (x *CashierHangingDetail) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

type CashierHangingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged       int64  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize    int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords    string `protobuf:"bytes,3,opt,name=keywords,proto3" json:"keywords"`
	Id          int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	Name        string `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
	OrderType   string `protobuf:"bytes,6,opt,name=order_type,json=orderType,proto3" json:"order_type"`
	RealstoreId int64  `protobuf:"varint,7,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`
	MemberId    int64  `protobuf:"varint,8,opt,name=member_id,json=memberId,proto3" json:"member_id"`
	TableCodeId int64  `protobuf:"varint,9,opt,name=table_code_id,json=tableCodeId,proto3" json:"table_code_id"`
}

func (x *CashierHangingRequest) Reset() {
	*x = CashierHangingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashierHangingService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashierHangingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashierHangingRequest) ProtoMessage() {}

func (x *CashierHangingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashierHangingService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashierHangingRequest.ProtoReflect.Descriptor instead.
func (*CashierHangingRequest) Descriptor() ([]byte, []int) {
	return file_cashierHangingService_proto_rawDescGZIP(), []int{2}
}

func (x *CashierHangingRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *CashierHangingRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *CashierHangingRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *CashierHangingRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CashierHangingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CashierHangingRequest) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *CashierHangingRequest) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *CashierHangingRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *CashierHangingRequest) GetTableCodeId() int64 {
	if x != nil {
		return x.TableCodeId
	}
	return 0
}

type CashierHangingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *CashierHanging   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager     `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*CashierHanging `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Count  int64             `protobuf:"varint,4,opt,name=count,proto3" json:"count"`
	Info   string            `protobuf:"bytes,5,opt,name=info,proto3" json:"info"`
}

func (x *CashierHangingResponse) Reset() {
	*x = CashierHangingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashierHangingService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashierHangingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashierHangingResponse) ProtoMessage() {}

func (x *CashierHangingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashierHangingService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashierHangingResponse.ProtoReflect.Descriptor instead.
func (*CashierHangingResponse) Descriptor() ([]byte, []int) {
	return file_cashierHangingService_proto_rawDescGZIP(), []int{3}
}

func (x *CashierHangingResponse) GetEntity() *CashierHanging {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *CashierHangingResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *CashierHangingResponse) GetItems() []*CashierHanging {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CashierHangingResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CashierHangingResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_cashierHangingService_proto protoreflect.FileDescriptor

var file_cashierHangingService_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x72, 0x65, 0x61, 0x6c,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x06, 0x0a, 0x0e, 0x43, 0x61,
	0x73, 0x68, 0x69, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x62, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x75, 0x79, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x62, 0x75, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x75, 0x79, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x75,
	0x79, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x61, 0x72, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x73,
	0x68, 0x69, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x0d, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x75, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x62, 0x75, 0x79, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x2a, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x31, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xc3, 0x04, 0x0a, 0x14, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x48, 0x61, 0x6e,
	0x67, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70,
	0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x64, 0x35, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x64, 0x35, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x43,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x62, 0x61,
	0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x70, 0x65,
	0x63, 0x42, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x65,
	0x63, 0x44, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x69, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x8d, 0x02, 0x0a, 0x15, 0x43, 0x61, 0x73, 0x68,
	0x69, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0xc9, 0x01, 0x0a, 0x16, 0x43, 0x61, 0x73, 0x68,
	0x69, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61,
	0x73, 0x68, 0x69, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x67, 0x69,
	0x6e, 0x67, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x32, 0x81, 0x04, 0x0a, 0x15, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x48,
	0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a,
	0x04, 0x53, 0x61, 0x76, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x1a,
	0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x69,
	0x65, 0x72, 0x48, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x67, 0x69,
	0x6e, 0x67, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61,
	0x73, 0x68, 0x69, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72,
	0x48, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x67, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61,
	0x73, 0x68, 0x69, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x1a, 0x20, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x48,
	0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x67, 0x69,
	0x6e, 0x67, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61,
	0x73, 0x68, 0x69, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65,
	0x72, 0x48, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x67, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cashierHangingService_proto_rawDescOnce sync.Once
	file_cashierHangingService_proto_rawDescData = file_cashierHangingService_proto_rawDesc
)

func file_cashierHangingService_proto_rawDescGZIP() []byte {
	file_cashierHangingService_proto_rawDescOnce.Do(func() {
		file_cashierHangingService_proto_rawDescData = protoimpl.X.CompressGZIP(file_cashierHangingService_proto_rawDescData)
	})
	return file_cashierHangingService_proto_rawDescData
}

var file_cashierHangingService_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_cashierHangingService_proto_goTypes = []interface{}{
	(*CashierHanging)(nil),         // 0: services.CashierHanging
	(*CashierHangingDetail)(nil),   // 1: services.CashierHangingDetail
	(*CashierHangingRequest)(nil),  // 2: services.CashierHangingRequest
	(*CashierHangingResponse)(nil), // 3: services.CashierHangingResponse
	(*Realstore)(nil),              // 4: services.Realstore
	(*MemberInfo)(nil),             // 5: services.MemberInfo
	(*common.Pager)(nil),           // 6: common.Pager
}
var file_cashierHangingService_proto_depIdxs = []int32{
	1,  // 0: services.CashierHanging.commodities:type_name -> services.CashierHangingDetail
	4,  // 1: services.CashierHanging.realstore:type_name -> services.Realstore
	5,  // 2: services.CashierHanging.member:type_name -> services.MemberInfo
	0,  // 3: services.CashierHangingResponse.entity:type_name -> services.CashierHanging
	6,  // 4: services.CashierHangingResponse.pager:type_name -> common.Pager
	0,  // 5: services.CashierHangingResponse.items:type_name -> services.CashierHanging
	0,  // 6: services.CashierHangingService.Save:input_type -> services.CashierHanging
	0,  // 7: services.CashierHangingService.Get:input_type -> services.CashierHanging
	0,  // 8: services.CashierHangingService.Count:input_type -> services.CashierHanging
	0,  // 9: services.CashierHangingService.Clear:input_type -> services.CashierHanging
	0,  // 10: services.CashierHangingService.Delete:input_type -> services.CashierHanging
	0,  // 11: services.CashierHangingService.Detail:input_type -> services.CashierHanging
	2,  // 12: services.CashierHangingService.Search:input_type -> services.CashierHangingRequest
	3,  // 13: services.CashierHangingService.Save:output_type -> services.CashierHangingResponse
	3,  // 14: services.CashierHangingService.Get:output_type -> services.CashierHangingResponse
	3,  // 15: services.CashierHangingService.Count:output_type -> services.CashierHangingResponse
	3,  // 16: services.CashierHangingService.Clear:output_type -> services.CashierHangingResponse
	3,  // 17: services.CashierHangingService.Delete:output_type -> services.CashierHangingResponse
	3,  // 18: services.CashierHangingService.Detail:output_type -> services.CashierHangingResponse
	3,  // 19: services.CashierHangingService.Search:output_type -> services.CashierHangingResponse
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_cashierHangingService_proto_init() }
func file_cashierHangingService_proto_init() {
	if File_cashierHangingService_proto != nil {
		return
	}
	file_realstoreService_proto_init()
	file_baseInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cashierHangingService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashierHanging); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashierHangingService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashierHangingDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashierHangingService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashierHangingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashierHangingService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashierHangingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cashierHangingService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cashierHangingService_proto_goTypes,
		DependencyIndexes: file_cashierHangingService_proto_depIdxs,
		MessageInfos:      file_cashierHangingService_proto_msgTypes,
	}.Build()
	File_cashierHangingService_proto = out.File
	file_cashierHangingService_proto_rawDesc = nil
	file_cashierHangingService_proto_goTypes = nil
	file_cashierHangingService_proto_depIdxs = nil
}
