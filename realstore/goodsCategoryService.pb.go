// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: goodsCategoryService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GoodsCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                       //ID
	Name        string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`                                    //名称
	ParentId    int64            `protobuf:"varint,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`           //父ID
	DeptPath    string           `protobuf:"bytes,4,opt,name=dept_path,json=deptPath,proto3" json:"dept_path"`            //深度路径
	IconUrl     string           `protobuf:"bytes,5,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url"`               //icon图标
	Sort        int32            `protobuf:"varint,6,opt,name=sort,proto3" json:"sort"`                                   //排序值
	SeoTitle    string           `protobuf:"bytes,7,opt,name=seo_title,json=seoTitle,proto3" json:"seo_title"`            //SEO标题
	SeoKeywords string           `protobuf:"bytes,8,opt,name=seo_keywords,json=seoKeywords,proto3" json:"seo_keywords"`   //SEO关键字
	SeoDesc     string           `protobuf:"bytes,9,opt,name=seo_desc,json=seoDesc,proto3" json:"seo_desc"`               //SEO描述
	IsEnable    string           `protobuf:"bytes,10,opt,name=is_enable,json=isEnable,proto3" json:"is_enable"`           //是否启用（0否，1是）
	RealstoreId int64            `protobuf:"varint,11,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"` //父ID
	CreatedAt   string           `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt   string           `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Parent      *GoodsCategory   `protobuf:"bytes,14,opt,name=parent,proto3" json:"parent"`
	Children    []*GoodsCategory `protobuf:"bytes,15,rep,name=children,proto3" json:"children"`
}

func (x *GoodsCategory) Reset() {
	*x = GoodsCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsCategoryService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsCategory) ProtoMessage() {}

func (x *GoodsCategory) ProtoReflect() protoreflect.Message {
	mi := &file_goodsCategoryService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsCategory.ProtoReflect.Descriptor instead.
func (*GoodsCategory) Descriptor() ([]byte, []int) {
	return file_goodsCategoryService_proto_rawDescGZIP(), []int{0}
}

func (x *GoodsCategory) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GoodsCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GoodsCategory) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *GoodsCategory) GetDeptPath() string {
	if x != nil {
		return x.DeptPath
	}
	return ""
}

func (x *GoodsCategory) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *GoodsCategory) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *GoodsCategory) GetSeoTitle() string {
	if x != nil {
		return x.SeoTitle
	}
	return ""
}

func (x *GoodsCategory) GetSeoKeywords() string {
	if x != nil {
		return x.SeoKeywords
	}
	return ""
}

func (x *GoodsCategory) GetSeoDesc() string {
	if x != nil {
		return x.SeoDesc
	}
	return ""
}

func (x *GoodsCategory) GetIsEnable() string {
	if x != nil {
		return x.IsEnable
	}
	return ""
}

func (x *GoodsCategory) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *GoodsCategory) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GoodsCategory) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GoodsCategory) GetParent() *GoodsCategory {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *GoodsCategory) GetChildren() []*GoodsCategory {
	if x != nil {
		return x.Children
	}
	return nil
}

type GoodsCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged       int64  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize    int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords    string `protobuf:"bytes,3,opt,name=keywords,proto3" json:"keywords"`
	Id          int32  `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	Name        string `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
	ParentId    int64  `protobuf:"varint,6,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	IsEnable    string `protobuf:"bytes,7,opt,name=is_enable,json=isEnable,proto3" json:"is_enable"`
	RealstoreId string `protobuf:"bytes,8,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`
	Status      string `protobuf:"bytes,9,opt,name=status,proto3" json:"status"`
}

func (x *GoodsCategoryRequest) Reset() {
	*x = GoodsCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsCategoryService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsCategoryRequest) ProtoMessage() {}

func (x *GoodsCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goodsCategoryService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsCategoryRequest.ProtoReflect.Descriptor instead.
func (*GoodsCategoryRequest) Descriptor() ([]byte, []int) {
	return file_goodsCategoryService_proto_rawDescGZIP(), []int{1}
}

func (x *GoodsCategoryRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *GoodsCategoryRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GoodsCategoryRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *GoodsCategoryRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GoodsCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GoodsCategoryRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *GoodsCategoryRequest) GetIsEnable() string {
	if x != nil {
		return x.IsEnable
	}
	return ""
}

func (x *GoodsCategoryRequest) GetRealstoreId() string {
	if x != nil {
		return x.RealstoreId
	}
	return ""
}

func (x *GoodsCategoryRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GoodsCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *GoodsCategory   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager    `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*GoodsCategory `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Info   string           `protobuf:"bytes,4,opt,name=info,proto3" json:"info"`
}

func (x *GoodsCategoryResponse) Reset() {
	*x = GoodsCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsCategoryService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsCategoryResponse) ProtoMessage() {}

func (x *GoodsCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goodsCategoryService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsCategoryResponse.ProtoReflect.Descriptor instead.
func (*GoodsCategoryResponse) Descriptor() ([]byte, []int) {
	return file_goodsCategoryService_proto_rawDescGZIP(), []int{2}
}

func (x *GoodsCategoryResponse) GetEntity() *GoodsCategory {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *GoodsCategoryResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *GoodsCategoryResponse) GetItems() []*GoodsCategory {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GoodsCategoryResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_goodsCategoryService_proto protoreflect.FileDescriptor

var file_goodsCategoryService_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdb, 0x03, 0x0a, 0x0d, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x65, 0x70, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x65, 0x70, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f,
	0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f,
	0x6e, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6f, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6f,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x6f, 0x5f, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x6f,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6f, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x6f, 0x44,
	0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x2f, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xfe, 0x01, 0x0a, 0x14, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb0, 0x01, 0x0a, 0x15, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0xba, 0x03, 0x0a, 0x14,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x1a, 0x1f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x1a,
	0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x54, 0x72, 0x65, 0x65, 0x12, 0x1e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a,
	0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goodsCategoryService_proto_rawDescOnce sync.Once
	file_goodsCategoryService_proto_rawDescData = file_goodsCategoryService_proto_rawDesc
)

func file_goodsCategoryService_proto_rawDescGZIP() []byte {
	file_goodsCategoryService_proto_rawDescOnce.Do(func() {
		file_goodsCategoryService_proto_rawDescData = protoimpl.X.CompressGZIP(file_goodsCategoryService_proto_rawDescData)
	})
	return file_goodsCategoryService_proto_rawDescData
}

var file_goodsCategoryService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_goodsCategoryService_proto_goTypes = []interface{}{
	(*GoodsCategory)(nil),         // 0: services.GoodsCategory
	(*GoodsCategoryRequest)(nil),  // 1: services.GoodsCategoryRequest
	(*GoodsCategoryResponse)(nil), // 2: services.GoodsCategoryResponse
	(*common.Pager)(nil),          // 3: common.Pager
}
var file_goodsCategoryService_proto_depIdxs = []int32{
	0,  // 0: services.GoodsCategory.parent:type_name -> services.GoodsCategory
	0,  // 1: services.GoodsCategory.children:type_name -> services.GoodsCategory
	0,  // 2: services.GoodsCategoryResponse.entity:type_name -> services.GoodsCategory
	3,  // 3: services.GoodsCategoryResponse.pager:type_name -> common.Pager
	0,  // 4: services.GoodsCategoryResponse.items:type_name -> services.GoodsCategory
	0,  // 5: services.GoodsCategoryService.Create:input_type -> services.GoodsCategory
	0,  // 6: services.GoodsCategoryService.Update:input_type -> services.GoodsCategory
	0,  // 7: services.GoodsCategoryService.Delete:input_type -> services.GoodsCategory
	0,  // 8: services.GoodsCategoryService.Detail:input_type -> services.GoodsCategory
	1,  // 9: services.GoodsCategoryService.Tree:input_type -> services.GoodsCategoryRequest
	1,  // 10: services.GoodsCategoryService.Search:input_type -> services.GoodsCategoryRequest
	2,  // 11: services.GoodsCategoryService.Create:output_type -> services.GoodsCategoryResponse
	2,  // 12: services.GoodsCategoryService.Update:output_type -> services.GoodsCategoryResponse
	2,  // 13: services.GoodsCategoryService.Delete:output_type -> services.GoodsCategoryResponse
	2,  // 14: services.GoodsCategoryService.Detail:output_type -> services.GoodsCategoryResponse
	2,  // 15: services.GoodsCategoryService.Tree:output_type -> services.GoodsCategoryResponse
	2,  // 16: services.GoodsCategoryService.Search:output_type -> services.GoodsCategoryResponse
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_goodsCategoryService_proto_init() }
func file_goodsCategoryService_proto_init() {
	if File_goodsCategoryService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goodsCategoryService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsCategoryService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsCategoryService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goodsCategoryService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_goodsCategoryService_proto_goTypes,
		DependencyIndexes: file_goodsCategoryService_proto_depIdxs,
		MessageInfos:      file_goodsCategoryService_proto_msgTypes,
	}.Build()
	File_goodsCategoryService_proto = out.File
	file_goodsCategoryService_proto_rawDesc = nil
	file_goodsCategoryService_proto_goTypes = nil
	file_goodsCategoryService_proto_depIdxs = nil
}
