// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: staffSalaryService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StaffSalary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                                //ID
	RealstoreId         int64      `protobuf:"varint,2,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`                           //门店id
	UserId              int64      `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id"`                                          //用户id
	StaffId             int64      `protobuf:"varint,4,opt,name=staff_id,json=staffId,proto3" json:"staff_id"`                                       //员工id
	TotalPrice          int64      `protobuf:"varint,5,opt,name=total_price,json=totalPrice,proto3" json:"total_price"`                              //总额
	BaseSalary          int64      `protobuf:"varint,6,opt,name=base_salary,json=baseSalary,proto3" json:"base_salary"`                              //底薪
	OrderProfitPrice    int64      `protobuf:"varint,7,opt,name=order_profit_price,json=orderProfitPrice,proto3" json:"order_profit_price"`          //订单收益金额
	RechargeProfitPrice int64      `protobuf:"varint,8,opt,name=recharge_profit_price,json=rechargeProfitPrice,proto3" json:"recharge_profit_price"` //充值收益金额
	Ym                  int32      `protobuf:"varint,9,opt,name=ym,proto3" json:"ym"`                                                                //年月(Ym)
	Msg                 string     `protobuf:"bytes,10,opt,name=msg,proto3" json:"msg"`                                                              //描述（一般用于订单发生改变描述）
	Status              string     `protobuf:"bytes,11,opt,name=status,proto3" json:"status"`                                                        //结算状态（0待结算, 1已结算）
	SettlementTime      string     `protobuf:"bytes,12,opt,name=settlement_time,json=settlementTime,proto3" json:"settlement_time"`                  //结算时间
	CreatedAt           string     `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt           string     `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Realstore           *Realstore `protobuf:"bytes,15,opt,name=realstore,proto3" json:"realstore"`
	Staff               *Staff     `protobuf:"bytes,16,opt,name=staff,proto3" json:"staff"`
	StatusName          string     `protobuf:"bytes,17,opt,name=status_name,json=statusName,proto3" json:"status_name"`
}

func (x *StaffSalary) Reset() {
	*x = StaffSalary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staffSalaryService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffSalary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffSalary) ProtoMessage() {}

func (x *StaffSalary) ProtoReflect() protoreflect.Message {
	mi := &file_staffSalaryService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffSalary.ProtoReflect.Descriptor instead.
func (*StaffSalary) Descriptor() ([]byte, []int) {
	return file_staffSalaryService_proto_rawDescGZIP(), []int{0}
}

func (x *StaffSalary) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StaffSalary) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *StaffSalary) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *StaffSalary) GetStaffId() int64 {
	if x != nil {
		return x.StaffId
	}
	return 0
}

func (x *StaffSalary) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *StaffSalary) GetBaseSalary() int64 {
	if x != nil {
		return x.BaseSalary
	}
	return 0
}

func (x *StaffSalary) GetOrderProfitPrice() int64 {
	if x != nil {
		return x.OrderProfitPrice
	}
	return 0
}

func (x *StaffSalary) GetRechargeProfitPrice() int64 {
	if x != nil {
		return x.RechargeProfitPrice
	}
	return 0
}

func (x *StaffSalary) GetYm() int32 {
	if x != nil {
		return x.Ym
	}
	return 0
}

func (x *StaffSalary) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *StaffSalary) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StaffSalary) GetSettlementTime() string {
	if x != nil {
		return x.SettlementTime
	}
	return ""
}

func (x *StaffSalary) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *StaffSalary) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *StaffSalary) GetRealstore() *Realstore {
	if x != nil {
		return x.Realstore
	}
	return nil
}

func (x *StaffSalary) GetStaff() *Staff {
	if x != nil {
		return x.Staff
	}
	return nil
}

func (x *StaffSalary) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

type StaffSalaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged       int64  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize    int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords    string `protobuf:"bytes,3,opt,name=keywords,proto3" json:"keywords"`
	Id          int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	Name        string `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
	Type        string `protobuf:"bytes,6,opt,name=type,proto3" json:"type"`
	RealstoreId int64  `protobuf:"varint,7,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`
	UserId      int64  `protobuf:"varint,8,opt,name=user_id,json=userId,proto3" json:"user_id"`
	Status      string `protobuf:"bytes,9,opt,name=status,proto3" json:"status"`
}

func (x *StaffSalaryRequest) Reset() {
	*x = StaffSalaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staffSalaryService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffSalaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffSalaryRequest) ProtoMessage() {}

func (x *StaffSalaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_staffSalaryService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffSalaryRequest.ProtoReflect.Descriptor instead.
func (*StaffSalaryRequest) Descriptor() ([]byte, []int) {
	return file_staffSalaryService_proto_rawDescGZIP(), []int{1}
}

func (x *StaffSalaryRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *StaffSalaryRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *StaffSalaryRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *StaffSalaryRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StaffSalaryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StaffSalaryRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StaffSalaryRequest) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *StaffSalaryRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *StaffSalaryRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type StaffSalaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *StaffSalary   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager  `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*StaffSalary `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Info   string         `protobuf:"bytes,4,opt,name=info,proto3" json:"info"`
}

func (x *StaffSalaryResponse) Reset() {
	*x = StaffSalaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staffSalaryService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffSalaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffSalaryResponse) ProtoMessage() {}

func (x *StaffSalaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_staffSalaryService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffSalaryResponse.ProtoReflect.Descriptor instead.
func (*StaffSalaryResponse) Descriptor() ([]byte, []int) {
	return file_staffSalaryService_proto_rawDescGZIP(), []int{2}
}

func (x *StaffSalaryResponse) GetEntity() *StaffSalary {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *StaffSalaryResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *StaffSalaryResponse) GetItems() []*StaffSalary {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *StaffSalaryResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_staffSalaryService_proto protoreflect.FileDescriptor

var file_staffSalaryService_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x74, 0x61, 0x66, 0x66, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x73, 0x74, 0x61, 0x66, 0x66, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x72, 0x65, 0x61,
	0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb4, 0x04, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x61, 0x6c,
	0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x12,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x72, 0x65, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x79, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x79, 0x6d, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x31, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65,
	0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x66, 0x66, 0x52, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xef, 0x01, 0x0a, 0x12, 0x53,
	0x74, 0x61, 0x66, 0x66, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x6c,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xaa, 0x01, 0x0a,
	0x13, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0x9d, 0x03, 0x0a, 0x12, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x3e, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x66, 0x66, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x66, 0x66, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x66, 0x66, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x1a, 0x1d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53,
	0x61, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x74, 0x61, 0x66, 0x66, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1c, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x61, 0x6c,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_staffSalaryService_proto_rawDescOnce sync.Once
	file_staffSalaryService_proto_rawDescData = file_staffSalaryService_proto_rawDesc
)

func file_staffSalaryService_proto_rawDescGZIP() []byte {
	file_staffSalaryService_proto_rawDescOnce.Do(func() {
		file_staffSalaryService_proto_rawDescData = protoimpl.X.CompressGZIP(file_staffSalaryService_proto_rawDescData)
	})
	return file_staffSalaryService_proto_rawDescData
}

var file_staffSalaryService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_staffSalaryService_proto_goTypes = []interface{}{
	(*StaffSalary)(nil),         // 0: services.StaffSalary
	(*StaffSalaryRequest)(nil),  // 1: services.StaffSalaryRequest
	(*StaffSalaryResponse)(nil), // 2: services.StaffSalaryResponse
	(*Realstore)(nil),           // 3: services.Realstore
	(*Staff)(nil),               // 4: services.Staff
	(*common.Pager)(nil),        // 5: common.Pager
}
var file_staffSalaryService_proto_depIdxs = []int32{
	3,  // 0: services.StaffSalary.realstore:type_name -> services.Realstore
	4,  // 1: services.StaffSalary.staff:type_name -> services.Staff
	0,  // 2: services.StaffSalaryResponse.entity:type_name -> services.StaffSalary
	5,  // 3: services.StaffSalaryResponse.pager:type_name -> common.Pager
	0,  // 4: services.StaffSalaryResponse.items:type_name -> services.StaffSalary
	0,  // 5: services.StaffSalaryService.Create:input_type -> services.StaffSalary
	0,  // 6: services.StaffSalaryService.Update:input_type -> services.StaffSalary
	0,  // 7: services.StaffSalaryService.Delete:input_type -> services.StaffSalary
	0,  // 8: services.StaffSalaryService.Get:input_type -> services.StaffSalary
	1,  // 9: services.StaffSalaryService.List:input_type -> services.StaffSalaryRequest
	1,  // 10: services.StaffSalaryService.Search:input_type -> services.StaffSalaryRequest
	2,  // 11: services.StaffSalaryService.Create:output_type -> services.StaffSalaryResponse
	2,  // 12: services.StaffSalaryService.Update:output_type -> services.StaffSalaryResponse
	2,  // 13: services.StaffSalaryService.Delete:output_type -> services.StaffSalaryResponse
	2,  // 14: services.StaffSalaryService.Get:output_type -> services.StaffSalaryResponse
	2,  // 15: services.StaffSalaryService.List:output_type -> services.StaffSalaryResponse
	2,  // 16: services.StaffSalaryService.Search:output_type -> services.StaffSalaryResponse
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_staffSalaryService_proto_init() }
func file_staffSalaryService_proto_init() {
	if File_staffSalaryService_proto != nil {
		return
	}
	file_staffService_proto_init()
	file_realstoreService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_staffSalaryService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffSalary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staffSalaryService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffSalaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staffSalaryService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffSalaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_staffSalaryService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_staffSalaryService_proto_goTypes,
		DependencyIndexes: file_staffSalaryService_proto_depIdxs,
		MessageInfos:      file_staffSalaryService_proto_msgTypes,
	}.Build()
	File_staffSalaryService_proto = out.File
	file_staffSalaryService_proto_rawDesc = nil
	file_staffSalaryService_proto_goTypes = nil
	file_staffSalaryService_proto_depIdxs = nil
}
