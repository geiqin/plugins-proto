// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: chargeOrderService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChargeOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                               //ID
	RealstoreId      int64      `protobuf:"varint,2,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`          //门店id
	ChargeId         int64      `protobuf:"varint,3,opt,name=charge_id,json=chargeId,proto3" json:"charge_id"`                   //挂账主体id
	BusinessId       int64      `protobuf:"varint,4,opt,name=business_id,json=businessId,proto3" json:"business_id"`             //业务id
	BusinessType     string     `protobuf:"bytes,5,opt,name=business_type,json=businessType,proto3" json:"business_type"`        //业务类型（0服务订单, 1钱包充值）
	Price            int64      `protobuf:"varint,6,opt,name=price,proto3" json:"price"`                                         //金额
	Note             string     `protobuf:"bytes,7,opt,name=note,proto3" json:"note"`                                            //备注信息
	OperateId        int64      `protobuf:"varint,8,opt,name=operate_id,json=operateId,proto3" json:"operate_id"`                //操作人id
	OperateName      string     `protobuf:"bytes,9,opt,name=operate_name,json=operateName,proto3" json:"operate_name"`           //操作人名称
	CollectionTime   string     `protobuf:"bytes,10,opt,name=collection_time,json=collectionTime,proto3" json:"collection_time"` //收款时间
	Status           string     `protobuf:"bytes,11,opt,name=status,proto3" json:"status"`                                       //状态（0待收款, 1已收款, 2已失效）
	CreatedAt        string     `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt        string     `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Realstore        *Realstore `protobuf:"bytes,14,opt,name=realstore,proto3" json:"realstore"`
	Charge           *Charge    `protobuf:"bytes,15,opt,name=charge,proto3" json:"charge"`
	BusinessTypeName string     `protobuf:"bytes,16,opt,name=business_type_name,json=businessTypeName,proto3" json:"business_type_name"`
	StatusName       string     `protobuf:"bytes,17,opt,name=status_name,json=statusName,proto3" json:"status_name"`
}

func (x *ChargeOrder) Reset() {
	*x = ChargeOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chargeOrderService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeOrder) ProtoMessage() {}

func (x *ChargeOrder) ProtoReflect() protoreflect.Message {
	mi := &file_chargeOrderService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeOrder.ProtoReflect.Descriptor instead.
func (*ChargeOrder) Descriptor() ([]byte, []int) {
	return file_chargeOrderService_proto_rawDescGZIP(), []int{0}
}

func (x *ChargeOrder) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChargeOrder) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *ChargeOrder) GetChargeId() int64 {
	if x != nil {
		return x.ChargeId
	}
	return 0
}

func (x *ChargeOrder) GetBusinessId() int64 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *ChargeOrder) GetBusinessType() string {
	if x != nil {
		return x.BusinessType
	}
	return ""
}

func (x *ChargeOrder) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ChargeOrder) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *ChargeOrder) GetOperateId() int64 {
	if x != nil {
		return x.OperateId
	}
	return 0
}

func (x *ChargeOrder) GetOperateName() string {
	if x != nil {
		return x.OperateName
	}
	return ""
}

func (x *ChargeOrder) GetCollectionTime() string {
	if x != nil {
		return x.CollectionTime
	}
	return ""
}

func (x *ChargeOrder) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ChargeOrder) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ChargeOrder) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ChargeOrder) GetRealstore() *Realstore {
	if x != nil {
		return x.Realstore
	}
	return nil
}

func (x *ChargeOrder) GetCharge() *Charge {
	if x != nil {
		return x.Charge
	}
	return nil
}

func (x *ChargeOrder) GetBusinessTypeName() string {
	if x != nil {
		return x.BusinessTypeName
	}
	return ""
}

func (x *ChargeOrder) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

type ChargeOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged        int64  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize     int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords     string `protobuf:"bytes,3,opt,name=keywords,proto3" json:"keywords"`
	Id           int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	Name         string `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
	BusinessType string `protobuf:"bytes,6,opt,name=business_type,json=businessType,proto3" json:"business_type"`
	ChargeId     int64  `protobuf:"varint,7,opt,name=charge_id,json=chargeId,proto3" json:"charge_id"`
	RealstoreId  int64  `protobuf:"varint,8,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`
	Status       string `protobuf:"bytes,9,opt,name=status,proto3" json:"status"`
}

func (x *ChargeOrderRequest) Reset() {
	*x = ChargeOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chargeOrderService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeOrderRequest) ProtoMessage() {}

func (x *ChargeOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chargeOrderService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeOrderRequest.ProtoReflect.Descriptor instead.
func (*ChargeOrderRequest) Descriptor() ([]byte, []int) {
	return file_chargeOrderService_proto_rawDescGZIP(), []int{1}
}

func (x *ChargeOrderRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *ChargeOrderRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ChargeOrderRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *ChargeOrderRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChargeOrderRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChargeOrderRequest) GetBusinessType() string {
	if x != nil {
		return x.BusinessType
	}
	return ""
}

func (x *ChargeOrderRequest) GetChargeId() int64 {
	if x != nil {
		return x.ChargeId
	}
	return 0
}

func (x *ChargeOrderRequest) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *ChargeOrderRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ChargeOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *ChargeOrder   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager  `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*ChargeOrder `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Info   string         `protobuf:"bytes,4,opt,name=info,proto3" json:"info"`
}

func (x *ChargeOrderResponse) Reset() {
	*x = ChargeOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chargeOrderService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeOrderResponse) ProtoMessage() {}

func (x *ChargeOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chargeOrderService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeOrderResponse.ProtoReflect.Descriptor instead.
func (*ChargeOrderResponse) Descriptor() ([]byte, []int) {
	return file_chargeOrderService_proto_rawDescGZIP(), []int{2}
}

func (x *ChargeOrderResponse) GetEntity() *ChargeOrder {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *ChargeOrderResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *ChargeOrderResponse) GetItems() []*ChargeOrder {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ChargeOrderResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_chargeOrderService_proto protoreflect.FileDescriptor

var file_chargeOrderService_proto_rawDesc = []byte{
	0x0a, 0x18, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x04, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x6f, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x31, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x09, 0x72,
	0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x84, 0x02, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x13, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2d, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0xdb, 0x02, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x06,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x06,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chargeOrderService_proto_rawDescOnce sync.Once
	file_chargeOrderService_proto_rawDescData = file_chargeOrderService_proto_rawDesc
)

func file_chargeOrderService_proto_rawDescGZIP() []byte {
	file_chargeOrderService_proto_rawDescOnce.Do(func() {
		file_chargeOrderService_proto_rawDescData = protoimpl.X.CompressGZIP(file_chargeOrderService_proto_rawDescData)
	})
	return file_chargeOrderService_proto_rawDescData
}

var file_chargeOrderService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_chargeOrderService_proto_goTypes = []interface{}{
	(*ChargeOrder)(nil),         // 0: services.ChargeOrder
	(*ChargeOrderRequest)(nil),  // 1: services.ChargeOrderRequest
	(*ChargeOrderResponse)(nil), // 2: services.ChargeOrderResponse
	(*Realstore)(nil),           // 3: services.Realstore
	(*Charge)(nil),              // 4: services.Charge
	(*common.Pager)(nil),        // 5: common.Pager
}
var file_chargeOrderService_proto_depIdxs = []int32{
	3,  // 0: services.ChargeOrder.realstore:type_name -> services.Realstore
	4,  // 1: services.ChargeOrder.charge:type_name -> services.Charge
	0,  // 2: services.ChargeOrderResponse.entity:type_name -> services.ChargeOrder
	5,  // 3: services.ChargeOrderResponse.pager:type_name -> common.Pager
	0,  // 4: services.ChargeOrderResponse.items:type_name -> services.ChargeOrder
	0,  // 5: services.ChargeOrderService.Create:input_type -> services.ChargeOrder
	0,  // 6: services.ChargeOrderService.Update:input_type -> services.ChargeOrder
	0,  // 7: services.ChargeOrderService.Delete:input_type -> services.ChargeOrder
	0,  // 8: services.ChargeOrderService.Detail:input_type -> services.ChargeOrder
	1,  // 9: services.ChargeOrderService.Search:input_type -> services.ChargeOrderRequest
	2,  // 10: services.ChargeOrderService.Create:output_type -> services.ChargeOrderResponse
	2,  // 11: services.ChargeOrderService.Update:output_type -> services.ChargeOrderResponse
	2,  // 12: services.ChargeOrderService.Delete:output_type -> services.ChargeOrderResponse
	2,  // 13: services.ChargeOrderService.Detail:output_type -> services.ChargeOrderResponse
	2,  // 14: services.ChargeOrderService.Search:output_type -> services.ChargeOrderResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_chargeOrderService_proto_init() }
func file_chargeOrderService_proto_init() {
	if File_chargeOrderService_proto != nil {
		return
	}
	file_realstoreService_proto_init()
	file_chargeService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_chargeOrderService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chargeOrderService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chargeOrderService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chargeOrderService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chargeOrderService_proto_goTypes,
		DependencyIndexes: file_chargeOrderService_proto_depIdxs,
		MessageInfos:      file_chargeOrderService_proto_msgTypes,
	}.Build()
	File_chargeOrderService_proto = out.File
	file_chargeOrderService_proto_rawDesc = nil
	file_chargeOrderService_proto_goTypes = nil
	file_chargeOrderService_proto_depIdxs = nil
}
