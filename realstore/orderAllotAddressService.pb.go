// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: orderAllotAddressService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderAllotAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	OrderAllotId int64   `protobuf:"varint,2,opt,name=order_allot_id,json=orderAllotId,proto3" json:"order_allot_id"` //会员ID
	OrderId      int64   `protobuf:"varint,3,opt,name=order_id,json=orderId,proto3" json:"order_id"`                  //会员ID
	Name         string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`                                        //姓名
	Alias        string  `protobuf:"bytes,5,opt,name=alias,proto3" json:"alias"`                                      //别名
	Tel          string  `protobuf:"bytes,6,opt,name=tel,proto3" json:"tel"`                                          //电话
	ProvinceId   int64   `protobuf:"varint,7,opt,name=province_id,json=provinceId,proto3" json:"province_id"`         //所在省ID
	CityId       int64   `protobuf:"varint,8,opt,name=city_id,json=cityId,proto3" json:"city_id"`                     //所在市ID
	CountyId     int64   `protobuf:"varint,9,opt,name=county_id,json=countyId,proto3" json:"county_id"`               //所在县/区ID
	ProvinceName string  `protobuf:"bytes,10,opt,name=province_name,json=provinceName,proto3" json:"province_name"`   //所在省
	CityName     string  `protobuf:"bytes,11,opt,name=city_name,json=cityName,proto3" json:"city_name"`               //所在市
	CountyName   string  `protobuf:"bytes,12,opt,name=county_name,json=countyName,proto3" json:"county_name"`         //所在县/区
	Address      string  `protobuf:"bytes,13,opt,name=address,proto3" json:"address"`                                 //详细地址
	Lng          float32 `protobuf:"fixed32,14,opt,name=lng,proto3" json:"lng"`                                       //经度
	Lat          float32 `protobuf:"fixed32,15,opt,name=lat,proto3" json:"lat"`                                       //纬度
	IdcardName   string  `protobuf:"bytes,16,opt,name=idcard_name,json=idcardName,proto3" json:"idcard_name"`         //身份证姓名
	IdcardNumber string  `protobuf:"bytes,17,opt,name=idcard_number,json=idcardNumber,proto3" json:"idcard_number"`   //身份证号码
	IdcardFront  string  `protobuf:"bytes,18,opt,name=idcard_front,json=idcardFront,proto3" json:"idcard_front"`      //身份证人像面图片
	IdcardBack   string  `protobuf:"bytes,19,opt,name=idcard_back,json=idcardBack,proto3" json:"idcard_back"`         //身份证国微面图片
	IsDefault    string  `protobuf:"bytes,20,opt,name=is_default,json=isDefault,proto3" json:"is_default"`            //是否默认地址（0否, 1是）
	CreatedAt    string  `protobuf:"bytes,21,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt    string  `protobuf:"bytes,22,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
}

func (x *OrderAllotAddress) Reset() {
	*x = OrderAllotAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderAllotAddressService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderAllotAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAllotAddress) ProtoMessage() {}

func (x *OrderAllotAddress) ProtoReflect() protoreflect.Message {
	mi := &file_orderAllotAddressService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAllotAddress.ProtoReflect.Descriptor instead.
func (*OrderAllotAddress) Descriptor() ([]byte, []int) {
	return file_orderAllotAddressService_proto_rawDescGZIP(), []int{0}
}

func (x *OrderAllotAddress) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderAllotAddress) GetOrderAllotId() int64 {
	if x != nil {
		return x.OrderAllotId
	}
	return 0
}

func (x *OrderAllotAddress) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderAllotAddress) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderAllotAddress) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *OrderAllotAddress) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

func (x *OrderAllotAddress) GetProvinceId() int64 {
	if x != nil {
		return x.ProvinceId
	}
	return 0
}

func (x *OrderAllotAddress) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *OrderAllotAddress) GetCountyId() int64 {
	if x != nil {
		return x.CountyId
	}
	return 0
}

func (x *OrderAllotAddress) GetProvinceName() string {
	if x != nil {
		return x.ProvinceName
	}
	return ""
}

func (x *OrderAllotAddress) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *OrderAllotAddress) GetCountyName() string {
	if x != nil {
		return x.CountyName
	}
	return ""
}

func (x *OrderAllotAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *OrderAllotAddress) GetLng() float32 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *OrderAllotAddress) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *OrderAllotAddress) GetIdcardName() string {
	if x != nil {
		return x.IdcardName
	}
	return ""
}

func (x *OrderAllotAddress) GetIdcardNumber() string {
	if x != nil {
		return x.IdcardNumber
	}
	return ""
}

func (x *OrderAllotAddress) GetIdcardFront() string {
	if x != nil {
		return x.IdcardFront
	}
	return ""
}

func (x *OrderAllotAddress) GetIdcardBack() string {
	if x != nil {
		return x.IdcardBack
	}
	return ""
}

func (x *OrderAllotAddress) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *OrderAllotAddress) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *OrderAllotAddress) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type OrderAllotAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged        int64  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize     int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords     string `protobuf:"bytes,3,opt,name=keywords,proto3" json:"keywords"`
	Id           int32  `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	Title        string `protobuf:"bytes,5,opt,name=title,proto3" json:"title"`
	Model        string `protobuf:"bytes,6,opt,name=model,proto3" json:"model"`
	OrderAllotId int64  `protobuf:"varint,7,opt,name=order_allot_id,json=orderAllotId,proto3" json:"order_allot_id"`
	OrderId      int64  `protobuf:"varint,8,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	ProvinceId   int64  `protobuf:"varint,9,opt,name=province_id,json=provinceId,proto3" json:"province_id"`
	CityId       int64  `protobuf:"varint,10,opt,name=city_id,json=cityId,proto3" json:"city_id"`
	CountyId     int64  `protobuf:"varint,11,opt,name=county_id,json=countyId,proto3" json:"county_id"`
	CreatedType  string `protobuf:"bytes,12,opt,name=created_type,json=createdType,proto3" json:"created_type"`
	OrderType    string `protobuf:"bytes,13,opt,name=order_type,json=orderType,proto3" json:"order_type"`
}

func (x *OrderAllotAddressRequest) Reset() {
	*x = OrderAllotAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderAllotAddressService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderAllotAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAllotAddressRequest) ProtoMessage() {}

func (x *OrderAllotAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orderAllotAddressService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAllotAddressRequest.ProtoReflect.Descriptor instead.
func (*OrderAllotAddressRequest) Descriptor() ([]byte, []int) {
	return file_orderAllotAddressService_proto_rawDescGZIP(), []int{1}
}

func (x *OrderAllotAddressRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *OrderAllotAddressRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OrderAllotAddressRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *OrderAllotAddressRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderAllotAddressRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OrderAllotAddressRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *OrderAllotAddressRequest) GetOrderAllotId() int64 {
	if x != nil {
		return x.OrderAllotId
	}
	return 0
}

func (x *OrderAllotAddressRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderAllotAddressRequest) GetProvinceId() int64 {
	if x != nil {
		return x.ProvinceId
	}
	return 0
}

func (x *OrderAllotAddressRequest) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *OrderAllotAddressRequest) GetCountyId() int64 {
	if x != nil {
		return x.CountyId
	}
	return 0
}

func (x *OrderAllotAddressRequest) GetCreatedType() string {
	if x != nil {
		return x.CreatedType
	}
	return ""
}

func (x *OrderAllotAddressRequest) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

type OrderAllotAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *OrderAllotAddress   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager        `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*OrderAllotAddress `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Info   string               `protobuf:"bytes,4,opt,name=info,proto3" json:"info"`
}

func (x *OrderAllotAddressResponse) Reset() {
	*x = OrderAllotAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderAllotAddressService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderAllotAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAllotAddressResponse) ProtoMessage() {}

func (x *OrderAllotAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orderAllotAddressService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAllotAddressResponse.ProtoReflect.Descriptor instead.
func (*OrderAllotAddressResponse) Descriptor() ([]byte, []int) {
	return file_orderAllotAddressService_proto_rawDescGZIP(), []int{2}
}

func (x *OrderAllotAddressResponse) GetEntity() *OrderAllotAddress {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *OrderAllotAddressResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *OrderAllotAddressResponse) GetItems() []*OrderAllotAddress {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *OrderAllotAddressResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_orderAllotAddressService_proto protoreflect.FileDescriptor

var file_orderAllotAddressService_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xff, 0x04,
	0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x6c,
	0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x65, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x64, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x64, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x42, 0x61,
	0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xff, 0x02, 0x0a, 0x18, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xbc, 0x01, 0x0a, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x41, 0x6c, 0x6c, 0x6f, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x06, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x32, 0xeb, 0x03, 0x0a, 0x18, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x41, 0x6c, 0x6c, 0x6f, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x23, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c,
	0x6f, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x47, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d,
	0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_orderAllotAddressService_proto_rawDescOnce sync.Once
	file_orderAllotAddressService_proto_rawDescData = file_orderAllotAddressService_proto_rawDesc
)

func file_orderAllotAddressService_proto_rawDescGZIP() []byte {
	file_orderAllotAddressService_proto_rawDescOnce.Do(func() {
		file_orderAllotAddressService_proto_rawDescData = protoimpl.X.CompressGZIP(file_orderAllotAddressService_proto_rawDescData)
	})
	return file_orderAllotAddressService_proto_rawDescData
}

var file_orderAllotAddressService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_orderAllotAddressService_proto_goTypes = []interface{}{
	(*OrderAllotAddress)(nil),         // 0: services.OrderAllotAddress
	(*OrderAllotAddressRequest)(nil),  // 1: services.OrderAllotAddressRequest
	(*OrderAllotAddressResponse)(nil), // 2: services.OrderAllotAddressResponse
	(*common.Pager)(nil),              // 3: common.Pager
}
var file_orderAllotAddressService_proto_depIdxs = []int32{
	0, // 0: services.OrderAllotAddressResponse.entity:type_name -> services.OrderAllotAddress
	3, // 1: services.OrderAllotAddressResponse.pager:type_name -> common.Pager
	0, // 2: services.OrderAllotAddressResponse.items:type_name -> services.OrderAllotAddress
	0, // 3: services.OrderAllotAddressService.Create:input_type -> services.OrderAllotAddress
	0, // 4: services.OrderAllotAddressService.Update:input_type -> services.OrderAllotAddress
	0, // 5: services.OrderAllotAddressService.Delete:input_type -> services.OrderAllotAddress
	0, // 6: services.OrderAllotAddressService.Get:input_type -> services.OrderAllotAddress
	1, // 7: services.OrderAllotAddressService.List:input_type -> services.OrderAllotAddressRequest
	1, // 8: services.OrderAllotAddressService.Search:input_type -> services.OrderAllotAddressRequest
	2, // 9: services.OrderAllotAddressService.Create:output_type -> services.OrderAllotAddressResponse
	2, // 10: services.OrderAllotAddressService.Update:output_type -> services.OrderAllotAddressResponse
	2, // 11: services.OrderAllotAddressService.Delete:output_type -> services.OrderAllotAddressResponse
	2, // 12: services.OrderAllotAddressService.Get:output_type -> services.OrderAllotAddressResponse
	2, // 13: services.OrderAllotAddressService.List:output_type -> services.OrderAllotAddressResponse
	2, // 14: services.OrderAllotAddressService.Search:output_type -> services.OrderAllotAddressResponse
	9, // [9:15] is the sub-list for method output_type
	3, // [3:9] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_orderAllotAddressService_proto_init() }
func file_orderAllotAddressService_proto_init() {
	if File_orderAllotAddressService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_orderAllotAddressService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderAllotAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderAllotAddressService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderAllotAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderAllotAddressService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderAllotAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orderAllotAddressService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orderAllotAddressService_proto_goTypes,
		DependencyIndexes: file_orderAllotAddressService_proto_depIdxs,
		MessageInfos:      file_orderAllotAddressService_proto_msgTypes,
	}.Build()
	File_orderAllotAddressService_proto = out.File
	file_orderAllotAddressService_proto_rawDesc = nil
	file_orderAllotAddressService_proto_goTypes = nil
	file_orderAllotAddressService_proto_depIdxs = nil
}
