// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: commonService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 多门店配置
type RealstoreConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationName                        string `protobuf:"bytes,1,opt,name=application_name,json=applicationName,proto3" json:"application_name"`                                                                                //应用名称
	IsEnableRealstoreScanpay               string `protobuf:"bytes,2,opt,name=is_enable_realstore_scanpay,json=isEnableRealstoreScanpay,proto3" json:"is_enable_realstore_scanpay"`                                                 //开启门店扫码收款默认否、扩展信息里面可以查看收款记录、并生成收款码
	IsGoodsDetailRealstoreEnt              string `protobuf:"bytes,3,opt,name=is_goods_detail_realstore_ent,json=isGoodsDetailRealstoreEnt,proto3" json:"is_goods_detail_realstore_ent"`                                            //商品详情（底部导航展示门店入口）
	IsGoodsDetailRealstoreListEnt          string `protobuf:"bytes,4,opt,name=is_goods_detail_realstore_list_ent,json=isGoodsDetailRealstoreListEnt,proto3" json:"is_goods_detail_realstore_list_ent"`                              //商品详情（展示所有关联门店列表）
	IsMainGoodsToRealstoreGoods            string `protobuf:"bytes,5,opt,name=is_main_goods_to_realstore_goods,json=isMainGoodsToRealstoreGoods,proto3" json:"is_main_goods_to_realstore_goods"`                                    //商品详情（仅属单个门店则以门店模式进入）
	NotRealstoreEntGoodsDetailHideBtnText  string `protobuf:"bytes,6,opt,name=not_realstore_ent_goods_detail_hide_btn_text,json=notRealstoreEntGoodsDetailHideBtnText,proto3" json:"not_realstore_ent_goods_detail_hide_btn_text"`  //非门店进入商品详情隐藏（购买和购物车）占位信息
	IsGoodsDetailRealstoreEventGoodsDetail string `protobuf:"bytes,7,opt,name=is_goods_detail_realstore_event_goods_detail,json=isGoodsDetailRealstoreEventGoodsDetail,proto3" json:"is_goods_detail_realstore_event_goods_detail"` //取货点-县/区-名称
	IsRealstoreSystemGoodsAdd              string `protobuf:"bytes,8,opt,name=is_realstore_system_goods_add,json=isRealstoreSystemGoodsAdd,proto3" json:"is_realstore_system_goods_add"`                                            //门店添加商品默认否、开启后门店可以添加商品后台审核
	IsIndependentInventory                 string `protobuf:"bytes,10,opt,name=is_independent_inventory,json=isIndependentInventory,proto3" json:"is_independent_inventory"`                                                        //门店独立库存默认否、开启后仅使用门店配置的库存、未配置则0
	IsIndependentPrice                     string `protobuf:"bytes,11,opt,name=is_independent_price,json=isIndependentPrice,proto3" json:"is_independent_price"`                                                                    //门店独立售价默认否、开启后门店可单独配置售价、未配置则使用默认
	IsHomeChoiceLocation                   int64  `protobuf:"varint,12,opt,name=is_home_choice_location,json=isHomeChoiceLocation,proto3" json:"is_home_choice_location"`                                                           //进入门店首页提示选择地理位置默认否
	IsHomeChoiceLocationForce              string `protobuf:"bytes,13,opt,name=is_home_choice_location_force,json=isHomeChoiceLocationForce,proto3" json:"is_home_choice_location_force"`                                           //进入门店首页提示选择地理位置（是否强制）
	HomeChoiceLocationMsg                  string `protobuf:"bytes,14,opt,name=home_choice_location_msg,json=homeChoiceLocationMsg,proto3" json:"home_choice_location_msg"`                                                         //进入门店首页提示选择地理位置（提示信息）
	SellerCenterNotice                     string `protobuf:"bytes,15,opt,name=seller_center_notice,json=sellerCenterNotice,proto3" json:"seller_center_notice"`                                                                    //门店中心通知可换行、一行一句
}

func (x *RealstoreConfig) Reset() {
	*x = RealstoreConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commonService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RealstoreConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealstoreConfig) ProtoMessage() {}

func (x *RealstoreConfig) ProtoReflect() protoreflect.Message {
	mi := &file_commonService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealstoreConfig.ProtoReflect.Descriptor instead.
func (*RealstoreConfig) Descriptor() ([]byte, []int) {
	return file_commonService_proto_rawDescGZIP(), []int{0}
}

func (x *RealstoreConfig) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *RealstoreConfig) GetIsEnableRealstoreScanpay() string {
	if x != nil {
		return x.IsEnableRealstoreScanpay
	}
	return ""
}

func (x *RealstoreConfig) GetIsGoodsDetailRealstoreEnt() string {
	if x != nil {
		return x.IsGoodsDetailRealstoreEnt
	}
	return ""
}

func (x *RealstoreConfig) GetIsGoodsDetailRealstoreListEnt() string {
	if x != nil {
		return x.IsGoodsDetailRealstoreListEnt
	}
	return ""
}

func (x *RealstoreConfig) GetIsMainGoodsToRealstoreGoods() string {
	if x != nil {
		return x.IsMainGoodsToRealstoreGoods
	}
	return ""
}

func (x *RealstoreConfig) GetNotRealstoreEntGoodsDetailHideBtnText() string {
	if x != nil {
		return x.NotRealstoreEntGoodsDetailHideBtnText
	}
	return ""
}

func (x *RealstoreConfig) GetIsGoodsDetailRealstoreEventGoodsDetail() string {
	if x != nil {
		return x.IsGoodsDetailRealstoreEventGoodsDetail
	}
	return ""
}

func (x *RealstoreConfig) GetIsRealstoreSystemGoodsAdd() string {
	if x != nil {
		return x.IsRealstoreSystemGoodsAdd
	}
	return ""
}

func (x *RealstoreConfig) GetIsIndependentInventory() string {
	if x != nil {
		return x.IsIndependentInventory
	}
	return ""
}

func (x *RealstoreConfig) GetIsIndependentPrice() string {
	if x != nil {
		return x.IsIndependentPrice
	}
	return ""
}

func (x *RealstoreConfig) GetIsHomeChoiceLocation() int64 {
	if x != nil {
		return x.IsHomeChoiceLocation
	}
	return 0
}

func (x *RealstoreConfig) GetIsHomeChoiceLocationForce() string {
	if x != nil {
		return x.IsHomeChoiceLocationForce
	}
	return ""
}

func (x *RealstoreConfig) GetHomeChoiceLocationMsg() string {
	if x != nil {
		return x.HomeChoiceLocationMsg
	}
	return ""
}

func (x *RealstoreConfig) GetSellerCenterNotice() string {
	if x != nil {
		return x.SellerCenterNotice
	}
	return ""
}

type CommonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConstKeys []string `protobuf:"bytes,1,rep,name=const_keys,json=constKeys,proto3" json:"const_keys"` //常量键名
	DictKeys  []string `protobuf:"bytes,2,rep,name=dict_keys,json=dictKeys,proto3" json:"dict_keys"`    //字典键名
	Keys      []string `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys"`                            //混合键名（常量+字典）
}

func (x *CommonRequest) Reset() {
	*x = CommonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commonService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonRequest) ProtoMessage() {}

func (x *CommonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonRequest.ProtoReflect.Descriptor instead.
func (*CommonRequest) Descriptor() ([]byte, []int) {
	return file_commonService_proto_rawDescGZIP(), []int{1}
}

func (x *CommonRequest) GetConstKeys() []string {
	if x != nil {
		return x.ConstKeys
	}
	return nil
}

func (x *CommonRequest) GetDictKeys() []string {
	if x != nil {
		return x.DictKeys
	}
	return nil
}

func (x *CommonRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config   *RealstoreConfig  `protobuf:"bytes,1,opt,name=config,proto3" json:"config"`
	DictList []*DictionaryType `protobuf:"bytes,2,rep,name=dict_list,json=dictList,proto3" json:"dict_list"`
	Info     string            `protobuf:"bytes,5,opt,name=info,proto3" json:"info"`
}

func (x *CommonResponse) Reset() {
	*x = CommonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commonService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResponse) ProtoMessage() {}

func (x *CommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResponse.ProtoReflect.Descriptor instead.
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return file_commonService_proto_rawDescGZIP(), []int{2}
}

func (x *CommonResponse) GetConfig() *RealstoreConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CommonResponse) GetDictList() []*DictionaryType {
	if x != nil {
		return x.DictList
	}
	return nil
}

func (x *CommonResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_commonService_proto protoreflect.FileDescriptor

var file_commonService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a,
	0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x07, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x6c, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x63, 0x61,
	0x6e, 0x70, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x69, 0x73, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x63, 0x61,
	0x6e, 0x70, 0x61, 0x79, 0x12, 0x40, 0x0a, 0x1d, 0x69, 0x73, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x69, 0x73, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x61, 0x6c, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x12, 0x49, 0x0a, 0x22, 0x69, 0x73, 0x5f, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x1d, 0x69, 0x73, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e,
	0x74, 0x12, 0x45, 0x0a, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x69, 0x73, 0x4d,
	0x61, 0x69, 0x6e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x61, 0x6c, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x5b, 0x0a, 0x2c, 0x6e, 0x6f, 0x74, 0x5f,
	0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x68, 0x69, 0x64, 0x65, 0x5f,
	0x62, 0x74, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x25,
	0x6e, 0x6f, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x69, 0x64, 0x65, 0x42, 0x74,
	0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x5c, 0x0a, 0x2c, 0x69, 0x73, 0x5f, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x26, 0x69, 0x73, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x61, 0x6c, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x40, 0x0a, 0x1d, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x61, 0x64, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x69, 0x73, 0x52, 0x65,
	0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x41, 0x64, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x69, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x30, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69,
	0x73, 0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x63, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x14, 0x69, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x1d, 0x69, 0x73, 0x5f, 0x68,
	0x6f, 0x6d, 0x65, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x19, 0x69, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x68, 0x6f,
	0x6d, 0x65, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x68, 0x6f,
	0x6d, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0x5f, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x5f,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4b, 0x65,
	0x79, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x35, 0x0a, 0x09,
	0x64, 0x69, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0xdd, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x43, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x61, 0x76, 0x65, 0x12, 0x19, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x72, 0x79, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_commonService_proto_rawDescOnce sync.Once
	file_commonService_proto_rawDescData = file_commonService_proto_rawDesc
)

func file_commonService_proto_rawDescGZIP() []byte {
	file_commonService_proto_rawDescOnce.Do(func() {
		file_commonService_proto_rawDescData = protoimpl.X.CompressGZIP(file_commonService_proto_rawDescData)
	})
	return file_commonService_proto_rawDescData
}

var file_commonService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_commonService_proto_goTypes = []interface{}{
	(*RealstoreConfig)(nil), // 0: services.RealstoreConfig
	(*CommonRequest)(nil),   // 1: services.CommonRequest
	(*CommonResponse)(nil),  // 2: services.CommonResponse
	(*DictionaryType)(nil),  // 3: services.DictionaryType
}
var file_commonService_proto_depIdxs = []int32{
	0, // 0: services.CommonResponse.config:type_name -> services.RealstoreConfig
	3, // 1: services.CommonResponse.dict_list:type_name -> services.DictionaryType
	0, // 2: services.CommonService.ConfigIndex:input_type -> services.RealstoreConfig
	0, // 3: services.CommonService.ConfigSave:input_type -> services.RealstoreConfig
	1, // 4: services.CommonService.Dictionary:input_type -> services.CommonRequest
	2, // 5: services.CommonService.ConfigIndex:output_type -> services.CommonResponse
	2, // 6: services.CommonService.ConfigSave:output_type -> services.CommonResponse
	2, // 7: services.CommonService.Dictionary:output_type -> services.CommonResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_commonService_proto_init() }
func file_commonService_proto_init() {
	if File_commonService_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_commonService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RealstoreConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commonService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commonService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_commonService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_commonService_proto_goTypes,
		DependencyIndexes: file_commonService_proto_depIdxs,
		MessageInfos:      file_commonService_proto_msgTypes,
	}.Build()
	File_commonService_proto = out.File
	file_commonService_proto_rawDesc = nil
	file_commonService_proto_goTypes = nil
	file_commonService_proto_depIdxs = nil
}
