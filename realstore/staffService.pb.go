// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: staffService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Staff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                         //ID
	RealstoreId  int64      `protobuf:"varint,2,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`    //门店id
	UserId       int64      `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id"`                   //用户id
	Code         string     `protobuf:"bytes,4,opt,name=code,proto3" json:"code"`                                      //员工编号
	Alias        string     `protobuf:"bytes,5,opt,name=alias,proto3" json:"alias"`                                    //员工别名
	AvatarUrl    string     `protobuf:"bytes,6,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url"`           //员工头像地址
	Mobile       string     `protobuf:"bytes,7,opt,name=mobile,proto3" json:"mobile"`                                  //手机号
	Email        string     `protobuf:"bytes,8,opt,name=email,proto3" json:"email"`                                    //电子邮箱
	IdcardName   string     `protobuf:"bytes,9,opt,name=idcard_name,json=idcardName,proto3" json:"idcard_name"`        //身份证姓名
	IdcardNumber string     `protobuf:"bytes,10,opt,name=idcard_number,json=idcardNumber,proto3" json:"idcard_number"` //身份证号码
	IdcardFront  string     `protobuf:"bytes,11,opt,name=idcard_front,json=idcardFront,proto3" json:"idcard_front"`    //身份证人像面图片
	IdcardBack   string     `protobuf:"bytes,12,opt,name=idcard_back,json=idcardBack,proto3" json:"idcard_back"`       //身份证国微面图片
	BaseSalary   int64      `protobuf:"varint,13,opt,name=base_salary,json=baseSalary,proto3" json:"base_salary"`      //底薪
	SettleRate   float32    `protobuf:"fixed32,14,opt,name=settle_rate,json=settleRate,proto3" json:"settle_rate"`     //结算比例0~100的值
	BankName     string     `protobuf:"bytes,15,opt,name=bank_name,json=bankName,proto3" json:"bank_name"`             //结算银行开户行
	BankUsername string     `protobuf:"bytes,16,opt,name=bank_username,json=bankUsername,proto3" json:"bank_username"` //结算银行姓名
	BankAccount  string     `protobuf:"bytes,17,opt,name=bank_account,json=bankAccount,proto3" json:"bank_account"`    //结算银行账户
	Sort         int32      `protobuf:"varint,18,opt,name=sort,proto3" json:"sort"`                                    //排序
	Status       string     `protobuf:"bytes,19,opt,name=status,proto3" json:"status"`                                 //状态（0待确认，1在职中，2暂休中，3已解聘）
	CreatedAt    string     `protobuf:"bytes,20,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt    string     `protobuf:"bytes,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Realstore    *Realstore `protobuf:"bytes,22,opt,name=realstore,proto3" json:"realstore"`
	User         *UserInfo  `protobuf:"bytes,23,opt,name=user,proto3" json:"user"`
	Type         string     `protobuf:"bytes,24,opt,name=type,proto3" json:"type"` //类型：1店长，2员工
	TypeName     string     `protobuf:"bytes,25,opt,name=type_name,json=typeName,proto3" json:"type_name"`
	Nickname     string     `protobuf:"bytes,26,opt,name=nickname,proto3" json:"nickname"`
	StatusName   string     `protobuf:"bytes,28,opt,name=status_name,json=statusName,proto3" json:"status_name"`
}

func (x *Staff) Reset() {
	*x = Staff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staffService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Staff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staff) ProtoMessage() {}

func (x *Staff) ProtoReflect() protoreflect.Message {
	mi := &file_staffService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staff.ProtoReflect.Descriptor instead.
func (*Staff) Descriptor() ([]byte, []int) {
	return file_staffService_proto_rawDescGZIP(), []int{0}
}

func (x *Staff) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Staff) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *Staff) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Staff) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Staff) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Staff) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *Staff) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *Staff) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Staff) GetIdcardName() string {
	if x != nil {
		return x.IdcardName
	}
	return ""
}

func (x *Staff) GetIdcardNumber() string {
	if x != nil {
		return x.IdcardNumber
	}
	return ""
}

func (x *Staff) GetIdcardFront() string {
	if x != nil {
		return x.IdcardFront
	}
	return ""
}

func (x *Staff) GetIdcardBack() string {
	if x != nil {
		return x.IdcardBack
	}
	return ""
}

func (x *Staff) GetBaseSalary() int64 {
	if x != nil {
		return x.BaseSalary
	}
	return 0
}

func (x *Staff) GetSettleRate() float32 {
	if x != nil {
		return x.SettleRate
	}
	return 0
}

func (x *Staff) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *Staff) GetBankUsername() string {
	if x != nil {
		return x.BankUsername
	}
	return ""
}

func (x *Staff) GetBankAccount() string {
	if x != nil {
		return x.BankAccount
	}
	return ""
}

func (x *Staff) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *Staff) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Staff) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Staff) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Staff) GetRealstore() *Realstore {
	if x != nil {
		return x.Realstore
	}
	return nil
}

func (x *Staff) GetUser() *UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Staff) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Staff) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *Staff) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Staff) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

type StaffRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged       int64  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize    int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords    string `protobuf:"bytes,3,opt,name=keywords,proto3" json:"keywords"`
	Id          int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	Name        string `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
	Mobile      string `protobuf:"bytes,6,opt,name=mobile,proto3" json:"mobile"`
	RealstoreId int64  `protobuf:"varint,7,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`
	UserId      int64  `protobuf:"varint,8,opt,name=user_id,json=userId,proto3" json:"user_id"`
	Status      string `protobuf:"bytes,9,opt,name=status,proto3" json:"status"`
}

func (x *StaffRequest) Reset() {
	*x = StaffRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staffService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffRequest) ProtoMessage() {}

func (x *StaffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_staffService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffRequest.ProtoReflect.Descriptor instead.
func (*StaffRequest) Descriptor() ([]byte, []int) {
	return file_staffService_proto_rawDescGZIP(), []int{1}
}

func (x *StaffRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *StaffRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *StaffRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *StaffRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StaffRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StaffRequest) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *StaffRequest) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *StaffRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *StaffRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type StaffResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Staff        `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*Staff      `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Info   string        `protobuf:"bytes,4,opt,name=info,proto3" json:"info"`
}

func (x *StaffResponse) Reset() {
	*x = StaffResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_staffService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffResponse) ProtoMessage() {}

func (x *StaffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_staffService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffResponse.ProtoReflect.Descriptor instead.
func (*StaffResponse) Descriptor() ([]byte, []int) {
	return file_staffService_proto_rawDescGZIP(), []int{2}
}

func (x *StaffResponse) GetEntity() *Staff {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *StaffResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *StaffResponse) GetItems() []*Staff {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *StaffResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_staffService_proto protoreflect.FileDescriptor

var file_staffService_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x74, 0x61, 0x66, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xae, 0x06, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x66, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x64, 0x63, 0x61, 0x72,
	0x64, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x63,
	0x61, 0x72, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x61,
	0x73, 0x65, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e,
	0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61,
	0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62,
	0x61, 0x6e, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x31, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xed, 0x01, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x98, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x74, 0x61, 0x66, 0x66, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x72, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66,
	0x66, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0xcf, 0x02, 0x0a,
	0x0c, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x32, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x1a, 0x17, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66,
	0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66,
	0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x03, 0x47, 0x65, 0x74,
	0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66,
	0x66, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x16, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d,
	0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_staffService_proto_rawDescOnce sync.Once
	file_staffService_proto_rawDescData = file_staffService_proto_rawDesc
)

func file_staffService_proto_rawDescGZIP() []byte {
	file_staffService_proto_rawDescOnce.Do(func() {
		file_staffService_proto_rawDescData = protoimpl.X.CompressGZIP(file_staffService_proto_rawDescData)
	})
	return file_staffService_proto_rawDescData
}

var file_staffService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_staffService_proto_goTypes = []interface{}{
	(*Staff)(nil),         // 0: services.Staff
	(*StaffRequest)(nil),  // 1: services.StaffRequest
	(*StaffResponse)(nil), // 2: services.StaffResponse
	(*Realstore)(nil),     // 3: services.Realstore
	(*UserInfo)(nil),      // 4: services.UserInfo
	(*common.Pager)(nil),  // 5: common.Pager
}
var file_staffService_proto_depIdxs = []int32{
	3,  // 0: services.Staff.realstore:type_name -> services.Realstore
	4,  // 1: services.Staff.user:type_name -> services.UserInfo
	0,  // 2: services.StaffResponse.entity:type_name -> services.Staff
	5,  // 3: services.StaffResponse.pager:type_name -> common.Pager
	0,  // 4: services.StaffResponse.items:type_name -> services.Staff
	0,  // 5: services.StaffService.Create:input_type -> services.Staff
	0,  // 6: services.StaffService.Update:input_type -> services.Staff
	0,  // 7: services.StaffService.Delete:input_type -> services.Staff
	0,  // 8: services.StaffService.Get:input_type -> services.Staff
	1,  // 9: services.StaffService.List:input_type -> services.StaffRequest
	1,  // 10: services.StaffService.Search:input_type -> services.StaffRequest
	2,  // 11: services.StaffService.Create:output_type -> services.StaffResponse
	2,  // 12: services.StaffService.Update:output_type -> services.StaffResponse
	2,  // 13: services.StaffService.Delete:output_type -> services.StaffResponse
	2,  // 14: services.StaffService.Get:output_type -> services.StaffResponse
	2,  // 15: services.StaffService.List:output_type -> services.StaffResponse
	2,  // 16: services.StaffService.Search:output_type -> services.StaffResponse
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_staffService_proto_init() }
func file_staffService_proto_init() {
	if File_staffService_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	file_realstoreService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_staffService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Staff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staffService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_staffService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_staffService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_staffService_proto_goTypes,
		DependencyIndexes: file_staffService_proto_depIdxs,
		MessageInfos:      file_staffService_proto_msgTypes,
	}.Build()
	File_staffService_proto = out.File
	file_staffService_proto_rawDesc = nil
	file_staffService_proto_goTypes = nil
	file_staffService_proto_depIdxs = nil
}
