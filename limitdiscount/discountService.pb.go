// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: discountService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Discount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                                //ID
	Name                string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`                                                             //活动名称
	TimeType            string             `protobuf:"bytes,3,opt,name=time_type,json=timeType,proto3" json:"time_type"`                                     //活动时间类型
	BeginDate           string             `protobuf:"bytes,4,opt,name=begin_date,json=beginDate,proto3" json:"begin_date"`                                  //开始日期
	EndDate             string             `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date"`                                        //结束日期
	PeriodTimeType      string             `protobuf:"bytes,6,opt,name=period_time_type,json=periodTimeType,proto3" json:"period_time_type"`                 //周期类型
	PeriodDays          []int32            `protobuf:"varint,7,rep,packed,name=period_days,json=periodDays,proto3" json:"period_days"`                       //周期天数
	PeriodBeginTime     string             `protobuf:"bytes,8,opt,name=period_begin_time,json=periodBeginTime,proto3" json:"period_begin_time"`              //开始时间
	PeriodEndTime       string             `protobuf:"bytes,9,opt,name=period_end_time,json=periodEndTime,proto3" json:"period_end_time"`                    //结束时间
	DiscountOverlayType string             `protobuf:"bytes,10,opt,name=discount_overlay_type,json=discountOverlayType,proto3" json:"discount_overlay_type"` //优惠叠加
	OrderCloseTime      int32              `protobuf:"varint,11,opt,name=order_close_time,json=orderCloseTime,proto3" json:"order_close_time"`               //订单自动关闭时间
	ActivityTag         string             `protobuf:"bytes,12,opt,name=activity_tag,json=activityTag,proto3" json:"activity_tag"`                           //活动标签
	LimitBuyType        string             `protobuf:"bytes,13,opt,name=limit_buy_type,json=limitBuyType,proto3" json:"limit_buy_type"`                      //限购类型
	LimitBuyNum         int32              `protobuf:"varint,14,opt,name=limit_buy_num,json=limitBuyNum,proto3" json:"limit_buy_num"`                        //限购数量
	Description         string             `protobuf:"bytes,15,opt,name=description,proto3" json:"description"`                                              //活动描述
	WarmUpType          string             `protobuf:"bytes,16,opt,name=warm_up_type,json=warmUpType,proto3" json:"warm_up_type"`                            //活动预热类型
	WarmUpHours         int32              `protobuf:"varint,17,opt,name=warm_up_hours,json=warmUpHours,proto3" json:"warm_up_hours"`                        //活动预热小时
	IsSyncAddTag        string             `protobuf:"bytes,18,opt,name=is_sync_add_tag,json=isSyncAddTag,proto3" json:"is_sync_add_tag"`                    //是否同步标签
	SyncAddTags         string             `protobuf:"bytes,19,opt,name=sync_add_tags,json=syncAddTags,proto3" json:"sync_add_tags"`                         //同步的标签
	Status              string             `protobuf:"bytes,20,opt,name=status,proto3" json:"status"`                                                        //状态
	CreatedAt           string             `protobuf:"bytes,21,opt,name=created_at,json=createdAt,proto3" json:"created_at"`                                 //创建时间
	UpdatedAt           string             `protobuf:"bytes,22,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`                                 //修改时间
	Products            []*DiscountProduct `protobuf:"bytes,24,rep,name=products,proto3" json:"products"`
}

func (x *Discount) Reset() {
	*x = Discount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discountService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Discount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Discount) ProtoMessage() {}

func (x *Discount) ProtoReflect() protoreflect.Message {
	mi := &file_discountService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Discount.ProtoReflect.Descriptor instead.
func (*Discount) Descriptor() ([]byte, []int) {
	return file_discountService_proto_rawDescGZIP(), []int{0}
}

func (x *Discount) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Discount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Discount) GetTimeType() string {
	if x != nil {
		return x.TimeType
	}
	return ""
}

func (x *Discount) GetBeginDate() string {
	if x != nil {
		return x.BeginDate
	}
	return ""
}

func (x *Discount) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *Discount) GetPeriodTimeType() string {
	if x != nil {
		return x.PeriodTimeType
	}
	return ""
}

func (x *Discount) GetPeriodDays() []int32 {
	if x != nil {
		return x.PeriodDays
	}
	return nil
}

func (x *Discount) GetPeriodBeginTime() string {
	if x != nil {
		return x.PeriodBeginTime
	}
	return ""
}

func (x *Discount) GetPeriodEndTime() string {
	if x != nil {
		return x.PeriodEndTime
	}
	return ""
}

func (x *Discount) GetDiscountOverlayType() string {
	if x != nil {
		return x.DiscountOverlayType
	}
	return ""
}

func (x *Discount) GetOrderCloseTime() int32 {
	if x != nil {
		return x.OrderCloseTime
	}
	return 0
}

func (x *Discount) GetActivityTag() string {
	if x != nil {
		return x.ActivityTag
	}
	return ""
}

func (x *Discount) GetLimitBuyType() string {
	if x != nil {
		return x.LimitBuyType
	}
	return ""
}

func (x *Discount) GetLimitBuyNum() int32 {
	if x != nil {
		return x.LimitBuyNum
	}
	return 0
}

func (x *Discount) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Discount) GetWarmUpType() string {
	if x != nil {
		return x.WarmUpType
	}
	return ""
}

func (x *Discount) GetWarmUpHours() int32 {
	if x != nil {
		return x.WarmUpHours
	}
	return 0
}

func (x *Discount) GetIsSyncAddTag() string {
	if x != nil {
		return x.IsSyncAddTag
	}
	return ""
}

func (x *Discount) GetSyncAddTags() string {
	if x != nil {
		return x.SyncAddTags
	}
	return ""
}

func (x *Discount) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Discount) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Discount) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Discount) GetProducts() []*DiscountProduct {
	if x != nil {
		return x.Products
	}
	return nil
}

// 限时折扣商品
type DiscountProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                            //ID
	DiscountId    int64    `protobuf:"varint,2,opt,name=discount_id,json=discountId,proto3" json:"discount_id"`          //活动id
	SpuId         int64    `protobuf:"varint,3,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`                         //商品ID
	SkuKey        string   `protobuf:"bytes,4,opt,name=sku_key,json=skuKey,proto3" json:"sku_key"`                       //货品key
	Method        string   `protobuf:"bytes,5,opt,name=method,proto3" json:"method"`                                     //优惠方式
	DiscountValue int64    `protobuf:"varint,6,opt,name=discount_value,json=discountValue,proto3" json:"discount_value"` //优惠值
	Stock         int32    `protobuf:"varint,7,opt,name=stock,proto3" json:"stock"`                                      //可销售量
	CreatedAt     string   `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at"`              //创建时间
	UpdatedAt     string   `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`              //修改时间
	Spu           *SpuInfo `protobuf:"bytes,10,opt,name=spu,proto3" json:"spu"`
}

func (x *DiscountProduct) Reset() {
	*x = DiscountProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discountService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscountProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscountProduct) ProtoMessage() {}

func (x *DiscountProduct) ProtoReflect() protoreflect.Message {
	mi := &file_discountService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscountProduct.ProtoReflect.Descriptor instead.
func (*DiscountProduct) Descriptor() ([]byte, []int) {
	return file_discountService_proto_rawDescGZIP(), []int{1}
}

func (x *DiscountProduct) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DiscountProduct) GetDiscountId() int64 {
	if x != nil {
		return x.DiscountId
	}
	return 0
}

func (x *DiscountProduct) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *DiscountProduct) GetSkuKey() string {
	if x != nil {
		return x.SkuKey
	}
	return ""
}

func (x *DiscountProduct) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *DiscountProduct) GetDiscountValue() int64 {
	if x != nil {
		return x.DiscountValue
	}
	return 0
}

func (x *DiscountProduct) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *DiscountProduct) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *DiscountProduct) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *DiscountProduct) GetSpu() *SpuInfo {
	if x != nil {
		return x.Spu
	}
	return nil
}

type DiscountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top       int32    `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64    `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sorts     []string `protobuf:"bytes,5,rep,name=sorts,proto3" json:"sorts"`
	DateRange []string `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int64  `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int64    `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	//以下为自定义参数
	Name                string `protobuf:"bytes,11,opt,name=name,proto3" json:"name"`                                                            //活动名称
	TimeType            string `protobuf:"bytes,12,opt,name=time_type,json=timeType,proto3" json:"time_type"`                                    //活动时间类型
	PeriodTimeType      string `protobuf:"bytes,13,opt,name=period_time_type,json=periodTimeType,proto3" json:"period_time_type"`                //周期类型
	DiscountOverlayType string `protobuf:"bytes,14,opt,name=discount_overlay_type,json=discountOverlayType,proto3" json:"discount_overlay_type"` //优惠叠加
	LimitBuyType        string `protobuf:"bytes,15,opt,name=limit_buy_type,json=limitBuyType,proto3" json:"limit_buy_type"`                      //限购类型
	WarmUpType          string `protobuf:"bytes,16,opt,name=warm_up_type,json=warmUpType,proto3" json:"warm_up_type"`                            //活动预热类型
	IsSyncAddTag        string `protobuf:"bytes,17,opt,name=is_sync_add_tag,json=isSyncAddTag,proto3" json:"is_sync_add_tag"`                    //是否同步标签
	Status              string `protobuf:"bytes,18,opt,name=status,proto3" json:"status"`                                                        //状态
}

func (x *DiscountRequest) Reset() {
	*x = DiscountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discountService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscountRequest) ProtoMessage() {}

func (x *DiscountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discountService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscountRequest.ProtoReflect.Descriptor instead.
func (*DiscountRequest) Descriptor() ([]byte, []int) {
	return file_discountService_proto_rawDescGZIP(), []int{2}
}

func (x *DiscountRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *DiscountRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *DiscountRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DiscountRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *DiscountRequest) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *DiscountRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *DiscountRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DiscountRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DiscountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiscountRequest) GetTimeType() string {
	if x != nil {
		return x.TimeType
	}
	return ""
}

func (x *DiscountRequest) GetPeriodTimeType() string {
	if x != nil {
		return x.PeriodTimeType
	}
	return ""
}

func (x *DiscountRequest) GetDiscountOverlayType() string {
	if x != nil {
		return x.DiscountOverlayType
	}
	return ""
}

func (x *DiscountRequest) GetLimitBuyType() string {
	if x != nil {
		return x.LimitBuyType
	}
	return ""
}

func (x *DiscountRequest) GetWarmUpType() string {
	if x != nil {
		return x.WarmUpType
	}
	return ""
}

func (x *DiscountRequest) GetIsSyncAddTag() string {
	if x != nil {
		return x.IsSyncAddTag
	}
	return ""
}

func (x *DiscountRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DiscountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Discount     `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*Discount   `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Msg    string        `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg"`
}

func (x *DiscountResponse) Reset() {
	*x = DiscountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discountService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscountResponse) ProtoMessage() {}

func (x *DiscountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discountService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscountResponse.ProtoReflect.Descriptor instead.
func (*DiscountResponse) Descriptor() ([]byte, []int) {
	return file_discountService_proto_rawDescGZIP(), []int{3}
}

func (x *DiscountResponse) GetEntity() *Discount {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *DiscountResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *DiscountResponse) GetItems() []*Discount {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *DiscountResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_discountService_proto protoreflect.FileDescriptor

var file_discountService_proto_rawDesc = []byte{
	0x0a, 0x15, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x06, 0x0a, 0x08,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x67,
	0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x79, 0x73, 0x12, 0x2a,
	0x0a, 0x11, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f,
	0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x6c,
	0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x61, 0x67,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x54, 0x61, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x62, 0x75, 0x79,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x42, 0x75, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x5f, 0x62, 0x75, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x75, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x6d, 0x5f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x61, 0x72, 0x6d, 0x55, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x22, 0x0a, 0x0d, 0x77, 0x61, 0x72, 0x6d, 0x5f, 0x75, 0x70, 0x5f, 0x68, 0x6f, 0x75,
	0x72, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x6d, 0x55, 0x70,
	0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x69, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x12, 0x22, 0x0a, 0x0d,
	0x73, 0x79, 0x6e, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0xaa, 0x02,
	0x0a, 0x0f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6b, 0x75,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6b, 0x75, 0x4b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x03, 0x73, 0x70, 0x75, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70,
	0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x73, 0x70, 0x75, 0x22, 0xdf, 0x03, 0x0a, 0x0f, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x76,
	0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x62,
	0x75, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x42, 0x75, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x77,
	0x61, 0x72, 0x6d, 0x5f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x77, 0x61, 0x72, 0x6d, 0x55, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a,
	0x0f, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x61, 0x67,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x64,
	0x64, 0x54, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9f, 0x01, 0x0a,
	0x10, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xbf,
	0x03, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a,
	0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x1a, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x06, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x12,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3a, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x1a,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x06,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3f, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_discountService_proto_rawDescOnce sync.Once
	file_discountService_proto_rawDescData = file_discountService_proto_rawDesc
)

func file_discountService_proto_rawDescGZIP() []byte {
	file_discountService_proto_rawDescOnce.Do(func() {
		file_discountService_proto_rawDescData = protoimpl.X.CompressGZIP(file_discountService_proto_rawDescData)
	})
	return file_discountService_proto_rawDescData
}

var file_discountService_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_discountService_proto_goTypes = []interface{}{
	(*Discount)(nil),         // 0: services.Discount
	(*DiscountProduct)(nil),  // 1: services.DiscountProduct
	(*DiscountRequest)(nil),  // 2: services.DiscountRequest
	(*DiscountResponse)(nil), // 3: services.DiscountResponse
	(*SpuInfo)(nil),          // 4: services.SpuInfo
	(*common.Pager)(nil),     // 5: common.Pager
}
var file_discountService_proto_depIdxs = []int32{
	1,  // 0: services.Discount.products:type_name -> services.DiscountProduct
	4,  // 1: services.DiscountProduct.spu:type_name -> services.SpuInfo
	0,  // 2: services.DiscountResponse.entity:type_name -> services.Discount
	5,  // 3: services.DiscountResponse.pager:type_name -> common.Pager
	0,  // 4: services.DiscountResponse.items:type_name -> services.Discount
	0,  // 5: services.DiscountService.Create:input_type -> services.Discount
	0,  // 6: services.DiscountService.Update:input_type -> services.Discount
	0,  // 7: services.DiscountService.Delete:input_type -> services.Discount
	0,  // 8: services.DiscountService.Stop:input_type -> services.Discount
	0,  // 9: services.DiscountService.Detail:input_type -> services.Discount
	2,  // 10: services.DiscountService.Search:input_type -> services.DiscountRequest
	2,  // 11: services.DiscountService.List:input_type -> services.DiscountRequest
	3,  // 12: services.DiscountService.Create:output_type -> services.DiscountResponse
	3,  // 13: services.DiscountService.Update:output_type -> services.DiscountResponse
	3,  // 14: services.DiscountService.Delete:output_type -> services.DiscountResponse
	3,  // 15: services.DiscountService.Stop:output_type -> services.DiscountResponse
	3,  // 16: services.DiscountService.Detail:output_type -> services.DiscountResponse
	3,  // 17: services.DiscountService.Search:output_type -> services.DiscountResponse
	3,  // 18: services.DiscountService.List:output_type -> services.DiscountResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_discountService_proto_init() }
func file_discountService_proto_init() {
	if File_discountService_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_discountService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Discount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discountService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscountProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discountService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discountService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_discountService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_discountService_proto_goTypes,
		DependencyIndexes: file_discountService_proto_depIdxs,
		MessageInfos:      file_discountService_proto_msgTypes,
	}.Build()
	File_discountService_proto = out.File
	file_discountService_proto_rawDesc = nil
	file_discountService_proto_goTypes = nil
	file_discountService_proto_depIdxs = nil
}
