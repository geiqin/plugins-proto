// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: cosumeService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Consume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                                   //ID
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`                                                                //活动名称
	TimeType             string               `protobuf:"bytes,3,opt,name=time_type,json=timeType,proto3" json:"time_type"`                                        //活动时间类型
	BeginDate            string               `protobuf:"bytes,4,opt,name=begin_date,json=beginDate,proto3" json:"begin_date"`                                     //开始日期
	EndDate              string               `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date"`                                           //结束日期
	PeriodTimeType       string               `protobuf:"bytes,6,opt,name=period_time_type,json=periodTimeType,proto3" json:"period_time_type"`                    //周期类型
	PeriodDays           []int32              `protobuf:"varint,7,rep,packed,name=period_days,json=periodDays,proto3" json:"period_days"`                          //周期天数
	PeriodBeginTime      string               `protobuf:"bytes,8,opt,name=period_begin_time,json=periodBeginTime,proto3" json:"period_begin_time"`                 //周期开始时间段
	PeriodEndTime        string               `protobuf:"bytes,9,opt,name=period_end_time,json=periodEndTime,proto3" json:"period_end_time"`                       //周期结束时间段
	RewardConditionType  string               `protobuf:"bytes,10,opt,name=reward_condition_type,json=rewardConditionType,proto3" json:"reward_condition_type"`    //赠送方式:1-单次消费满x元,2-单次消费每满x元,3-累计消费满x元
	RewardOrderStatus    string               `protobuf:"bytes,11,opt,name=reward_order_status,json=rewardOrderStatus,proto3" json:"reward_order_status"`          //赠送节点 1支付完成后赠送、2确认收货后赠送、3订单完成后赠送
	ParticipateMoneyType string               `protobuf:"bytes,12,opt,name=participate_money_type,json=participateMoneyType,proto3" json:"participate_money_type"` //参与金额： 1-实付金额、2-实付+余额支付、3订单总价
	SpuRangeType         string               `protobuf:"bytes,13,opt,name=spu_range_type,json=spuRangeType,proto3" json:"spu_range_type"`                         //适用商品
	Description          string               `protobuf:"bytes,14,opt,name=description,proto3" json:"description"`                                                 //活动描述
	SendTimeType         string               `protobuf:"bytes,15,opt,name=send_time_type,json=sendTimeType,proto3" json:"send_time_type"`                         //赠送时间
	SendTimeHours        int32                `protobuf:"varint,16,opt,name=send_time_hours,json=sendTimeHours,proto3" json:"send_time_hours"`                     //赠送延时小时
	IsRecoverReward      string               `protobuf:"bytes,17,opt,name=is_recover_reward,json=isRecoverReward,proto3" json:"is_recover_reward"`                //奖励是否回收
	IsSyncAddTag         string               `protobuf:"bytes,18,opt,name=is_sync_add_tag,json=isSyncAddTag,proto3" json:"is_sync_add_tag"`                       //是否同步标签
	SyncAddTags          string               `protobuf:"bytes,19,opt,name=sync_add_tags,json=syncAddTags,proto3" json:"sync_add_tags"`                            //同步的标签
	Status               string               `protobuf:"bytes,20,opt,name=status,proto3" json:"status"`                                                           //状态： 0未开始，1进行中，2已结束
	Rules                []*ConsumeRewardRule `protobuf:"bytes,21,rep,name=rules,proto3" json:"rules"`                                                             //奖励规则
	CreatedAt            string               `protobuf:"bytes,22,opt,name=created_at,json=createdAt,proto3" json:"created_at"`                                    //创建时间
	UpdatedAt            string               `protobuf:"bytes,23,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`                                    //修改时间
	SpuRanges            []*SpuInfo           `protobuf:"bytes,24,rep,name=spu_ranges,json=spuRanges,proto3" json:"spu_ranges"`
	SpuRangeIds          []int64              `protobuf:"varint,25,rep,packed,name=spu_range_ids,json=spuRangeIds,proto3" json:"spu_range_ids"`
}

func (x *Consume) Reset() {
	*x = Consume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosumeService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Consume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consume) ProtoMessage() {}

func (x *Consume) ProtoReflect() protoreflect.Message {
	mi := &file_cosumeService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consume.ProtoReflect.Descriptor instead.
func (*Consume) Descriptor() ([]byte, []int) {
	return file_cosumeService_proto_rawDescGZIP(), []int{0}
}

func (x *Consume) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Consume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Consume) GetTimeType() string {
	if x != nil {
		return x.TimeType
	}
	return ""
}

func (x *Consume) GetBeginDate() string {
	if x != nil {
		return x.BeginDate
	}
	return ""
}

func (x *Consume) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *Consume) GetPeriodTimeType() string {
	if x != nil {
		return x.PeriodTimeType
	}
	return ""
}

func (x *Consume) GetPeriodDays() []int32 {
	if x != nil {
		return x.PeriodDays
	}
	return nil
}

func (x *Consume) GetPeriodBeginTime() string {
	if x != nil {
		return x.PeriodBeginTime
	}
	return ""
}

func (x *Consume) GetPeriodEndTime() string {
	if x != nil {
		return x.PeriodEndTime
	}
	return ""
}

func (x *Consume) GetRewardConditionType() string {
	if x != nil {
		return x.RewardConditionType
	}
	return ""
}

func (x *Consume) GetRewardOrderStatus() string {
	if x != nil {
		return x.RewardOrderStatus
	}
	return ""
}

func (x *Consume) GetParticipateMoneyType() string {
	if x != nil {
		return x.ParticipateMoneyType
	}
	return ""
}

func (x *Consume) GetSpuRangeType() string {
	if x != nil {
		return x.SpuRangeType
	}
	return ""
}

func (x *Consume) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Consume) GetSendTimeType() string {
	if x != nil {
		return x.SendTimeType
	}
	return ""
}

func (x *Consume) GetSendTimeHours() int32 {
	if x != nil {
		return x.SendTimeHours
	}
	return 0
}

func (x *Consume) GetIsRecoverReward() string {
	if x != nil {
		return x.IsRecoverReward
	}
	return ""
}

func (x *Consume) GetIsSyncAddTag() string {
	if x != nil {
		return x.IsSyncAddTag
	}
	return ""
}

func (x *Consume) GetSyncAddTags() string {
	if x != nil {
		return x.SyncAddTags
	}
	return ""
}

func (x *Consume) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Consume) GetRules() []*ConsumeRewardRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *Consume) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Consume) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Consume) GetSpuRanges() []*SpuInfo {
	if x != nil {
		return x.SpuRanges
	}
	return nil
}

func (x *Consume) GetSpuRangeIds() []int64 {
	if x != nil {
		return x.SpuRangeIds
	}
	return nil
}

type ConsumeRewardRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderAmount     int64                `protobuf:"varint,1,opt,name=order_amount,json=orderAmount,proto3" json:"order_amount"`               //订单金额满X元
	IsGiveIntegral  bool                 `protobuf:"varint,2,opt,name=is_give_integral,json=isGiveIntegral,proto3" json:"is_give_integral"`    //是否送积分（0否，1是）
	IsGiveSurplus   bool                 `protobuf:"varint,3,opt,name=is_give_surplus,json=isGiveSurplus,proto3" json:"is_give_surplus"`       //是否送余额（0否，1是）
	IsGiveCoupon    bool                 `protobuf:"varint,4,opt,name=is_give_coupon,json=isGiveCoupon,proto3" json:"is_give_coupon"`          //是否送优惠劵（0否，1是）
	GiveIntegral    int64                `protobuf:"varint,5,opt,name=give_integral,json=giveIntegral,proto3" json:"give_integral"`            //送多少积分
	GiveSurplus     int64                `protobuf:"varint,6,opt,name=give_surplus,json=giveSurplus,proto3" json:"give_surplus"`               //送多少余额
	GiveMaxIntegral int64                `protobuf:"varint,7,opt,name=give_max_integral,json=giveMaxIntegral,proto3" json:"give_max_integral"` //最多送多少积分，0表示不限制
	GiveMaxSurplus  int64                `protobuf:"varint,8,opt,name=give_max_surplus,json=giveMaxSurplus,proto3" json:"give_max_surplus"`    //最多送多少余额，0表示不限制
	GiveCoupons     []*ConsumeGiveCoupon `protobuf:"bytes,9,rep,name=give_coupons,json=giveCoupons,proto3" json:"give_coupons"`                //赠送优惠劵列表
}

func (x *ConsumeRewardRule) Reset() {
	*x = ConsumeRewardRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosumeService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumeRewardRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeRewardRule) ProtoMessage() {}

func (x *ConsumeRewardRule) ProtoReflect() protoreflect.Message {
	mi := &file_cosumeService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeRewardRule.ProtoReflect.Descriptor instead.
func (*ConsumeRewardRule) Descriptor() ([]byte, []int) {
	return file_cosumeService_proto_rawDescGZIP(), []int{1}
}

func (x *ConsumeRewardRule) GetOrderAmount() int64 {
	if x != nil {
		return x.OrderAmount
	}
	return 0
}

func (x *ConsumeRewardRule) GetIsGiveIntegral() bool {
	if x != nil {
		return x.IsGiveIntegral
	}
	return false
}

func (x *ConsumeRewardRule) GetIsGiveSurplus() bool {
	if x != nil {
		return x.IsGiveSurplus
	}
	return false
}

func (x *ConsumeRewardRule) GetIsGiveCoupon() bool {
	if x != nil {
		return x.IsGiveCoupon
	}
	return false
}

func (x *ConsumeRewardRule) GetGiveIntegral() int64 {
	if x != nil {
		return x.GiveIntegral
	}
	return 0
}

func (x *ConsumeRewardRule) GetGiveSurplus() int64 {
	if x != nil {
		return x.GiveSurplus
	}
	return 0
}

func (x *ConsumeRewardRule) GetGiveMaxIntegral() int64 {
	if x != nil {
		return x.GiveMaxIntegral
	}
	return 0
}

func (x *ConsumeRewardRule) GetGiveMaxSurplus() int64 {
	if x != nil {
		return x.GiveMaxSurplus
	}
	return 0
}

func (x *ConsumeRewardRule) GetGiveCoupons() []*ConsumeGiveCoupon {
	if x != nil {
		return x.GiveCoupons
	}
	return nil
}

type ConsumeGiveCoupon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponId int64       `protobuf:"varint,1,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id"` //优惠劵ID
	Number   int32       `protobuf:"varint,2,opt,name=number,proto3" json:"number"`                     //数量
	Coupon   *CouponInfo `protobuf:"bytes,3,opt,name=coupon,proto3" json:"coupon"`
}

func (x *ConsumeGiveCoupon) Reset() {
	*x = ConsumeGiveCoupon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosumeService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumeGiveCoupon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeGiveCoupon) ProtoMessage() {}

func (x *ConsumeGiveCoupon) ProtoReflect() protoreflect.Message {
	mi := &file_cosumeService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeGiveCoupon.ProtoReflect.Descriptor instead.
func (*ConsumeGiveCoupon) Descriptor() ([]byte, []int) {
	return file_cosumeService_proto_rawDescGZIP(), []int{2}
}

func (x *ConsumeGiveCoupon) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *ConsumeGiveCoupon) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *ConsumeGiveCoupon) GetCoupon() *CouponInfo {
	if x != nil {
		return x.Coupon
	}
	return nil
}

type ConsumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top       int32    `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64    `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sorts     []string `protobuf:"bytes,5,rep,name=sorts,proto3" json:"sorts"`
	DateRange []string `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int64  `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int64    `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	//以下为自定义参数
	Name                 string `protobuf:"bytes,11,opt,name=name,proto3" json:"name"`                                                               //活动名称
	TimeType             string `protobuf:"bytes,12,opt,name=time_type,json=timeType,proto3" json:"time_type"`                                       //活动时间类型
	RewardConditionType  string `protobuf:"bytes,13,opt,name=reward_condition_type,json=rewardConditionType,proto3" json:"reward_condition_type"`    //赠送方式
	RewardOrderStatus    string `protobuf:"bytes,14,opt,name=reward_order_status,json=rewardOrderStatus,proto3" json:"reward_order_status"`          //赠送节点
	ParticipateMoneyType string `protobuf:"bytes,15,opt,name=participate_money_type,json=participateMoneyType,proto3" json:"participate_money_type"` //参与金额
	SpuRangeType         string `protobuf:"bytes,16,opt,name=spu_range_type,json=spuRangeType,proto3" json:"spu_range_type"`                         //适用商品
	SendTimeType         string `protobuf:"bytes,17,opt,name=send_time_type,json=sendTimeType,proto3" json:"send_time_type"`                         //赠送时间
	IsRecoverReward      string `protobuf:"bytes,18,opt,name=is_recover_reward,json=isRecoverReward,proto3" json:"is_recover_reward"`                //奖励是否回收
	IsSyncAddTag         string `protobuf:"bytes,19,opt,name=is_sync_add_tag,json=isSyncAddTag,proto3" json:"is_sync_add_tag"`                       //是否同步标签
	Status               string `protobuf:"bytes,20,opt,name=status,proto3" json:"status"`                                                           //状态： 0未开始，1进行中，2已结束
	PeriodTimeType       string `protobuf:"bytes,21,opt,name=period_time_type,json=periodTimeType,proto3" json:"period_time_type"`
}

func (x *ConsumeRequest) Reset() {
	*x = ConsumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosumeService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeRequest) ProtoMessage() {}

func (x *ConsumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cosumeService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeRequest.ProtoReflect.Descriptor instead.
func (*ConsumeRequest) Descriptor() ([]byte, []int) {
	return file_cosumeService_proto_rawDescGZIP(), []int{3}
}

func (x *ConsumeRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *ConsumeRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *ConsumeRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ConsumeRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *ConsumeRequest) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *ConsumeRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *ConsumeRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ConsumeRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConsumeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConsumeRequest) GetTimeType() string {
	if x != nil {
		return x.TimeType
	}
	return ""
}

func (x *ConsumeRequest) GetRewardConditionType() string {
	if x != nil {
		return x.RewardConditionType
	}
	return ""
}

func (x *ConsumeRequest) GetRewardOrderStatus() string {
	if x != nil {
		return x.RewardOrderStatus
	}
	return ""
}

func (x *ConsumeRequest) GetParticipateMoneyType() string {
	if x != nil {
		return x.ParticipateMoneyType
	}
	return ""
}

func (x *ConsumeRequest) GetSpuRangeType() string {
	if x != nil {
		return x.SpuRangeType
	}
	return ""
}

func (x *ConsumeRequest) GetSendTimeType() string {
	if x != nil {
		return x.SendTimeType
	}
	return ""
}

func (x *ConsumeRequest) GetIsRecoverReward() string {
	if x != nil {
		return x.IsRecoverReward
	}
	return ""
}

func (x *ConsumeRequest) GetIsSyncAddTag() string {
	if x != nil {
		return x.IsSyncAddTag
	}
	return ""
}

func (x *ConsumeRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ConsumeRequest) GetPeriodTimeType() string {
	if x != nil {
		return x.PeriodTimeType
	}
	return ""
}

type ConsumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Consume      `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*Consume    `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Msg    string        `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg"`
}

func (x *ConsumeResponse) Reset() {
	*x = ConsumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosumeService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeResponse) ProtoMessage() {}

func (x *ConsumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cosumeService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeResponse.ProtoReflect.Descriptor instead.
func (*ConsumeResponse) Descriptor() ([]byte, []int) {
	return file_cosumeService_proto_rawDescGZIP(), []int{4}
}

func (x *ConsumeResponse) GetEntity() *Consume {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *ConsumeResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *ConsumeResponse) GetItems() []*Consume {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ConsumeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_cosumeService_proto protoreflect.FileDescriptor

var file_cosumeService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a,
	0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x07, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x79, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x42, 0x65,
	0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x32, 0x0a, 0x15, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x70, 0x75,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x70, 0x75, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12,
	0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x73, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0f, 0x69,
	0x73, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x54,
	0x61, 0x67, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x41,
	0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31,
	0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x30, 0x0a, 0x0a, 0x73, 0x70, 0x75, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x18, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73, 0x70, 0x75, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x70, 0x75, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x70, 0x75, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x49, 0x64, 0x73, 0x22, 0x8c, 0x03, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28,
	0x0a, 0x10, 0x69, 0x73, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x47, 0x69, 0x76, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x67,
	0x69, 0x76, 0x65, 0x5f, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x69, 0x73, 0x47, 0x69, 0x76, 0x65, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73,
	0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x47, 0x69, 0x76, 0x65,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x69, 0x76, 0x65, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67,
	0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x67,
	0x69, 0x76, 0x65, 0x5f, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x67, 0x69, 0x76, 0x65, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x12, 0x2a,
	0x0a, 0x11, 0x67, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x67, 0x69, 0x76, 0x65, 0x4d,
	0x61, 0x78, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x69,
	0x76, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x78, 0x53, 0x75, 0x72,
	0x70, 0x6c, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x67, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x47, 0x69, 0x76,
	0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x0b, 0x67, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x73, 0x22, 0x76, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x47,
	0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2c,
	0x0a, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x22, 0xf4, 0x04, 0x0a,
	0x0e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x16,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x65,
	0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x70, 0x75, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x70, 0x75, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x73, 0x52, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0f, 0x69, 0x73,
	0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x54, 0x61,
	0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x32, 0xb0, 0x03, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x38, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x1a, 0x19, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x11, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x1a, 0x19,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x06, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cosumeService_proto_rawDescOnce sync.Once
	file_cosumeService_proto_rawDescData = file_cosumeService_proto_rawDesc
)

func file_cosumeService_proto_rawDescGZIP() []byte {
	file_cosumeService_proto_rawDescOnce.Do(func() {
		file_cosumeService_proto_rawDescData = protoimpl.X.CompressGZIP(file_cosumeService_proto_rawDescData)
	})
	return file_cosumeService_proto_rawDescData
}

var file_cosumeService_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_cosumeService_proto_goTypes = []interface{}{
	(*Consume)(nil),           // 0: services.Consume
	(*ConsumeRewardRule)(nil), // 1: services.ConsumeRewardRule
	(*ConsumeGiveCoupon)(nil), // 2: services.ConsumeGiveCoupon
	(*ConsumeRequest)(nil),    // 3: services.ConsumeRequest
	(*ConsumeResponse)(nil),   // 4: services.ConsumeResponse
	(*SpuInfo)(nil),           // 5: services.SpuInfo
	(*CouponInfo)(nil),        // 6: services.CouponInfo
	(*common.Pager)(nil),      // 7: common.Pager
}
var file_cosumeService_proto_depIdxs = []int32{
	1,  // 0: services.Consume.rules:type_name -> services.ConsumeRewardRule
	5,  // 1: services.Consume.spu_ranges:type_name -> services.SpuInfo
	2,  // 2: services.ConsumeRewardRule.give_coupons:type_name -> services.ConsumeGiveCoupon
	6,  // 3: services.ConsumeGiveCoupon.coupon:type_name -> services.CouponInfo
	0,  // 4: services.ConsumeResponse.entity:type_name -> services.Consume
	7,  // 5: services.ConsumeResponse.pager:type_name -> common.Pager
	0,  // 6: services.ConsumeResponse.items:type_name -> services.Consume
	0,  // 7: services.ConsumeService.Create:input_type -> services.Consume
	0,  // 8: services.ConsumeService.Update:input_type -> services.Consume
	0,  // 9: services.ConsumeService.Delete:input_type -> services.Consume
	0,  // 10: services.ConsumeService.Stop:input_type -> services.Consume
	0,  // 11: services.ConsumeService.Detail:input_type -> services.Consume
	3,  // 12: services.ConsumeService.Search:input_type -> services.ConsumeRequest
	3,  // 13: services.ConsumeService.List:input_type -> services.ConsumeRequest
	4,  // 14: services.ConsumeService.Create:output_type -> services.ConsumeResponse
	4,  // 15: services.ConsumeService.Update:output_type -> services.ConsumeResponse
	4,  // 16: services.ConsumeService.Delete:output_type -> services.ConsumeResponse
	4,  // 17: services.ConsumeService.Stop:output_type -> services.ConsumeResponse
	4,  // 18: services.ConsumeService.Detail:output_type -> services.ConsumeResponse
	4,  // 19: services.ConsumeService.Search:output_type -> services.ConsumeResponse
	4,  // 20: services.ConsumeService.List:output_type -> services.ConsumeResponse
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_cosumeService_proto_init() }
func file_cosumeService_proto_init() {
	if File_cosumeService_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cosumeService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Consume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosumeService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumeRewardRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosumeService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumeGiveCoupon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosumeService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosumeService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cosumeService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cosumeService_proto_goTypes,
		DependencyIndexes: file_cosumeService_proto_depIdxs,
		MessageInfos:      file_cosumeService_proto_msgTypes,
	}.Build()
	File_cosumeService_proto = out.File
	file_cosumeService_proto_rawDesc = nil
	file_cosumeService_proto_goTypes = nil
	file_cosumeService_proto_depIdxs = nil
}
