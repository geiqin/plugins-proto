syntax = "proto3";
package services;
option go_package = "/.;services";

//运费计算器
service CalculatorService {
    //快递运费计算
    rpc ExpressFee (CalculatorRequest) returns (CalculatorResponse) {}
    //同城配送费计算
    rpc DeliveryFee  (CalculatorRequest) returns (CalculatorResponse) {}
}

message CalculatorRequest {
    int64 area_id = 1;
    string longitude =2;
    string latitude =3;
    int32 total_num = 4;
    int64 total_weight = 5;
    int32 charging_method =6;
    repeated PurchaseSku purchase_skus =7;
}

message PurchaseSku {
    int64 sku_id =1; //skuId
    int32 num =2; //数量
    int64 weight =3; //重量
    string freight_type =4; //运费类型
    int64 freight_uniform_fee =5; //统一运费
    int64 freight_express_id =6;  //运费模板ID
}

message AdjustmentInfo {
    int64 sku_id = 1;
    string type = 2;
    string label = 3;
    string origin_code = 4;
    int64 amount =5;
    bool included =6;
}

message ExpressResult {
    int64 express_fee = 1;
    repeated AdjustmentInfo adjustments =2;
}


message DeliveryResult { 
    int64 delivery_fee = 1;
    repeated AdjustmentInfo adjustments =2;
}

message CalculatorResponse {
    ExpressResult express_result = 1;
    DeliveryResult delivery_result = 2;
}
