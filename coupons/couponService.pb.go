// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: couponService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//优惠劵
type Coupon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                        //ID
	ShopId           int64       `protobuf:"varint,2,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                                  //店铺id
	Name             string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`                                                     //名称
	Desc             string      `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc"`                                                     //描述
	BgColor          string      `protobuf:"bytes,5,opt,name=bg_color,json=bgColor,proto3" json:"bg_color"`                                //优惠券颜色
	Type             string      `protobuf:"bytes,6,opt,name=type,proto3" json:"type"`                                                     //优惠券类型（0满减劵, 1折扣劵,2代金劵）
	DiscountValue    int64       `protobuf:"varint,7,opt,name=discount_value,json=discountValue,proto3" json:"discount_value"`             //减免金额 | 折扣系数 0-100，95代表9.5折，0或空代表无折扣
	ExpireType       string      `protobuf:"bytes,8,opt,name=expire_type,json=expireType,proto3" json:"expire_type"`                       //到期类型（0领取生效, 1固定日期）
	ExpireHour       int32       `protobuf:"varint,9,opt,name=expire_hour,json=expireHour,proto3" json:"expire_hour"`                      //有效小时（单位 时）
	FixedStartTime   string      `protobuf:"bytes,10,opt,name=fixed_start_time,json=fixedStartTime,proto3" json:"fixed_start_time"`        //生效时间
	FixedEndTime     string      `protobuf:"bytes,11,opt,name=fixed_end_time,json=fixedEndTime,proto3" json:"fixed_end_time"`              //到期时间
	WhereOrderPrice  int64       `protobuf:"varint,12,opt,name=where_order_price,json=whereOrderPrice,proto3" json:"where_order_price"`    //订单最低金额
	UseLimitType     string      `protobuf:"bytes,13,opt,name=use_limit_type,json=useLimitType,proto3" json:"use_limit_type"`              //使用限制（0不限, 1商品分类, 2商品）
	UseValueIds      []int64     `protobuf:"varint,14,rep,packed,name=use_value_ids,json=useValueIds,proto3" json:"use_value_ids"`         //联商品分类id 或 关联商品id（以json存储）
	LimitSendCount   int32       `protobuf:"varint,15,opt,name=limit_send_count,json=limitSendCount,proto3" json:"limit_send_count"`       //限制发放总数量（0则不限）
	AlreadySendCount int32       `protobuf:"varint,16,opt,name=already_send_count,json=alreadySendCount,proto3" json:"already_send_count"` //已发放总数量
	Sort             int32       `protobuf:"varint,17,opt,name=sort,proto3" json:"sort"`                                                   //排序
	IsEnable         string      `protobuf:"bytes,18,opt,name=is_enable,json=isEnable,proto3" json:"is_enable"`                            //是否启用（0否，1是）
	IsUserReceive    string      `protobuf:"bytes,19,opt,name=is_user_receive,json=isUserReceive,proto3" json:"is_user_receive"`           //是否开放用户领取（0否, 1是）
	IsRegisterSend   string      `protobuf:"bytes,20,opt,name=is_register_send,json=isRegisterSend,proto3" json:"is_register_send"`        //是否注册即发放（0否, 1是）
	IsRepeatReceive  string      `protobuf:"bytes,21,opt,name=is_repeat_receive,json=isRepeatReceive,proto3" json:"is_repeat_receive"`     //允许用户重复领取（0否, 1是）
	CreatedAt        string      `protobuf:"bytes,22,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt        string      `protobuf:"bytes,23,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	UseSpuList       []*SpuInfo  `protobuf:"bytes,26,rep,name=use_spu_list,json=useSpuList,proto3" json:"use_spu_list"`
	Member           *MemberInfo `protobuf:"bytes,27,opt,name=member,proto3" json:"member"`
	BgColorName      string      `protobuf:"bytes,28,opt,name=bg_color_name,json=bgColorName,proto3" json:"bg_color_name"`                  //背景颜色名称
	BgColorValue     string      `protobuf:"bytes,29,opt,name=bg_color_value,json=bgColorValue,proto3" json:"bg_color_value"`               //背景颜色值
	ExpireTypeName   string      `protobuf:"bytes,30,opt,name=expire_type_name,json=expireTypeName,proto3" json:"expire_type_name"`         //到期类型名称
	UseLimitTypeName string      `protobuf:"bytes,31,opt,name=use_limit_type_name,json=useLimitTypeName,proto3" json:"use_limit_type_name"` //使用限制名称
	TypeName         string      `protobuf:"bytes,32,opt,name=type_name,json=typeName,proto3" json:"type_name"`                             //类型名称
	TypeUnit         string      `protobuf:"bytes,33,opt,name=type_unit,json=typeUnit,proto3" json:"type_unit"`                             //类型单位
	IsOperable       string      `protobuf:"bytes,34,opt,name=is_operable,json=isOperable,proto3" json:"is_operable"`                       //是否可以操作
	IsOperableName   string      `protobuf:"bytes,35,opt,name=is_operable_name,json=isOperableName,proto3" json:"is_operable_name"`         //是否可以操作名称
}

func (x *Coupon) Reset() {
	*x = Coupon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couponService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coupon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coupon) ProtoMessage() {}

func (x *Coupon) ProtoReflect() protoreflect.Message {
	mi := &file_couponService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coupon.ProtoReflect.Descriptor instead.
func (*Coupon) Descriptor() ([]byte, []int) {
	return file_couponService_proto_rawDescGZIP(), []int{0}
}

func (x *Coupon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Coupon) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *Coupon) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Coupon) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Coupon) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *Coupon) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Coupon) GetDiscountValue() int64 {
	if x != nil {
		return x.DiscountValue
	}
	return 0
}

func (x *Coupon) GetExpireType() string {
	if x != nil {
		return x.ExpireType
	}
	return ""
}

func (x *Coupon) GetExpireHour() int32 {
	if x != nil {
		return x.ExpireHour
	}
	return 0
}

func (x *Coupon) GetFixedStartTime() string {
	if x != nil {
		return x.FixedStartTime
	}
	return ""
}

func (x *Coupon) GetFixedEndTime() string {
	if x != nil {
		return x.FixedEndTime
	}
	return ""
}

func (x *Coupon) GetWhereOrderPrice() int64 {
	if x != nil {
		return x.WhereOrderPrice
	}
	return 0
}

func (x *Coupon) GetUseLimitType() string {
	if x != nil {
		return x.UseLimitType
	}
	return ""
}

func (x *Coupon) GetUseValueIds() []int64 {
	if x != nil {
		return x.UseValueIds
	}
	return nil
}

func (x *Coupon) GetLimitSendCount() int32 {
	if x != nil {
		return x.LimitSendCount
	}
	return 0
}

func (x *Coupon) GetAlreadySendCount() int32 {
	if x != nil {
		return x.AlreadySendCount
	}
	return 0
}

func (x *Coupon) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *Coupon) GetIsEnable() string {
	if x != nil {
		return x.IsEnable
	}
	return ""
}

func (x *Coupon) GetIsUserReceive() string {
	if x != nil {
		return x.IsUserReceive
	}
	return ""
}

func (x *Coupon) GetIsRegisterSend() string {
	if x != nil {
		return x.IsRegisterSend
	}
	return ""
}

func (x *Coupon) GetIsRepeatReceive() string {
	if x != nil {
		return x.IsRepeatReceive
	}
	return ""
}

func (x *Coupon) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Coupon) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Coupon) GetUseSpuList() []*SpuInfo {
	if x != nil {
		return x.UseSpuList
	}
	return nil
}

func (x *Coupon) GetMember() *MemberInfo {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *Coupon) GetBgColorName() string {
	if x != nil {
		return x.BgColorName
	}
	return ""
}

func (x *Coupon) GetBgColorValue() string {
	if x != nil {
		return x.BgColorValue
	}
	return ""
}

func (x *Coupon) GetExpireTypeName() string {
	if x != nil {
		return x.ExpireTypeName
	}
	return ""
}

func (x *Coupon) GetUseLimitTypeName() string {
	if x != nil {
		return x.UseLimitTypeName
	}
	return ""
}

func (x *Coupon) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *Coupon) GetTypeUnit() string {
	if x != nil {
		return x.TypeUnit
	}
	return ""
}

func (x *Coupon) GetIsOperable() string {
	if x != nil {
		return x.IsOperable
	}
	return ""
}

func (x *Coupon) GetIsOperableName() string {
	if x != nil {
		return x.IsOperableName
	}
	return ""
}

type CouponRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int64  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	OrderBy  string `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by"`
	//
	Id             int64   `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	Name           string  `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
	Type           string  `protobuf:"bytes,6,opt,name=type,proto3" json:"type"`
	IsEnable       string  `protobuf:"bytes,7,opt,name=is_enable,json=isEnable,proto3" json:"is_enable"`
	IsRegisterSend string  `protobuf:"bytes,8,opt,name=is_register_send,json=isRegisterSend,proto3" json:"is_register_send"`
	ShopId         int64   `protobuf:"varint,9,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`
	CouponId       int64   `protobuf:"varint,10,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id"`
	IsUserReceive  string  `protobuf:"bytes,11,opt,name=is_user_receive,json=isUserReceive,proto3" json:"is_user_receive"`
	Ids            []int64 `protobuf:"varint,12,rep,packed,name=ids,proto3" json:"ids"`
	MemberIds      []int64 `protobuf:"varint,13,rep,packed,name=member_ids,json=memberIds,proto3" json:"member_ids"`
}

func (x *CouponRequest) Reset() {
	*x = CouponRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couponService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponRequest) ProtoMessage() {}

func (x *CouponRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couponService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponRequest.ProtoReflect.Descriptor instead.
func (*CouponRequest) Descriptor() ([]byte, []int) {
	return file_couponService_proto_rawDescGZIP(), []int{1}
}

func (x *CouponRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *CouponRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *CouponRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *CouponRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CouponRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CouponRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CouponRequest) GetIsEnable() string {
	if x != nil {
		return x.IsEnable
	}
	return ""
}

func (x *CouponRequest) GetIsRegisterSend() string {
	if x != nil {
		return x.IsRegisterSend
	}
	return ""
}

func (x *CouponRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *CouponRequest) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *CouponRequest) GetIsUserReceive() string {
	if x != nil {
		return x.IsUserReceive
	}
	return ""
}

func (x *CouponRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *CouponRequest) GetMemberIds() []int64 {
	if x != nil {
		return x.MemberIds
	}
	return nil
}

type CouponBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationName    string `protobuf:"bytes,1,opt,name=application_name,json=applicationName,proto3" json:"application_name"`              //应用名称
	BannerImageUrl     string `protobuf:"bytes,2,opt,name=banner_image_url,json=bannerImageUrl,proto3" json:"banner_image_url"`               //优惠券首页顶部大图
	BannerBgColor      string `protobuf:"bytes,3,opt,name=banner_bg_color,json=bannerBgColor,proto3" json:"banner_bg_color"`                  //优惠券首页顶部大图（背景色）
	BannerUrl          string `protobuf:"bytes,4,opt,name=banner_url,json=bannerUrl,proto3" json:"banner_url"`                                //优惠券首页顶部大图链接url
	BannerIsWindowOpen string `protobuf:"bytes,5,opt,name=banner_is_window_open,json=bannerIsWindowOpen,proto3" json:"banner_is_window_open"` //是否新窗口打开（0否，1是）
	IsShopCoupon       string `protobuf:"bytes,7,opt,name=is_shop_coupon,json=isShopCoupon,proto3" json:"is_shop_coupon"`                     //开启支持多商户(0否、1是)
	IsShopNavCoupon    string `protobuf:"bytes,8,opt,name=is_shop_nav_coupon,json=isShopNavCoupon,proto3" json:"is_shop_nav_coupon"`          //开启多商户店铺优惠券导航入口(0否、1是)
}

func (x *CouponBaseInfo) Reset() {
	*x = CouponBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couponService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponBaseInfo) ProtoMessage() {}

func (x *CouponBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_couponService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponBaseInfo.ProtoReflect.Descriptor instead.
func (*CouponBaseInfo) Descriptor() ([]byte, []int) {
	return file_couponService_proto_rawDescGZIP(), []int{2}
}

func (x *CouponBaseInfo) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *CouponBaseInfo) GetBannerImageUrl() string {
	if x != nil {
		return x.BannerImageUrl
	}
	return ""
}

func (x *CouponBaseInfo) GetBannerBgColor() string {
	if x != nil {
		return x.BannerBgColor
	}
	return ""
}

func (x *CouponBaseInfo) GetBannerUrl() string {
	if x != nil {
		return x.BannerUrl
	}
	return ""
}

func (x *CouponBaseInfo) GetBannerIsWindowOpen() string {
	if x != nil {
		return x.BannerIsWindowOpen
	}
	return ""
}

func (x *CouponBaseInfo) GetIsShopCoupon() string {
	if x != nil {
		return x.IsShopCoupon
	}
	return ""
}

func (x *CouponBaseInfo) GetIsShopNavCoupon() string {
	if x != nil {
		return x.IsShopNavCoupon
	}
	return ""
}

type CouponData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Coupon         `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager   `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*Coupon       `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Msg    string          `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg"`
	Base   *CouponBaseInfo `protobuf:"bytes,5,opt,name=base,proto3" json:"base"`
}

func (x *CouponData) Reset() {
	*x = CouponData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couponService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponData) ProtoMessage() {}

func (x *CouponData) ProtoReflect() protoreflect.Message {
	mi := &file_couponService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponData.ProtoReflect.Descriptor instead.
func (*CouponData) Descriptor() ([]byte, []int) {
	return file_couponService_proto_rawDescGZIP(), []int{3}
}

func (x *CouponData) GetEntity() *Coupon {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *CouponData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *CouponData) GetItems() []*Coupon {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CouponData) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CouponData) GetBase() *CouponBaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

type CouponResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *CouponData   `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *CouponResponse) Reset() {
	*x = CouponResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couponService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponResponse) ProtoMessage() {}

func (x *CouponResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couponService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponResponse.ProtoReflect.Descriptor instead.
func (*CouponResponse) Descriptor() ([]byte, []int) {
	return file_couponService_proto_rawDescGZIP(), []int{4}
}

func (x *CouponResponse) GetData() *CouponData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CouponResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type PluginResultData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *CouponBaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base"`
	Data []*Coupon       `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
	Msg  string          `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg"`
}

func (x *PluginResultData) Reset() {
	*x = PluginResultData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couponService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginResultData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginResultData) ProtoMessage() {}

func (x *PluginResultData) ProtoReflect() protoreflect.Message {
	mi := &file_couponService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginResultData.ProtoReflect.Descriptor instead.
func (*PluginResultData) Descriptor() ([]byte, []int) {
	return file_couponService_proto_rawDescGZIP(), []int{5}
}

func (x *PluginResultData) GetBase() *CouponBaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PluginResultData) GetData() []*Coupon {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PluginResultData) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PluginResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *PluginResultData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error     `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *PluginResultResponse) Reset() {
	*x = PluginResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couponService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginResultResponse) ProtoMessage() {}

func (x *PluginResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couponService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginResultResponse.ProtoReflect.Descriptor instead.
func (*PluginResultResponse) Descriptor() ([]byte, []int) {
	return file_couponService_proto_rawDescGZIP(), []int{6}
}

func (x *PluginResultResponse) GetData() *PluginResultData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PluginResultResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_couponService_proto protoreflect.FileDescriptor

var file_couponService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a,
	0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x09, 0x0a, 0x06, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x28, 0x0a,
	0x10, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x78, 0x65, 0x64, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x69, 0x78, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x11, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x77, 0x68, 0x65, 0x72, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a,
	0x12, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x6c, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x69, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x73, 0x52, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x33, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x5f,
	0x73, 0x70, 0x75, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x53, 0x70, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x62,
	0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2d, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x75, 0x73,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xeb, 0x02, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65,
	0x6e, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x69, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x22, 0xb2, 0x02, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x42, 0x61, 0x73, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x5f, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x72, 0x6c,
	0x12, 0x31, 0x0a, 0x15, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x73, 0x5f, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x73, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4f,
	0x70, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x73, 0x53,
	0x68, 0x6f, 0x70, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x12, 0x69, 0x73, 0x5f,
	0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x76, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x76,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x22, 0xc3, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2c,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x42, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x5f, 0x0a, 0x0e,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x78, 0x0a,
	0x10, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2c, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x6b, 0x0a, 0x14, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x32, 0xcb, 0x05, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36,
	0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c,
	0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x06,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x17, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3b, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x15, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4e, 0x0a, 0x11, 0x42, 0x75, 0x79, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_couponService_proto_rawDescOnce sync.Once
	file_couponService_proto_rawDescData = file_couponService_proto_rawDesc
)

func file_couponService_proto_rawDescGZIP() []byte {
	file_couponService_proto_rawDescOnce.Do(func() {
		file_couponService_proto_rawDescData = protoimpl.X.CompressGZIP(file_couponService_proto_rawDescData)
	})
	return file_couponService_proto_rawDescData
}

var file_couponService_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_couponService_proto_goTypes = []interface{}{
	(*Coupon)(nil),               // 0: services.Coupon
	(*CouponRequest)(nil),        // 1: services.CouponRequest
	(*CouponBaseInfo)(nil),       // 2: services.CouponBaseInfo
	(*CouponData)(nil),           // 3: services.CouponData
	(*CouponResponse)(nil),       // 4: services.CouponResponse
	(*PluginResultData)(nil),     // 5: services.PluginResultData
	(*PluginResultResponse)(nil), // 6: services.PluginResultResponse
	(*SpuInfo)(nil),              // 7: services.SpuInfo
	(*MemberInfo)(nil),           // 8: services.MemberInfo
	(*common.Pager)(nil),         // 9: common.Pager
	(*common.Error)(nil),         // 10: common.Error
}
var file_couponService_proto_depIdxs = []int32{
	7,  // 0: services.Coupon.use_spu_list:type_name -> services.SpuInfo
	8,  // 1: services.Coupon.member:type_name -> services.MemberInfo
	0,  // 2: services.CouponData.entity:type_name -> services.Coupon
	9,  // 3: services.CouponData.pager:type_name -> common.Pager
	0,  // 4: services.CouponData.items:type_name -> services.Coupon
	2,  // 5: services.CouponData.base:type_name -> services.CouponBaseInfo
	3,  // 6: services.CouponResponse.data:type_name -> services.CouponData
	10, // 7: services.CouponResponse.error:type_name -> common.Error
	2,  // 8: services.PluginResultData.base:type_name -> services.CouponBaseInfo
	0,  // 9: services.PluginResultData.data:type_name -> services.Coupon
	5,  // 10: services.PluginResultResponse.data:type_name -> services.PluginResultData
	10, // 11: services.PluginResultResponse.error:type_name -> common.Error
	0,  // 12: services.CouponService.Create:input_type -> services.Coupon
	0,  // 13: services.CouponService.Update:input_type -> services.Coupon
	0,  // 14: services.CouponService.Delete:input_type -> services.Coupon
	0,  // 15: services.CouponService.StatusUpdate:input_type -> services.Coupon
	0,  // 16: services.CouponService.Detail:input_type -> services.Coupon
	1,  // 17: services.CouponService.Search:input_type -> services.CouponRequest
	1,  // 18: services.CouponService.Index:input_type -> services.CouponRequest
	1,  // 19: services.CouponService.Receive:input_type -> services.CouponRequest
	1,  // 20: services.CouponService.Send:input_type -> services.CouponRequest
	1,  // 21: services.CouponService.GoodsDetailCouponData:input_type -> services.CouponRequest
	1,  // 22: services.CouponService.BuyUserCouponData:input_type -> services.CouponRequest
	4,  // 23: services.CouponService.Create:output_type -> services.CouponResponse
	4,  // 24: services.CouponService.Update:output_type -> services.CouponResponse
	4,  // 25: services.CouponService.Delete:output_type -> services.CouponResponse
	4,  // 26: services.CouponService.StatusUpdate:output_type -> services.CouponResponse
	4,  // 27: services.CouponService.Detail:output_type -> services.CouponResponse
	4,  // 28: services.CouponService.Search:output_type -> services.CouponResponse
	4,  // 29: services.CouponService.Index:output_type -> services.CouponResponse
	4,  // 30: services.CouponService.Receive:output_type -> services.CouponResponse
	4,  // 31: services.CouponService.Send:output_type -> services.CouponResponse
	6,  // 32: services.CouponService.GoodsDetailCouponData:output_type -> services.PluginResultResponse
	6,  // 33: services.CouponService.BuyUserCouponData:output_type -> services.PluginResultResponse
	23, // [23:34] is the sub-list for method output_type
	12, // [12:23] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_couponService_proto_init() }
func file_couponService_proto_init() {
	if File_couponService_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_couponService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coupon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couponService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couponService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couponService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couponService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couponService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginResultData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couponService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_couponService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_couponService_proto_goTypes,
		DependencyIndexes: file_couponService_proto_depIdxs,
		MessageInfos:      file_couponService_proto_msgTypes,
	}.Build()
	File_couponService_proto = out.File
	file_couponService_proto_rawDesc = nil
	file_couponService_proto_goTypes = nil
	file_couponService_proto_depIdxs = nil
}
