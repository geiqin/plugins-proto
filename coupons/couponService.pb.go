// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: couponService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 优惠劵
type Coupon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                           //ID
	ShopId            int64       `protobuf:"varint,2,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                                     //店铺id
	CouponType        string      `protobuf:"bytes,3,opt,name=coupon_type,json=couponType,proto3" json:"coupon_type"`                          //优惠券类型
	CouponName        string      `protobuf:"bytes,4,opt,name=coupon_name,json=couponName,proto3" json:"coupon_name"`                          //名称
	CouponDesc        string      `protobuf:"bytes,5,opt,name=coupon_desc,json=couponDesc,proto3" json:"coupon_desc"`                          //名称备注
	UserType          string      `protobuf:"bytes,6,opt,name=user_type,json=userType,proto3" json:"user_type"`                                //用户类型
	FaceValue         int64       `protobuf:"varint,7,opt,name=face_value,json=faceValue,proto3" json:"face_value"`                            //优惠内容
	MaxValue          int64       `protobuf:"varint,8,opt,name=max_value,json=maxValue,proto3" json:"max_value"`                               //最多优惠
	MinValue          int64       `protobuf:"varint,9,opt,name=min_value,json=minValue,proto3" json:"min_value"`                               //最少优惠
	Description       string      `protobuf:"bytes,10,opt,name=description,proto3" json:"description"`                                         //优惠说明
	UseNotice         string      `protobuf:"bytes,11,opt,name=use_notice,json=useNotice,proto3" json:"use_notice"`                            //使用须知
	CardColor         string      `protobuf:"bytes,12,opt,name=card_color,json=cardColor,proto3" json:"card_color"`                            //优惠券颜色
	ExpireType        string      `protobuf:"bytes,13,opt,name=expire_type,json=expireType,proto3" json:"expire_type"`                         //到期类型
	ExpireDays        int32       `protobuf:"varint,14,opt,name=expire_days,json=expireDays,proto3" json:"expire_days"`                        //到期天数
	ExpireStartTime   string      `protobuf:"bytes,15,opt,name=expire_start_time,json=expireStartTime,proto3" json:"expire_start_time"`        //生效时间
	ExpireEndTime     string      `protobuf:"bytes,16,opt,name=expire_end_time,json=expireEndTime,proto3" json:"expire_end_time"`              //到期时间
	UsageThreshold    string      `protobuf:"bytes,17,opt,name=usage_threshold,json=usageThreshold,proto3" json:"usage_threshold"`             //使用门槛
	ThresholdAmount   int64       `protobuf:"varint,18,opt,name=threshold_amount,json=thresholdAmount,proto3" json:"threshold_amount"`         //门槛金额
	LimitReceiveType  string      `protobuf:"bytes,19,opt,name=limit_receive_type,json=limitReceiveType,proto3" json:"limit_receive_type"`     //每人限领类型
	LimitReceiveCount int32       `protobuf:"varint,20,opt,name=limit_receive_count,json=limitReceiveCount,proto3" json:"limit_receive_count"` //每人限领次数
	IssueCount        int32       `protobuf:"varint,21,opt,name=issue_count,json=issueCount,proto3" json:"issue_count"`                        //发放总量
	ReceivedCount     int32       `protobuf:"varint,22,opt,name=received_count,json=receivedCount,proto3" json:"received_count"`               //领取数量
	SpuRangeType      string      `protobuf:"bytes,23,opt,name=spu_range_type,json=spuRangeType,proto3" json:"spu_range_type"`                 //适用商品类型
	IsPublicReceive   string      `protobuf:"bytes,24,opt,name=is_public_receive,json=isPublicReceive,proto3" json:"is_public_receive"`        //是否公开领取
	IsTransferGiving  string      `protobuf:"bytes,25,opt,name=is_transfer_giving,json=isTransferGiving,proto3" json:"is_transfer_giving"`     //是否转赠
	IsSyncAddTag      string      `protobuf:"bytes,26,opt,name=is_sync_add_tag,json=isSyncAddTag,proto3" json:"is_sync_add_tag"`               //领取打标签
	SyncAddTags       []string    `protobuf:"bytes,27,rep,name=sync_add_tags,json=syncAddTags,proto3" json:"sync_add_tags"`                    //同步的标签
	Status            string      `protobuf:"bytes,28,opt,name=status,proto3" json:"status"`                                                   //启用状态
	CreatedAt         string      `protobuf:"bytes,29,opt,name=created_at,json=createdAt,proto3" json:"created_at"`                            //创建时间
	UpdatedAt         string      `protobuf:"bytes,30,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`                            //修改时间
	SpuRanges         []*SpuInfo  `protobuf:"bytes,36,rep,name=spu_ranges,json=spuRanges,proto3" json:"spu_ranges"`
	Member            *MemberInfo `protobuf:"bytes,37,opt,name=member,proto3" json:"member"`
	BgColorName       string      `protobuf:"bytes,38,opt,name=bg_color_name,json=bgColorName,proto3" json:"bg_color_name"`          //背景颜色名称
	BgColorValue      string      `protobuf:"bytes,39,opt,name=bg_color_value,json=bgColorValue,proto3" json:"bg_color_value"`       //背景颜色值
	ExpireTypeName    string      `protobuf:"bytes,40,opt,name=expire_type_name,json=expireTypeName,proto3" json:"expire_type_name"` //到期类型名称
	CouponTypeName    string      `protobuf:"bytes,41,opt,name=coupon_type_name,json=couponTypeName,proto3" json:"coupon_type_name"` //类型名称
	IsOperable        string      `protobuf:"bytes,42,opt,name=is_operable,json=isOperable,proto3" json:"is_operable"`               //是否可以操作
	IsOperableName    string      `protobuf:"bytes,43,opt,name=is_operable_name,json=isOperableName,proto3" json:"is_operable_name"` //是否可以操作名称
	SpuRangeIds       []int64     `protobuf:"varint,44,rep,packed,name=spu_range_ids,json=spuRangeIds,proto3" json:"spu_range_ids"`  //编辑需要
}

func (x *Coupon) Reset() {
	*x = Coupon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couponService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coupon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coupon) ProtoMessage() {}

func (x *Coupon) ProtoReflect() protoreflect.Message {
	mi := &file_couponService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coupon.ProtoReflect.Descriptor instead.
func (*Coupon) Descriptor() ([]byte, []int) {
	return file_couponService_proto_rawDescGZIP(), []int{0}
}

func (x *Coupon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Coupon) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *Coupon) GetCouponType() string {
	if x != nil {
		return x.CouponType
	}
	return ""
}

func (x *Coupon) GetCouponName() string {
	if x != nil {
		return x.CouponName
	}
	return ""
}

func (x *Coupon) GetCouponDesc() string {
	if x != nil {
		return x.CouponDesc
	}
	return ""
}

func (x *Coupon) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *Coupon) GetFaceValue() int64 {
	if x != nil {
		return x.FaceValue
	}
	return 0
}

func (x *Coupon) GetMaxValue() int64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *Coupon) GetMinValue() int64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

func (x *Coupon) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Coupon) GetUseNotice() string {
	if x != nil {
		return x.UseNotice
	}
	return ""
}

func (x *Coupon) GetCardColor() string {
	if x != nil {
		return x.CardColor
	}
	return ""
}

func (x *Coupon) GetExpireType() string {
	if x != nil {
		return x.ExpireType
	}
	return ""
}

func (x *Coupon) GetExpireDays() int32 {
	if x != nil {
		return x.ExpireDays
	}
	return 0
}

func (x *Coupon) GetExpireStartTime() string {
	if x != nil {
		return x.ExpireStartTime
	}
	return ""
}

func (x *Coupon) GetExpireEndTime() string {
	if x != nil {
		return x.ExpireEndTime
	}
	return ""
}

func (x *Coupon) GetUsageThreshold() string {
	if x != nil {
		return x.UsageThreshold
	}
	return ""
}

func (x *Coupon) GetThresholdAmount() int64 {
	if x != nil {
		return x.ThresholdAmount
	}
	return 0
}

func (x *Coupon) GetLimitReceiveType() string {
	if x != nil {
		return x.LimitReceiveType
	}
	return ""
}

func (x *Coupon) GetLimitReceiveCount() int32 {
	if x != nil {
		return x.LimitReceiveCount
	}
	return 0
}

func (x *Coupon) GetIssueCount() int32 {
	if x != nil {
		return x.IssueCount
	}
	return 0
}

func (x *Coupon) GetReceivedCount() int32 {
	if x != nil {
		return x.ReceivedCount
	}
	return 0
}

func (x *Coupon) GetSpuRangeType() string {
	if x != nil {
		return x.SpuRangeType
	}
	return ""
}

func (x *Coupon) GetIsPublicReceive() string {
	if x != nil {
		return x.IsPublicReceive
	}
	return ""
}

func (x *Coupon) GetIsTransferGiving() string {
	if x != nil {
		return x.IsTransferGiving
	}
	return ""
}

func (x *Coupon) GetIsSyncAddTag() string {
	if x != nil {
		return x.IsSyncAddTag
	}
	return ""
}

func (x *Coupon) GetSyncAddTags() []string {
	if x != nil {
		return x.SyncAddTags
	}
	return nil
}

func (x *Coupon) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Coupon) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Coupon) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Coupon) GetSpuRanges() []*SpuInfo {
	if x != nil {
		return x.SpuRanges
	}
	return nil
}

func (x *Coupon) GetMember() *MemberInfo {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *Coupon) GetBgColorName() string {
	if x != nil {
		return x.BgColorName
	}
	return ""
}

func (x *Coupon) GetBgColorValue() string {
	if x != nil {
		return x.BgColorValue
	}
	return ""
}

func (x *Coupon) GetExpireTypeName() string {
	if x != nil {
		return x.ExpireTypeName
	}
	return ""
}

func (x *Coupon) GetCouponTypeName() string {
	if x != nil {
		return x.CouponTypeName
	}
	return ""
}

func (x *Coupon) GetIsOperable() string {
	if x != nil {
		return x.IsOperable
	}
	return ""
}

func (x *Coupon) GetIsOperableName() string {
	if x != nil {
		return x.IsOperableName
	}
	return ""
}

func (x *Coupon) GetSpuRangeIds() []int64 {
	if x != nil {
		return x.SpuRangeIds
	}
	return nil
}

type CouponRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top       int32    `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64    `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sorts     []string `protobuf:"bytes,5,rep,name=sorts,proto3" json:"sorts"`
	DateRange []string `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int64  `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int64    `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	//以下为自定义参数
	ShopId           int64   `protobuf:"varint,11,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                                //店铺id
	CouponType       string  `protobuf:"bytes,12,opt,name=coupon_type,json=couponType,proto3" json:"coupon_type"`                     //优惠券类型
	CouponName       string  `protobuf:"bytes,13,opt,name=coupon_name,json=couponName,proto3" json:"coupon_name"`                     //名称
	UserType         string  `protobuf:"bytes,14,opt,name=user_type,json=userType,proto3" json:"user_type"`                           //用户类型
	ExpireType       string  `protobuf:"bytes,15,opt,name=expire_type,json=expireType,proto3" json:"expire_type"`                     //到期类型
	LimitReceiveType string  `protobuf:"bytes,16,opt,name=limit_receive_type,json=limitReceiveType,proto3" json:"limit_receive_type"` //每人限领类型
	IsSyncAddTag     string  `protobuf:"bytes,17,opt,name=is_sync_add_tag,json=isSyncAddTag,proto3" json:"is_sync_add_tag"`           //领取打标签
	Status           string  `protobuf:"bytes,18,opt,name=status,proto3" json:"status"`                                               //启用状态
	SpuId            int64   `protobuf:"varint,19,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`
	CouponId         int64   `protobuf:"varint,20,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id"`
	MemberIds        []int64 `protobuf:"varint,21,rep,packed,name=member_ids,json=memberIds,proto3" json:"member_ids"`
}

func (x *CouponRequest) Reset() {
	*x = CouponRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couponService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponRequest) ProtoMessage() {}

func (x *CouponRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couponService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponRequest.ProtoReflect.Descriptor instead.
func (*CouponRequest) Descriptor() ([]byte, []int) {
	return file_couponService_proto_rawDescGZIP(), []int{1}
}

func (x *CouponRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *CouponRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *CouponRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *CouponRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *CouponRequest) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *CouponRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *CouponRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *CouponRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CouponRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *CouponRequest) GetCouponType() string {
	if x != nil {
		return x.CouponType
	}
	return ""
}

func (x *CouponRequest) GetCouponName() string {
	if x != nil {
		return x.CouponName
	}
	return ""
}

func (x *CouponRequest) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *CouponRequest) GetExpireType() string {
	if x != nil {
		return x.ExpireType
	}
	return ""
}

func (x *CouponRequest) GetLimitReceiveType() string {
	if x != nil {
		return x.LimitReceiveType
	}
	return ""
}

func (x *CouponRequest) GetIsSyncAddTag() string {
	if x != nil {
		return x.IsSyncAddTag
	}
	return ""
}

func (x *CouponRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CouponRequest) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *CouponRequest) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *CouponRequest) GetMemberIds() []int64 {
	if x != nil {
		return x.MemberIds
	}
	return nil
}

type CouponSendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberIds  []int64                  `protobuf:"varint,1,rep,packed,name=member_ids,json=memberIds,proto3" json:"member_ids"`
	CouponList []*CouponSendRequestList `protobuf:"bytes,2,rep,name=coupon_list,json=couponList,proto3" json:"coupon_list"`
}

func (x *CouponSendRequest) Reset() {
	*x = CouponSendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couponService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponSendRequest) ProtoMessage() {}

func (x *CouponSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couponService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponSendRequest.ProtoReflect.Descriptor instead.
func (*CouponSendRequest) Descriptor() ([]byte, []int) {
	return file_couponService_proto_rawDescGZIP(), []int{2}
}

func (x *CouponSendRequest) GetMemberIds() []int64 {
	if x != nil {
		return x.MemberIds
	}
	return nil
}

func (x *CouponSendRequest) GetCouponList() []*CouponSendRequestList {
	if x != nil {
		return x.CouponList
	}
	return nil
}

type CouponBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationName    string `protobuf:"bytes,1,opt,name=application_name,json=applicationName,proto3" json:"application_name"`              //应用名称
	BannerImageUrl     string `protobuf:"bytes,2,opt,name=banner_image_url,json=bannerImageUrl,proto3" json:"banner_image_url"`               //优惠券首页顶部大图
	BannerBgColor      string `protobuf:"bytes,3,opt,name=banner_bg_color,json=bannerBgColor,proto3" json:"banner_bg_color"`                  //优惠券首页顶部大图（背景色）
	BannerUrl          string `protobuf:"bytes,4,opt,name=banner_url,json=bannerUrl,proto3" json:"banner_url"`                                //优惠券首页顶部大图链接url
	BannerIsWindowOpen string `protobuf:"bytes,5,opt,name=banner_is_window_open,json=bannerIsWindowOpen,proto3" json:"banner_is_window_open"` //是否新窗口打开（0否，1是）
	IsShopCoupon       string `protobuf:"bytes,7,opt,name=is_shop_coupon,json=isShopCoupon,proto3" json:"is_shop_coupon"`                     //开启支持多商户(0否、1是)
	IsShopNavCoupon    string `protobuf:"bytes,8,opt,name=is_shop_nav_coupon,json=isShopNavCoupon,proto3" json:"is_shop_nav_coupon"`          //开启多商户店铺优惠券导航入口(0否、1是)
}

func (x *CouponBaseInfo) Reset() {
	*x = CouponBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couponService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponBaseInfo) ProtoMessage() {}

func (x *CouponBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_couponService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponBaseInfo.ProtoReflect.Descriptor instead.
func (*CouponBaseInfo) Descriptor() ([]byte, []int) {
	return file_couponService_proto_rawDescGZIP(), []int{3}
}

func (x *CouponBaseInfo) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *CouponBaseInfo) GetBannerImageUrl() string {
	if x != nil {
		return x.BannerImageUrl
	}
	return ""
}

func (x *CouponBaseInfo) GetBannerBgColor() string {
	if x != nil {
		return x.BannerBgColor
	}
	return ""
}

func (x *CouponBaseInfo) GetBannerUrl() string {
	if x != nil {
		return x.BannerUrl
	}
	return ""
}

func (x *CouponBaseInfo) GetBannerIsWindowOpen() string {
	if x != nil {
		return x.BannerIsWindowOpen
	}
	return ""
}

func (x *CouponBaseInfo) GetIsShopCoupon() string {
	if x != nil {
		return x.IsShopCoupon
	}
	return ""
}

func (x *CouponBaseInfo) GetIsShopNavCoupon() string {
	if x != nil {
		return x.IsShopNavCoupon
	}
	return ""
}

type CouponResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Coupon         `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager   `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*Coupon       `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Msg    string          `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg"`
	Base   *CouponBaseInfo `protobuf:"bytes,5,opt,name=base,proto3" json:"base"`
}

func (x *CouponResponse) Reset() {
	*x = CouponResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couponService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponResponse) ProtoMessage() {}

func (x *CouponResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couponService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponResponse.ProtoReflect.Descriptor instead.
func (*CouponResponse) Descriptor() ([]byte, []int) {
	return file_couponService_proto_rawDescGZIP(), []int{4}
}

func (x *CouponResponse) GetEntity() *Coupon {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *CouponResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *CouponResponse) GetItems() []*Coupon {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CouponResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CouponResponse) GetBase() *CouponBaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

type CouponSendRequestList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponId int64 `protobuf:"varint,1,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id"`
	SendNum  int32 `protobuf:"varint,2,opt,name=send_num,json=sendNum,proto3" json:"send_num"`
}

func (x *CouponSendRequestList) Reset() {
	*x = CouponSendRequestList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couponService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponSendRequestList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponSendRequestList) ProtoMessage() {}

func (x *CouponSendRequestList) ProtoReflect() protoreflect.Message {
	mi := &file_couponService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponSendRequestList.ProtoReflect.Descriptor instead.
func (*CouponSendRequestList) Descriptor() ([]byte, []int) {
	return file_couponService_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CouponSendRequestList) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *CouponSendRequestList) GetSendNum() int32 {
	if x != nil {
		return x.SendNum
	}
	return 0
}

var File_couponService_proto protoreflect.FileDescriptor

var file_couponService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a,
	0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x0b, 0x0a, 0x06, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x66, 0x61, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x61, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x69,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72,
	0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e,
	0x0a, 0x13, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x70, 0x75, 0x5f, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x70, 0x75, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x67, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x47, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x12, 0x22, 0x0a,
	0x0d, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x1b,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x73, 0x70, 0x75, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x24, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x73, 0x70, 0x75, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x67, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x62,
	0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x27, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0d, 0x73, 0x70, 0x75, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x2c, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x70, 0x75, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x49, 0x64, 0x73, 0x22, 0xa0, 0x04, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x69, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x41, 0x0a, 0x0b,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x1a,
	0x3e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x22,
	0xb2, 0x02, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x5f, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x31,
	0x0a, 0x15, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x73, 0x5f, 0x77, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x73, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4f, 0x70, 0x65,
	0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x68, 0x6f,
	0x70, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x73, 0x68,
	0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x76, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x76, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x22, 0xc7, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x2c, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x32, 0xab,
	0x04, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x36, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x36, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d,
	0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a,
	0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x07, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x04, 0x53,
	0x65, 0x6e, 0x64, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b,
	0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_couponService_proto_rawDescOnce sync.Once
	file_couponService_proto_rawDescData = file_couponService_proto_rawDesc
)

func file_couponService_proto_rawDescGZIP() []byte {
	file_couponService_proto_rawDescOnce.Do(func() {
		file_couponService_proto_rawDescData = protoimpl.X.CompressGZIP(file_couponService_proto_rawDescData)
	})
	return file_couponService_proto_rawDescData
}

var file_couponService_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_couponService_proto_goTypes = []interface{}{
	(*Coupon)(nil),                // 0: services.Coupon
	(*CouponRequest)(nil),         // 1: services.CouponRequest
	(*CouponSendRequest)(nil),     // 2: services.CouponSendRequest
	(*CouponBaseInfo)(nil),        // 3: services.CouponBaseInfo
	(*CouponResponse)(nil),        // 4: services.CouponResponse
	(*CouponSendRequestList)(nil), // 5: services.CouponSendRequest.list
	(*SpuInfo)(nil),               // 6: services.SpuInfo
	(*MemberInfo)(nil),            // 7: services.MemberInfo
	(*common.Pager)(nil),          // 8: common.Pager
}
var file_couponService_proto_depIdxs = []int32{
	6,  // 0: services.Coupon.spu_ranges:type_name -> services.SpuInfo
	7,  // 1: services.Coupon.member:type_name -> services.MemberInfo
	5,  // 2: services.CouponSendRequest.coupon_list:type_name -> services.CouponSendRequest.list
	0,  // 3: services.CouponResponse.entity:type_name -> services.Coupon
	8,  // 4: services.CouponResponse.pager:type_name -> common.Pager
	0,  // 5: services.CouponResponse.items:type_name -> services.Coupon
	3,  // 6: services.CouponResponse.base:type_name -> services.CouponBaseInfo
	0,  // 7: services.CouponService.Create:input_type -> services.Coupon
	0,  // 8: services.CouponService.Update:input_type -> services.Coupon
	0,  // 9: services.CouponService.Delete:input_type -> services.Coupon
	0,  // 10: services.CouponService.UpdateStatus:input_type -> services.Coupon
	0,  // 11: services.CouponService.Detail:input_type -> services.Coupon
	1,  // 12: services.CouponService.Search:input_type -> services.CouponRequest
	1,  // 13: services.CouponService.Index:input_type -> services.CouponRequest
	1,  // 14: services.CouponService.Receive:input_type -> services.CouponRequest
	2,  // 15: services.CouponService.Send:input_type -> services.CouponSendRequest
	4,  // 16: services.CouponService.Create:output_type -> services.CouponResponse
	4,  // 17: services.CouponService.Update:output_type -> services.CouponResponse
	4,  // 18: services.CouponService.Delete:output_type -> services.CouponResponse
	4,  // 19: services.CouponService.UpdateStatus:output_type -> services.CouponResponse
	4,  // 20: services.CouponService.Detail:output_type -> services.CouponResponse
	4,  // 21: services.CouponService.Search:output_type -> services.CouponResponse
	4,  // 22: services.CouponService.Index:output_type -> services.CouponResponse
	4,  // 23: services.CouponService.Receive:output_type -> services.CouponResponse
	4,  // 24: services.CouponService.Send:output_type -> services.CouponResponse
	16, // [16:25] is the sub-list for method output_type
	7,  // [7:16] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_couponService_proto_init() }
func file_couponService_proto_init() {
	if File_couponService_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_couponService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coupon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couponService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couponService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponSendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couponService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couponService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couponService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponSendRequestList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_couponService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_couponService_proto_goTypes,
		DependencyIndexes: file_couponService_proto_depIdxs,
		MessageInfos:      file_couponService_proto_msgTypes,
	}.Build()
	File_couponService_proto = out.File
	file_couponService_proto_rawDesc = nil
	file_couponService_proto_goTypes = nil
	file_couponService_proto_depIdxs = nil
}
