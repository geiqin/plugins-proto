// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: general.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DictType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Items []*DictInfo `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *DictType) Reset() {
	*x = DictType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_general_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictType) ProtoMessage() {}

func (x *DictType) ProtoReflect() protoreflect.Message {
	mi := &file_general_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictType.ProtoReflect.Descriptor instead.
func (*DictType) Descriptor() ([]byte, []int) {
	return file_general_proto_rawDescGZIP(), []int{0}
}

func (x *DictType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DictType) GetItems() []*DictInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

type DictRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int64  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	OrderBy  string `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by"`
	//
	Id       int64    `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	Name     string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
	Type     string   `protobuf:"bytes,6,opt,name=type,proto3" json:"type"`
	TypeList []string `protobuf:"bytes,7,rep,name=type_list,json=typeList,proto3" json:"type_list"`
}

func (x *DictRequest) Reset() {
	*x = DictRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_general_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictRequest) ProtoMessage() {}

func (x *DictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_general_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictRequest.ProtoReflect.Descriptor instead.
func (*DictRequest) Descriptor() ([]byte, []int) {
	return file_general_proto_rawDescGZIP(), []int{1}
}

func (x *DictRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *DictRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DictRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *DictRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DictRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DictRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DictRequest) GetTypeList() []string {
	if x != nil {
		return x.TypeList
	}
	return nil
}

type DictData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity   *DictInfo     `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager    *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	DictList []*DictType   `protobuf:"bytes,3,rep,name=dict_list,json=dictList,proto3" json:"dict_list"`
	Info     *common.Info  `protobuf:"bytes,4,opt,name=info,proto3" json:"info"`
}

func (x *DictData) Reset() {
	*x = DictData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_general_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictData) ProtoMessage() {}

func (x *DictData) ProtoReflect() protoreflect.Message {
	mi := &file_general_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictData.ProtoReflect.Descriptor instead.
func (*DictData) Descriptor() ([]byte, []int) {
	return file_general_proto_rawDescGZIP(), []int{2}
}

func (x *DictData) GetEntity() *DictInfo {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *DictData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *DictData) GetDictList() []*DictType {
	if x != nil {
		return x.DictList
	}
	return nil
}

func (x *DictData) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type DictResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *DictData     `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *DictResponse) Reset() {
	*x = DictResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_general_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictResponse) ProtoMessage() {}

func (x *DictResponse) ProtoReflect() protoreflect.Message {
	mi := &file_general_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictResponse.ProtoReflect.Descriptor instead.
func (*DictResponse) Descriptor() ([]byte, []int) {
	return file_general_proto_rawDescGZIP(), []int{3}
}

func (x *DictResponse) GetData() *DictData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DictResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

//配置
type CouponConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationName                 string            `protobuf:"bytes,1,opt,name=application_name,json=applicationName,proto3" json:"application_name"`                                                                                         //应用名称
	BannerImageUrl                  string            `protobuf:"bytes,2,opt,name=banner_image_url,json=bannerImageUrl,proto3" json:"banner_image_url"`                                                                                          //优惠券首页顶部大图
	BannerBgColor                   string            `protobuf:"bytes,3,opt,name=banner_bg_color,json=bannerBgColor,proto3" json:"banner_bg_color"`                                                                                             //优惠券首页顶部大图（背景色）
	IsUserCouponSendSiteNotice      string            `protobuf:"bytes,7,opt,name=is_user_coupon_send_site_notice,json=isUserCouponSendSiteNotice,proto3" json:"is_user_coupon_send_site_notice"`                                                //优惠券发放站内信通知
	IsExcludeSeckillGoodsOrder      string            `protobuf:"bytes,8,opt,name=is_exclude_seckill_goods_order,json=isExcludeSeckillGoodsOrder,proto3" json:"is_exclude_seckill_goods_order"`                                                  //限时秒杀商品订单不可用(0否、1是)
	IsUserCouponSendSmsNotice       string            `protobuf:"bytes,9,opt,name=is_user_coupon_send_sms_notice,json=isUserCouponSendSmsNotice,proto3" json:"is_user_coupon_send_sms_notice"`                                                   //优惠券发放短信通知
	UserCouponSendNoticeSmsTemplate string            `protobuf:"bytes,10,opt,name=user_coupon_send_notice_sms_template,json=userCouponSendNoticeSmsTemplate,proto3" json:"user_coupon_send_notice_sms_template"`                                //优惠券发放通知短信模板
	IsShopCoupon                    string            `protobuf:"bytes,11,opt,name=is_shop_coupon,json=isShopCoupon,proto3" json:"is_shop_coupon"`                                                                                               //开启支持多商户(0否、1是)
	IsShopNavCoupon                 string            `protobuf:"bytes,12,opt,name=is_shop_nav_coupon,json=isShopNavCoupon,proto3" json:"is_shop_nav_coupon"`                                                                                    //开启多商户店铺优惠券导航入口(0否、1是)
	BannerUrlRules                  map[string]string `protobuf:"bytes,13,rep,name=banner_url_rules,json=bannerUrlRules,proto3" json:"banner_url_rules" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //优惠券首页顶部大图（链接地址）
}

func (x *CouponConfig) Reset() {
	*x = CouponConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_general_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponConfig) ProtoMessage() {}

func (x *CouponConfig) ProtoReflect() protoreflect.Message {
	mi := &file_general_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponConfig.ProtoReflect.Descriptor instead.
func (*CouponConfig) Descriptor() ([]byte, []int) {
	return file_general_proto_rawDescGZIP(), []int{4}
}

func (x *CouponConfig) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *CouponConfig) GetBannerImageUrl() string {
	if x != nil {
		return x.BannerImageUrl
	}
	return ""
}

func (x *CouponConfig) GetBannerBgColor() string {
	if x != nil {
		return x.BannerBgColor
	}
	return ""
}

func (x *CouponConfig) GetIsUserCouponSendSiteNotice() string {
	if x != nil {
		return x.IsUserCouponSendSiteNotice
	}
	return ""
}

func (x *CouponConfig) GetIsExcludeSeckillGoodsOrder() string {
	if x != nil {
		return x.IsExcludeSeckillGoodsOrder
	}
	return ""
}

func (x *CouponConfig) GetIsUserCouponSendSmsNotice() string {
	if x != nil {
		return x.IsUserCouponSendSmsNotice
	}
	return ""
}

func (x *CouponConfig) GetUserCouponSendNoticeSmsTemplate() string {
	if x != nil {
		return x.UserCouponSendNoticeSmsTemplate
	}
	return ""
}

func (x *CouponConfig) GetIsShopCoupon() string {
	if x != nil {
		return x.IsShopCoupon
	}
	return ""
}

func (x *CouponConfig) GetIsShopNavCoupon() string {
	if x != nil {
		return x.IsShopNavCoupon
	}
	return ""
}

func (x *CouponConfig) GetBannerUrlRules() map[string]string {
	if x != nil {
		return x.BannerUrlRules
	}
	return nil
}

type ConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *CouponConfig `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *ConfigResponse) Reset() {
	*x = ConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_general_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResponse) ProtoMessage() {}

func (x *ConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_general_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResponse.ProtoReflect.Descriptor instead.
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return file_general_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigResponse) GetData() *CouponConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_general_proto protoreflect.FileDescriptor

var file_general_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x48, 0x0a, 0x08, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb0, 0x01,
	0x0a, 0x0b, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0xae, 0x01, 0x0a, 0x08, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a,
	0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2f,
	0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x5b, 0x0a, 0x0c, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x92,
	0x05, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x62,
	0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x1f,
	0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x69, 0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x12, 0x42, 0x0a, 0x1e, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x69, 0x73, 0x45, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x1e, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x6d, 0x73,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x69,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x53,
	0x6d, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x24, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x5f, 0x73, 0x6d, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53, 0x6d, 0x73, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73, 0x68,
	0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x2b, 0x0a,
	0x12, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x76, 0x5f, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x73, 0x53, 0x68, 0x6f,
	0x70, 0x4e, 0x61, 0x76, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x10, 0x62, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x1a, 0x41, 0x0a, 0x13, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x61, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xd0, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x44, 0x69, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x18, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0a, 0x53, 0x61, 0x76, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x18, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_general_proto_rawDescOnce sync.Once
	file_general_proto_rawDescData = file_general_proto_rawDesc
)

func file_general_proto_rawDescGZIP() []byte {
	file_general_proto_rawDescOnce.Do(func() {
		file_general_proto_rawDescData = protoimpl.X.CompressGZIP(file_general_proto_rawDescData)
	})
	return file_general_proto_rawDescData
}

var file_general_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_general_proto_goTypes = []interface{}{
	(*DictType)(nil),       // 0: services.DictType
	(*DictRequest)(nil),    // 1: services.DictRequest
	(*DictData)(nil),       // 2: services.DictData
	(*DictResponse)(nil),   // 3: services.DictResponse
	(*CouponConfig)(nil),   // 4: services.CouponConfig
	(*ConfigResponse)(nil), // 5: services.ConfigResponse
	nil,                    // 6: services.CouponConfig.BannerUrlRulesEntry
	(*DictInfo)(nil),       // 7: services.DictInfo
	(*common.Pager)(nil),   // 8: common.Pager
	(*common.Info)(nil),    // 9: common.Info
	(*common.Error)(nil),   // 10: common.Error
}
var file_general_proto_depIdxs = []int32{
	7,  // 0: services.DictType.items:type_name -> services.DictInfo
	7,  // 1: services.DictData.entity:type_name -> services.DictInfo
	8,  // 2: services.DictData.pager:type_name -> common.Pager
	0,  // 3: services.DictData.dict_list:type_name -> services.DictType
	9,  // 4: services.DictData.info:type_name -> common.Info
	2,  // 5: services.DictResponse.data:type_name -> services.DictData
	10, // 6: services.DictResponse.error:type_name -> common.Error
	6,  // 7: services.CouponConfig.banner_url_rules:type_name -> services.CouponConfig.BannerUrlRulesEntry
	4,  // 8: services.ConfigResponse.data:type_name -> services.CouponConfig
	10, // 9: services.ConfigResponse.error:type_name -> common.Error
	1,  // 10: services.GeneralService.DictList:input_type -> services.DictRequest
	4,  // 11: services.GeneralService.GetConfig:input_type -> services.CouponConfig
	4,  // 12: services.GeneralService.SaveConfig:input_type -> services.CouponConfig
	3,  // 13: services.GeneralService.DictList:output_type -> services.DictResponse
	5,  // 14: services.GeneralService.GetConfig:output_type -> services.ConfigResponse
	5,  // 15: services.GeneralService.SaveConfig:output_type -> services.ConfigResponse
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_general_proto_init() }
func file_general_proto_init() {
	if File_general_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_general_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_general_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_general_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_general_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_general_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_general_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_general_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_general_proto_goTypes,
		DependencyIndexes: file_general_proto_depIdxs,
		MessageInfos:      file_general_proto_msgTypes,
	}.Build()
	File_general_proto = out.File
	file_general_proto_rawDesc = nil
	file_general_proto_goTypes = nil
	file_general_proto_depIdxs = nil
}
