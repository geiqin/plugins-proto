// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: baseInfoService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                         //ID
	Type         string `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`                                      //类型
	Number       string `protobuf:"bytes,3,opt,name=number,proto3" json:"number"`                                  //会员编号
	Username     string `protobuf:"bytes,4,opt,name=username,proto3" json:"username"`                              //用户名称
	Nickname     string `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname"`                              //用户昵称
	Gender       string `protobuf:"bytes,6,opt,name=gender,proto3" json:"gender"`                                  //性别
	Birthday     string `protobuf:"bytes,7,opt,name=birthday,proto3" json:"birthday"`                              //会员生日
	AvatarUrl    string `protobuf:"bytes,8,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url"`           //头像
	ProvinceId   int64  `protobuf:"varint,9,opt,name=province_id,json=provinceId,proto3" json:"province_id"`       //所在省ID
	CityId       int64  `protobuf:"varint,10,opt,name=city_id,json=cityId,proto3" json:"city_id"`                  //所在市ID
	CountyId     int64  `protobuf:"varint,11,opt,name=county_id,json=countyId,proto3" json:"county_id"`            //所在区ID
	ProvinceName string `protobuf:"bytes,12,opt,name=province_name,json=provinceName,proto3" json:"province_name"` //所在省
	CityName     string `protobuf:"bytes,13,opt,name=city_name,json=cityName,proto3" json:"city_name"`             //所在市
	CountyName   string `protobuf:"bytes,14,opt,name=county_name,json=countyName,proto3" json:"county_name"`       //所在区
	Mobile       string `protobuf:"bytes,15,opt,name=mobile,proto3" json:"mobile"`                                 //手机号
	Status       string `protobuf:"bytes,16,opt,name=status,proto3" json:"status"`                                 //状态
}

func (x *MemberInfo) Reset() {
	*x = MemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberInfo) ProtoMessage() {}

func (x *MemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberInfo.ProtoReflect.Descriptor instead.
func (*MemberInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{0}
}

func (x *MemberInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MemberInfo) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *MemberInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *MemberInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *MemberInfo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *MemberInfo) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *MemberInfo) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *MemberInfo) GetProvinceId() int64 {
	if x != nil {
		return x.ProvinceId
	}
	return 0
}

func (x *MemberInfo) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *MemberInfo) GetCountyId() int64 {
	if x != nil {
		return x.CountyId
	}
	return 0
}

func (x *MemberInfo) GetProvinceName() string {
	if x != nil {
		return x.ProvinceName
	}
	return ""
}

func (x *MemberInfo) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *MemberInfo) GetCountyName() string {
	if x != nil {
		return x.CountyName
	}
	return ""
}

func (x *MemberInfo) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *MemberInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SpuInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                    //ID
	Type       string `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`                                 //商品类型
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`                                 //商品名称
	Code       string `protobuf:"bytes,4,opt,name=code,proto3" json:"code"`                                 //SPU编码
	ImageUrl   string `protobuf:"bytes,5,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`         //商品主图
	IsVirtual  string `protobuf:"bytes,6,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual"`      //虚拟商品
	IsManySpec string `protobuf:"bytes,7,opt,name=is_many_spec,json=isManySpec,proto3" json:"is_many_spec"` //多规格商品
	UnitId     int32  `protobuf:"varint,8,opt,name=unit_id,json=unitId,proto3" json:"unit_id"`              //计量单位ID
	UnitName   string `protobuf:"bytes,9,opt,name=unit_name,json=unitName,proto3" json:"unit_name"`         //计量单位名称
	UnitType   string `protobuf:"bytes,10,opt,name=unit_type,json=unitType,proto3" json:"unit_type"`        //计量单位类型
	Inventory  int64  `protobuf:"varint,11,opt,name=inventory,proto3" json:"inventory"`                     //库存
	IsShelve   string `protobuf:"bytes,12,opt,name=is_shelve,json=isShelve,proto3" json:"is_shelve"`        //是否上架
	MinPrice   int64  `protobuf:"varint,13,opt,name=min_price,json=minPrice,proto3" json:"min_price"`       //最低价格
	MaxPrice   int64  `protobuf:"varint,14,opt,name=max_price,json=maxPrice,proto3" json:"max_price"`       //最高价格
	Status     string `protobuf:"bytes,15,opt,name=status,proto3" json:"status"`                            //商品状态
}

func (x *SpuInfo) Reset() {
	*x = SpuInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuInfo) ProtoMessage() {}

func (x *SpuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuInfo.ProtoReflect.Descriptor instead.
func (*SpuInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{1}
}

func (x *SpuInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpuInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SpuInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpuInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SpuInfo) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *SpuInfo) GetIsVirtual() string {
	if x != nil {
		return x.IsVirtual
	}
	return ""
}

func (x *SpuInfo) GetIsManySpec() string {
	if x != nil {
		return x.IsManySpec
	}
	return ""
}

func (x *SpuInfo) GetUnitId() int32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *SpuInfo) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

func (x *SpuInfo) GetUnitType() string {
	if x != nil {
		return x.UnitType
	}
	return ""
}

func (x *SpuInfo) GetInventory() int64 {
	if x != nil {
		return x.Inventory
	}
	return 0
}

func (x *SpuInfo) GetIsShelve() string {
	if x != nil {
		return x.IsShelve
	}
	return ""
}

func (x *SpuInfo) GetMinPrice() int64 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *SpuInfo) GetMaxPrice() int64 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *SpuInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type OrderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                            //ID
	OrderNo            string  `protobuf:"bytes,2,opt,name=order_no,json=orderNo,proto3" json:"order_no"`                                    //订单号
	Type               string  `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`                                                         //订单类型
	MemberId           int64   `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id"`                                //买家ID
	ShopId             int64   `protobuf:"varint,5,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                                      //多商户ID
	RealstoreId        int64   `protobuf:"varint,6,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`                       //多门店ID
	WarehouseId        int64   `protobuf:"varint,7,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id"`                       //仓库ID
	BuyCount           float32 `protobuf:"fixed32,8,opt,name=buy_count,json=buyCount,proto3" json:"buy_count"`                               //购买总数
	BuyCountNumber     int64   `protobuf:"varint,9,opt,name=buy_count_number,json=buyCountNumber,proto3" json:"buy_count_number"`            //购买总件数
	BuyCountWeighed    int64   `protobuf:"varint,10,opt,name=buy_count_weighed,json=buyCountWeighed,proto3" json:"buy_count_weighed"`        //购买总称重
	TotalAmount        int64   `protobuf:"varint,11,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount"`                      //订单单价
	ActualAmount       int64   `protobuf:"varint,12,opt,name=actual_amount,json=actualAmount,proto3" json:"actual_amount"`                   //订单实付
	IncreaseAmount     int64   `protobuf:"varint,13,opt,name=increase_amount,json=increaseAmount,proto3" json:"increase_amount"`             //增加金额
	PreferentialAmount int64   `protobuf:"varint,14,opt,name=preferential_amount,json=preferentialAmount,proto3" json:"preferential_amount"` //优惠金额
	UseIntegral        int64   `protobuf:"varint,15,opt,name=use_integral,json=useIntegral,proto3" json:"use_integral"`                      //使用积分
	UseSurplus         int64   `protobuf:"varint,16,opt,name=use_surplus,json=useSurplus,proto3" json:"use_surplus"`                         //使用余额
	MemberCouponIds    []int64 `protobuf:"varint,17,rep,packed,name=member_coupon_ids,json=memberCouponIds,proto3" json:"member_coupon_ids"` //用户优惠劵
	PaidAmount         int64   `protobuf:"varint,18,opt,name=paid_amount,json=paidAmount,proto3" json:"paid_amount"`                         //已支付金额
	RefundedAmount     int64   `protobuf:"varint,19,opt,name=refunded_amount,json=refundedAmount,proto3" json:"refunded_amount"`             //已退款金额
	ReturnedNumber     int64   `protobuf:"varint,20,opt,name=returned_number,json=returnedNumber,proto3" json:"returned_number"`             //已退货数量
	DeliveredNumber    int64   `protobuf:"varint,21,opt,name=delivered_number,json=deliveredNumber,proto3" json:"delivered_number"`          //已发货数量
	ClientType         string  `protobuf:"bytes,44,opt,name=client_type,json=clientType,proto3" json:"client_type"`                          //客户端类型
	PayStatus          string  `protobuf:"bytes,45,opt,name=pay_status,json=payStatus,proto3" json:"pay_status"`                             //支付状态
	Status             string  `protobuf:"bytes,46,opt,name=status,proto3" json:"status"`                                                    //订单状态
	ConfirmTime        string  `protobuf:"bytes,47,opt,name=confirm_time,json=confirmTime,proto3" json:"confirm_time"`                       //确认时间
	PayTime            string  `protobuf:"bytes,48,opt,name=pay_time,json=payTime,proto3" json:"pay_time"`                                   //确认时间
	DeliveryTime       string  `protobuf:"bytes,49,opt,name=delivery_time,json=deliveryTime,proto3" json:"delivery_time"`                    //确认时间
	CollectTime        string  `protobuf:"bytes,50,opt,name=collect_time,json=collectTime,proto3" json:"collect_time"`                       //收货时间
	CancelTime         string  `protobuf:"bytes,51,opt,name=cancel_time,json=cancelTime,proto3" json:"cancel_time"`                          //取消时间
	CloseTime          string  `protobuf:"bytes,52,opt,name=close_time,json=closeTime,proto3" json:"close_time"`                             //退款完成时间
	CommentTime        string  `protobuf:"bytes,53,opt,name=comment_time,json=commentTime,proto3" json:"comment_time"`                       //订单完成时间
	OutSystemId        string  `protobuf:"bytes,54,opt,name=out_system_id,json=outSystemId,proto3" json:"out_system_id"`                     //外部系统ID
	CreatedAt          string  `protobuf:"bytes,55,opt,name=created_at,json=createdAt,proto3" json:"created_at"`                             //创建时间
}

func (x *OrderInfo) Reset() {
	*x = OrderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderInfo) ProtoMessage() {}

func (x *OrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderInfo.ProtoReflect.Descriptor instead.
func (*OrderInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{2}
}

func (x *OrderInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderInfo) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *OrderInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OrderInfo) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *OrderInfo) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *OrderInfo) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *OrderInfo) GetWarehouseId() int64 {
	if x != nil {
		return x.WarehouseId
	}
	return 0
}

func (x *OrderInfo) GetBuyCount() float32 {
	if x != nil {
		return x.BuyCount
	}
	return 0
}

func (x *OrderInfo) GetBuyCountNumber() int64 {
	if x != nil {
		return x.BuyCountNumber
	}
	return 0
}

func (x *OrderInfo) GetBuyCountWeighed() int64 {
	if x != nil {
		return x.BuyCountWeighed
	}
	return 0
}

func (x *OrderInfo) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *OrderInfo) GetActualAmount() int64 {
	if x != nil {
		return x.ActualAmount
	}
	return 0
}

func (x *OrderInfo) GetIncreaseAmount() int64 {
	if x != nil {
		return x.IncreaseAmount
	}
	return 0
}

func (x *OrderInfo) GetPreferentialAmount() int64 {
	if x != nil {
		return x.PreferentialAmount
	}
	return 0
}

func (x *OrderInfo) GetUseIntegral() int64 {
	if x != nil {
		return x.UseIntegral
	}
	return 0
}

func (x *OrderInfo) GetUseSurplus() int64 {
	if x != nil {
		return x.UseSurplus
	}
	return 0
}

func (x *OrderInfo) GetMemberCouponIds() []int64 {
	if x != nil {
		return x.MemberCouponIds
	}
	return nil
}

func (x *OrderInfo) GetPaidAmount() int64 {
	if x != nil {
		return x.PaidAmount
	}
	return 0
}

func (x *OrderInfo) GetRefundedAmount() int64 {
	if x != nil {
		return x.RefundedAmount
	}
	return 0
}

func (x *OrderInfo) GetReturnedNumber() int64 {
	if x != nil {
		return x.ReturnedNumber
	}
	return 0
}

func (x *OrderInfo) GetDeliveredNumber() int64 {
	if x != nil {
		return x.DeliveredNumber
	}
	return 0
}

func (x *OrderInfo) GetClientType() string {
	if x != nil {
		return x.ClientType
	}
	return ""
}

func (x *OrderInfo) GetPayStatus() string {
	if x != nil {
		return x.PayStatus
	}
	return ""
}

func (x *OrderInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderInfo) GetConfirmTime() string {
	if x != nil {
		return x.ConfirmTime
	}
	return ""
}

func (x *OrderInfo) GetPayTime() string {
	if x != nil {
		return x.PayTime
	}
	return ""
}

func (x *OrderInfo) GetDeliveryTime() string {
	if x != nil {
		return x.DeliveryTime
	}
	return ""
}

func (x *OrderInfo) GetCollectTime() string {
	if x != nil {
		return x.CollectTime
	}
	return ""
}

func (x *OrderInfo) GetCancelTime() string {
	if x != nil {
		return x.CancelTime
	}
	return ""
}

func (x *OrderInfo) GetCloseTime() string {
	if x != nil {
		return x.CloseTime
	}
	return ""
}

func (x *OrderInfo) GetCommentTime() string {
	if x != nil {
		return x.CommentTime
	}
	return ""
}

func (x *OrderInfo) GetOutSystemId() string {
	if x != nil {
		return x.OutSystemId
	}
	return ""
}

func (x *OrderInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type OrderExtensionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Type       string `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`
	Price      int64  `protobuf:"varint,4,opt,name=price,proto3" json:"price"`
	Business   string `protobuf:"bytes,5,opt,name=business,proto3" json:"business"`
	Tips       string `protobuf:"bytes,6,opt,name=tips,proto3" json:"tips"`
	OriginData string `protobuf:"bytes,7,opt,name=origin_data,json=originData,proto3" json:"origin_data"`
}

func (x *OrderExtensionInfo) Reset() {
	*x = OrderExtensionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderExtensionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderExtensionInfo) ProtoMessage() {}

func (x *OrderExtensionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderExtensionInfo.ProtoReflect.Descriptor instead.
func (*OrderExtensionInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{3}
}

func (x *OrderExtensionInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderExtensionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderExtensionInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OrderExtensionInfo) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderExtensionInfo) GetBusiness() string {
	if x != nil {
		return x.Business
	}
	return ""
}

func (x *OrderExtensionInfo) GetTips() string {
	if x != nil {
		return x.Tips
	}
	return ""
}

func (x *OrderExtensionInfo) GetOriginData() string {
	if x != nil {
		return x.OriginData
	}
	return ""
}

type AppNavInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon  string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	Url   string `protobuf:"bytes,3,opt,name=url,proto3" json:"url"`
}

func (x *AppNavInfo) Reset() {
	*x = AppNavInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppNavInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppNavInfo) ProtoMessage() {}

func (x *AppNavInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppNavInfo.ProtoReflect.Descriptor instead.
func (*AppNavInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{4}
}

func (x *AppNavInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AppNavInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AppNavInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type DictInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Value   string `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`
	Class   string `protobuf:"bytes,3,opt,name=class,proto3" json:"class"`
	Color   string `protobuf:"bytes,4,opt,name=color,proto3" json:"color"`
	Checked bool   `protobuf:"varint,5,opt,name=checked,proto3" json:"checked"`
}

func (x *DictInfo) Reset() {
	*x = DictInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictInfo) ProtoMessage() {}

func (x *DictInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictInfo.ProtoReflect.Descriptor instead.
func (*DictInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{5}
}

func (x *DictInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DictInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DictInfo) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

func (x *DictInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *DictInfo) GetChecked() bool {
	if x != nil {
		return x.Checked
	}
	return false
}

var File_baseInfoService_proto protoreflect.FileDescriptor

var file_baseInfoService_proto_rawDesc = []byte{
	0x0a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x22, 0xbd, 0x03, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x93, 0x03, 0x0a, 0x07, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x79,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x4d,
	0x61, 0x6e, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73,
	0x68, 0x65, 0x6c, 0x76, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x53,
	0x68, 0x65, 0x6c, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xed, 0x08, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x62, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a,
	0x10, 0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x75, 0x79, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x62, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69,
	0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x12, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x73, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x5f,
	0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75,
	0x73, 0x65, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x11,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x69, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x2e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x31, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x37, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb3, 0x01, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x70, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x70, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x48, 0x0a,
	0x0a, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x7a, 0x0a, 0x08, 0x44, 0x69, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x64, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_baseInfoService_proto_rawDescOnce sync.Once
	file_baseInfoService_proto_rawDescData = file_baseInfoService_proto_rawDesc
)

func file_baseInfoService_proto_rawDescGZIP() []byte {
	file_baseInfoService_proto_rawDescOnce.Do(func() {
		file_baseInfoService_proto_rawDescData = protoimpl.X.CompressGZIP(file_baseInfoService_proto_rawDescData)
	})
	return file_baseInfoService_proto_rawDescData
}

var file_baseInfoService_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_baseInfoService_proto_goTypes = []interface{}{
	(*MemberInfo)(nil),         // 0: services.MemberInfo
	(*SpuInfo)(nil),            // 1: services.SpuInfo
	(*OrderInfo)(nil),          // 2: services.OrderInfo
	(*OrderExtensionInfo)(nil), // 3: services.OrderExtensionInfo
	(*AppNavInfo)(nil),         // 4: services.AppNavInfo
	(*DictInfo)(nil),           // 5: services.DictInfo
}
var file_baseInfoService_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_baseInfoService_proto_init() }
func file_baseInfoService_proto_init() {
	if File_baseInfoService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_baseInfoService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpuInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderExtensionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppNavInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_baseInfoService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_baseInfoService_proto_goTypes,
		DependencyIndexes: file_baseInfoService_proto_depIdxs,
		MessageInfos:      file_baseInfoService_proto_msgTypes,
	}.Build()
	File_baseInfoService_proto = out.File
	file_baseInfoService_proto_rawDesc = nil
	file_baseInfoService_proto_goTypes = nil
	file_baseInfoService_proto_depIdxs = nil
}
