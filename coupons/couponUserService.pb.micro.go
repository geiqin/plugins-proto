// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: couponUserService.proto

package services

import (
	fmt "fmt"
	_ "github.com/geiqin/micro-kit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for CouponUserService service

func NewCouponUserServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for CouponUserService service

type CouponUserService interface {
	//用户优惠券删除
	Delete(ctx context.Context, in *CouponUser, opts ...client.CallOption) (*CouponUserResponse, error)
	//用户优惠劵详情
	Detail(ctx context.Context, in *CouponUser, opts ...client.CallOption) (*CouponUserResponse, error)
	//我的优惠劵
	Index(ctx context.Context, in *CouponUserRequest, opts ...client.CallOption) (*CouponUserResponse, error)
	//用户优惠劵查询
	Search(ctx context.Context, in *CouponUserRequest, opts ...client.CallOption) (*CouponUserResponse, error)
	//用户优惠劵可用列表（支付展示）
	UsableList(ctx context.Context, in *CouponUserRequest, opts ...client.CallOption) (*CouponUserResponse, error)
}

type couponUserService struct {
	c    client.Client
	name string
}

func NewCouponUserService(name string, c client.Client) CouponUserService {
	return &couponUserService{
		c:    c,
		name: name,
	}
}

func (c *couponUserService) Delete(ctx context.Context, in *CouponUser, opts ...client.CallOption) (*CouponUserResponse, error) {
	req := c.c.NewRequest(c.name, "CouponUserService.Delete", in)
	out := new(CouponUserResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponUserService) Detail(ctx context.Context, in *CouponUser, opts ...client.CallOption) (*CouponUserResponse, error) {
	req := c.c.NewRequest(c.name, "CouponUserService.Detail", in)
	out := new(CouponUserResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponUserService) Index(ctx context.Context, in *CouponUserRequest, opts ...client.CallOption) (*CouponUserResponse, error) {
	req := c.c.NewRequest(c.name, "CouponUserService.Index", in)
	out := new(CouponUserResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponUserService) Search(ctx context.Context, in *CouponUserRequest, opts ...client.CallOption) (*CouponUserResponse, error) {
	req := c.c.NewRequest(c.name, "CouponUserService.Search", in)
	out := new(CouponUserResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponUserService) UsableList(ctx context.Context, in *CouponUserRequest, opts ...client.CallOption) (*CouponUserResponse, error) {
	req := c.c.NewRequest(c.name, "CouponUserService.UsableList", in)
	out := new(CouponUserResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CouponUserService service

type CouponUserServiceHandler interface {
	//用户优惠券删除
	Delete(context.Context, *CouponUser, *CouponUserResponse) error
	//用户优惠劵详情
	Detail(context.Context, *CouponUser, *CouponUserResponse) error
	//我的优惠劵
	Index(context.Context, *CouponUserRequest, *CouponUserResponse) error
	//用户优惠劵查询
	Search(context.Context, *CouponUserRequest, *CouponUserResponse) error
	//用户优惠劵可用列表（支付展示）
	UsableList(context.Context, *CouponUserRequest, *CouponUserResponse) error
}

func RegisterCouponUserServiceHandler(s server.Server, hdlr CouponUserServiceHandler, opts ...server.HandlerOption) error {
	type couponUserService interface {
		Delete(ctx context.Context, in *CouponUser, out *CouponUserResponse) error
		Detail(ctx context.Context, in *CouponUser, out *CouponUserResponse) error
		Index(ctx context.Context, in *CouponUserRequest, out *CouponUserResponse) error
		Search(ctx context.Context, in *CouponUserRequest, out *CouponUserResponse) error
		UsableList(ctx context.Context, in *CouponUserRequest, out *CouponUserResponse) error
	}
	type CouponUserService struct {
		couponUserService
	}
	h := &couponUserServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&CouponUserService{h}, opts...))
}

type couponUserServiceHandler struct {
	CouponUserServiceHandler
}

func (h *couponUserServiceHandler) Delete(ctx context.Context, in *CouponUser, out *CouponUserResponse) error {
	return h.CouponUserServiceHandler.Delete(ctx, in, out)
}

func (h *couponUserServiceHandler) Detail(ctx context.Context, in *CouponUser, out *CouponUserResponse) error {
	return h.CouponUserServiceHandler.Detail(ctx, in, out)
}

func (h *couponUserServiceHandler) Index(ctx context.Context, in *CouponUserRequest, out *CouponUserResponse) error {
	return h.CouponUserServiceHandler.Index(ctx, in, out)
}

func (h *couponUserServiceHandler) Search(ctx context.Context, in *CouponUserRequest, out *CouponUserResponse) error {
	return h.CouponUserServiceHandler.Search(ctx, in, out)
}

func (h *couponUserServiceHandler) UsableList(ctx context.Context, in *CouponUserRequest, out *CouponUserResponse) error {
	return h.CouponUserServiceHandler.UsableList(ctx, in, out)
}
