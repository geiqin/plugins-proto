// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: configService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//钱包配置
type WalletConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEnableRecharge         string   `protobuf:"bytes,1,opt,name=is_enable_recharge,json=isEnableRecharge,proto3" json:"is_enable_recharge"`                            //是否开启充值(0否、1是)
	RechargeGiveType         string   `protobuf:"bytes,2,opt,name=recharge_give_type,json=rechargeGiveType,proto3" json:"recharge_give_type"`                            //充值类型：固定金额或比例充值赠送默认固定金额
	RechargeGiveValue        int64    `protobuf:"varint,3,opt,name=recharge_give_value,json=rechargeGiveValue,proto3" json:"recharge_give_value"`                        //充值赠送值：赠送金额规则，小于0或空则不赠送，固定金额，填写相应的金额即可，比例：填写百分比数值，如 10% 则填写 10（小数保留两位、四舍五入）
	WalletEditMoneyPassword  string   `protobuf:"bytes,4,opt,name=wallet_edit_money_password,json=walletEditMoneyPassword,proto3" json:"wallet_edit_money_password"`     //修改钱包金额密码：1. 该密码仅超管有权限修改 2. 在用户钱包管理中、修改用户钱包余额的时候需要输入该密码 3. 留空则不修改
	IsEnableCash             string   `protobuf:"bytes,5,opt,name=is_enable_cash,json=isEnableCash,proto3" json:"is_enable_cash"`                                        //是否开启提现申请(0否、1是)
	IsCashRetainGive         string   `protobuf:"bytes,6,opt,name=is_cash_retain_give,json=isCashRetainGive,proto3" json:"is_cash_retain_give"`                          //是否提现保留赠送金额(0否、1是)
	CashTimeLimit            int32    `protobuf:"varint,7,opt,name=cash_time_limit,json=cashTimeLimit,proto3" json:"cash_time_limit"`                                    //提现申请时间限制（提现申请通过安全验证后，在规定时间内完提现申请操作，默认30分钟）
	CashMinimumAmount        int64    `protobuf:"varint,8,opt,name=cash_minimum_amount,json=cashMinimumAmount,proto3" json:"cash_minimum_amount"`                        //提现最低金额默认不限制
	PaymentCodeValidTime     int32    `protobuf:"varint,9,opt,name=payment_code_valid_time,json=paymentCodeValidTime,proto3" json:"payment_code_valid_time"`             //付款码有效时间,默认30秒
	IsMoneyChangeNotice      string   `protobuf:"bytes,10,opt,name=is_money_change_notice,json=isMoneyChangeNotice,proto3" json:"is_money_change_notice"`                //余额变更通知(0否、1是)
	SmsSign                  string   `protobuf:"bytes,11,opt,name=sms_sign,json=smsSign,proto3" json:"sms_sign"`                                                        //短信签名
	SmsMoneyChangeTemplate   string   `protobuf:"bytes,12,opt,name=sms_money_change_template,json=smsMoneyChangeTemplate,proto3" json:"sms_money_change_template"`       //短信模板ID-余额变更,空则不发送、提示信息标识符 [ ${money_type} , ${opt_type} , ${money} ]
	EmailMoneyChangeTemplate string   `protobuf:"bytes,13,opt,name=email_money_change_template,json=emailMoneyChangeTemplate,proto3" json:"email_money_change_template"` //邮件通知模板-余额变更空则不发送、提示信息标识符 [ #content# ]
	CustomRechargeGive       []string `protobuf:"bytes,14,rep,name=custom_recharge_give,json=customRechargeGive,proto3" json:"custom_recharge_give"`                     //自定义充值赠送、一行一个金额赠送规则、如果匹配到自定义充值赠送后不进行【固定金额或比例充值赠送】,如：充值1000元赠送10元：1000+10
	UserCenterNotice         []string `protobuf:"bytes,15,rep,name=user_center_notice,json=userCenterNotice,proto3" json:"user_center_notice"`                           //钱包中心通知公告
}

func (x *WalletConfig) Reset() {
	*x = WalletConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletConfig) ProtoMessage() {}

func (x *WalletConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletConfig.ProtoReflect.Descriptor instead.
func (*WalletConfig) Descriptor() ([]byte, []int) {
	return file_configService_proto_rawDescGZIP(), []int{0}
}

func (x *WalletConfig) GetIsEnableRecharge() string {
	if x != nil {
		return x.IsEnableRecharge
	}
	return ""
}

func (x *WalletConfig) GetRechargeGiveType() string {
	if x != nil {
		return x.RechargeGiveType
	}
	return ""
}

func (x *WalletConfig) GetRechargeGiveValue() int64 {
	if x != nil {
		return x.RechargeGiveValue
	}
	return 0
}

func (x *WalletConfig) GetWalletEditMoneyPassword() string {
	if x != nil {
		return x.WalletEditMoneyPassword
	}
	return ""
}

func (x *WalletConfig) GetIsEnableCash() string {
	if x != nil {
		return x.IsEnableCash
	}
	return ""
}

func (x *WalletConfig) GetIsCashRetainGive() string {
	if x != nil {
		return x.IsCashRetainGive
	}
	return ""
}

func (x *WalletConfig) GetCashTimeLimit() int32 {
	if x != nil {
		return x.CashTimeLimit
	}
	return 0
}

func (x *WalletConfig) GetCashMinimumAmount() int64 {
	if x != nil {
		return x.CashMinimumAmount
	}
	return 0
}

func (x *WalletConfig) GetPaymentCodeValidTime() int32 {
	if x != nil {
		return x.PaymentCodeValidTime
	}
	return 0
}

func (x *WalletConfig) GetIsMoneyChangeNotice() string {
	if x != nil {
		return x.IsMoneyChangeNotice
	}
	return ""
}

func (x *WalletConfig) GetSmsSign() string {
	if x != nil {
		return x.SmsSign
	}
	return ""
}

func (x *WalletConfig) GetSmsMoneyChangeTemplate() string {
	if x != nil {
		return x.SmsMoneyChangeTemplate
	}
	return ""
}

func (x *WalletConfig) GetEmailMoneyChangeTemplate() string {
	if x != nil {
		return x.EmailMoneyChangeTemplate
	}
	return ""
}

func (x *WalletConfig) GetCustomRechargeGive() []string {
	if x != nil {
		return x.CustomRechargeGive
	}
	return nil
}

func (x *WalletConfig) GetUserCenterNotice() []string {
	if x != nil {
		return x.UserCenterNotice
	}
	return nil
}

type ConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *WalletConfig `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *ConfigResponse) Reset() {
	*x = ConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResponse) ProtoMessage() {}

func (x *ConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_configService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResponse.ProtoReflect.Descriptor instead.
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return file_configService_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigResponse) GetData() *WalletConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_configService_proto protoreflect.FileDescriptor

var file_configService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a,
	0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xe5, 0x05, 0x0a, 0x0c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x67, 0x69,
	0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72,
	0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x47, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x67, 0x69, 0x76, 0x65,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x47, 0x69, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x3b, 0x0a, 0x1a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x6d,
	0x6f, 0x6e, 0x65, 0x79, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x17, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x45, 0x64, 0x69, 0x74, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61,
	0x73, 0x68, 0x12, 0x2d, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x72, 0x65,
	0x74, 0x61, 0x69, 0x6e, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x69, 0x73, 0x43, 0x61, 0x73, 0x68, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x47, 0x69, 0x76,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x61, 0x73, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x73,
	0x68, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x61, 0x73, 0x68, 0x4d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x33, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x69, 0x73, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6d, 0x73, 0x5f, 0x73, 0x69, 0x67,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6d, 0x73, 0x53, 0x69, 0x67, 0x6e,
	0x12, 0x39, 0x0a, 0x19, 0x73, 0x6d, 0x73, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x73, 0x6d, 0x73, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x18, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x67, 0x69,
	0x76, 0x65, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x47, 0x69, 0x76, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x43, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0x61, 0x0a, 0x0e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0x92, 0x01,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3f, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x40, 0x0a, 0x0a, 0x53, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_configService_proto_rawDescOnce sync.Once
	file_configService_proto_rawDescData = file_configService_proto_rawDesc
)

func file_configService_proto_rawDescGZIP() []byte {
	file_configService_proto_rawDescOnce.Do(func() {
		file_configService_proto_rawDescData = protoimpl.X.CompressGZIP(file_configService_proto_rawDescData)
	})
	return file_configService_proto_rawDescData
}

var file_configService_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_configService_proto_goTypes = []interface{}{
	(*WalletConfig)(nil),   // 0: services.WalletConfig
	(*ConfigResponse)(nil), // 1: services.ConfigResponse
	(*common.Error)(nil),   // 2: common.Error
}
var file_configService_proto_depIdxs = []int32{
	0, // 0: services.ConfigResponse.data:type_name -> services.WalletConfig
	2, // 1: services.ConfigResponse.error:type_name -> common.Error
	0, // 2: services.ConfigService.GetConfig:input_type -> services.WalletConfig
	0, // 3: services.ConfigService.SaveConfig:input_type -> services.WalletConfig
	1, // 4: services.ConfigService.GetConfig:output_type -> services.ConfigResponse
	1, // 5: services.ConfigService.SaveConfig:output_type -> services.ConfigResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_configService_proto_init() }
func file_configService_proto_init() {
	if File_configService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_configService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_configService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_configService_proto_goTypes,
		DependencyIndexes: file_configService_proto_depIdxs,
		MessageInfos:      file_configService_proto_msgTypes,
	}.Build()
	File_configService_proto = out.File
	file_configService_proto_rawDesc = nil
	file_configService_proto_goTypes = nil
	file_configService_proto_depIdxs = nil
}
