// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: configService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 钱包配置
type TimelyDeliveryConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEnableDelivery    string               `protobuf:"bytes,1,opt,name=is_enable_delivery,json=isEnableDelivery,proto3" json:"is_enable_delivery"`            //是否开启同城配送(0否、1是)
	PickupProvinceId    int64                `protobuf:"varint,2,opt,name=pickup_province_id,json=pickupProvinceId,proto3" json:"pickup_province_id"`           //取货点所在省
	PickupCityId        int64                `protobuf:"varint,3,opt,name=pickup_city_id,json=pickupCityId,proto3" json:"pickup_city_id"`                       //取货点所在市
	PickupCountyId      int64                `protobuf:"varint,4,opt,name=pickup_county_id,json=pickupCountyId,proto3" json:"pickup_county_id"`                 //取货点所在县/区
	PickupProvinceName  string               `protobuf:"bytes,5,opt,name=pickup_province_name,json=pickupProvinceName,proto3" json:"pickup_province_name"`      //取货点-省-名称
	PickupCityName      string               `protobuf:"bytes,6,opt,name=pickup_city_name,json=pickupCityName,proto3" json:"pickup_city_name"`                  //取货点-市-名称
	PickupCountyName    string               `protobuf:"bytes,7,opt,name=pickup_county_name,json=pickupCountyName,proto3" json:"pickup_county_name"`            //取货点-县/区-名称
	PickupAddress       string               `protobuf:"bytes,8,opt,name=pickup_address,json=pickupAddress,proto3" json:"pickup_address"`                       //取货点详细地址
	PickupPoint         *MapPoint            `protobuf:"bytes,9,opt,name=pickup_point,json=pickupPoint,proto3" json:"pickup_point"`                             //取货点坐标
	FeeType             string               `protobuf:"bytes,10,opt,name=fee_type,json=feeType,proto3" json:"fee_type"`                                        //收费标准【地图划分版】: 1按区域收取固定配送费,2按距离收取配送费
	FirstKm             float32              `protobuf:"fixed32,11,opt,name=first_km,json=firstKm,proto3" json:"first_km"`                                      //首公里数【按距离收取配送费】
	FirstKmFee          int64                `protobuf:"varint,12,opt,name=first_km_fee,json=firstKmFee,proto3" json:"first_km_fee"`                            //首公里数内收取的配送费【按距离收取配送费】
	AdditionalKm        float32              `protobuf:"fixed32,13,opt,name=additional_km,json=additionalKm,proto3" json:"additional_km"`                       //每超出多少km额外收费【按距离收取配送费】
	AdditionalKmFee     int64                `protobuf:"varint,14,opt,name=additional_km_fee,json=additionalKmFee,proto3" json:"additional_km_fee"`             //额外费用【按距离收取配送费】
	FirstWeight         int64                `protobuf:"varint,15,opt,name=first_weight,json=firstWeight,proto3" json:"first_weight"`                           //多少kg内不收费【续重收费】
	AdditionalWeight    int64                `protobuf:"varint,16,opt,name=additional_weight,json=additionalWeight,proto3" json:"additional_weight"`            //每超出多少kg额外收费【续重收费】
	AdditionalWeightFee int64                `protobuf:"varint,17,opt,name=additional_weight_fee,json=additionalWeightFee,proto3" json:"additional_weight_fee"` //额外费用【续重收费】
	IsTimedArrival      string               `protobuf:"bytes,18,opt,name=is_timed_arrival,json=isTimedArrival,proto3" json:"is_timed_arrival"`                 //是否开启定时达(0否、1是)
	TimedArrival        *TimedArrival        `protobuf:"bytes,19,opt,name=timed_arrival,json=timedArrival,proto3" json:"timed_arrival"`                         //定时达规则
	Description         string               `protobuf:"bytes,20,opt,name=description,proto3" json:"description"`                                               //配送说明
	Ranges              []*DeliveryRangeRule `protobuf:"bytes,21,rep,name=ranges,proto3" json:"ranges"`                                                         //配送范围规则
}

func (x *TimelyDeliveryConfig) Reset() {
	*x = TimelyDeliveryConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelyDeliveryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelyDeliveryConfig) ProtoMessage() {}

func (x *TimelyDeliveryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelyDeliveryConfig.ProtoReflect.Descriptor instead.
func (*TimelyDeliveryConfig) Descriptor() ([]byte, []int) {
	return file_configService_proto_rawDescGZIP(), []int{0}
}

func (x *TimelyDeliveryConfig) GetIsEnableDelivery() string {
	if x != nil {
		return x.IsEnableDelivery
	}
	return ""
}

func (x *TimelyDeliveryConfig) GetPickupProvinceId() int64 {
	if x != nil {
		return x.PickupProvinceId
	}
	return 0
}

func (x *TimelyDeliveryConfig) GetPickupCityId() int64 {
	if x != nil {
		return x.PickupCityId
	}
	return 0
}

func (x *TimelyDeliveryConfig) GetPickupCountyId() int64 {
	if x != nil {
		return x.PickupCountyId
	}
	return 0
}

func (x *TimelyDeliveryConfig) GetPickupProvinceName() string {
	if x != nil {
		return x.PickupProvinceName
	}
	return ""
}

func (x *TimelyDeliveryConfig) GetPickupCityName() string {
	if x != nil {
		return x.PickupCityName
	}
	return ""
}

func (x *TimelyDeliveryConfig) GetPickupCountyName() string {
	if x != nil {
		return x.PickupCountyName
	}
	return ""
}

func (x *TimelyDeliveryConfig) GetPickupAddress() string {
	if x != nil {
		return x.PickupAddress
	}
	return ""
}

func (x *TimelyDeliveryConfig) GetPickupPoint() *MapPoint {
	if x != nil {
		return x.PickupPoint
	}
	return nil
}

func (x *TimelyDeliveryConfig) GetFeeType() string {
	if x != nil {
		return x.FeeType
	}
	return ""
}

func (x *TimelyDeliveryConfig) GetFirstKm() float32 {
	if x != nil {
		return x.FirstKm
	}
	return 0
}

func (x *TimelyDeliveryConfig) GetFirstKmFee() int64 {
	if x != nil {
		return x.FirstKmFee
	}
	return 0
}

func (x *TimelyDeliveryConfig) GetAdditionalKm() float32 {
	if x != nil {
		return x.AdditionalKm
	}
	return 0
}

func (x *TimelyDeliveryConfig) GetAdditionalKmFee() int64 {
	if x != nil {
		return x.AdditionalKmFee
	}
	return 0
}

func (x *TimelyDeliveryConfig) GetFirstWeight() int64 {
	if x != nil {
		return x.FirstWeight
	}
	return 0
}

func (x *TimelyDeliveryConfig) GetAdditionalWeight() int64 {
	if x != nil {
		return x.AdditionalWeight
	}
	return 0
}

func (x *TimelyDeliveryConfig) GetAdditionalWeightFee() int64 {
	if x != nil {
		return x.AdditionalWeightFee
	}
	return 0
}

func (x *TimelyDeliveryConfig) GetIsTimedArrival() string {
	if x != nil {
		return x.IsTimedArrival
	}
	return ""
}

func (x *TimelyDeliveryConfig) GetTimedArrival() *TimedArrival {
	if x != nil {
		return x.TimedArrival
	}
	return nil
}

func (x *TimelyDeliveryConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TimelyDeliveryConfig) GetRanges() []*DeliveryRangeRule {
	if x != nil {
		return x.Ranges
	}
	return nil
}

// 定时送达数据
type TimedArrival struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepeatType         string   `protobuf:"bytes,1,opt,name=repeat_type,json=repeatType,proto3" json:"repeat_type"`                            //配送时间:all_day全天、repeat_day每天重复、repeat_week每周重复
	RepeatWeeks        int32    `protobuf:"varint,2,opt,name=repeat_weeks,json=repeatWeeks,proto3" json:"repeat_weeks"`                        //自提时间每周重复的星期数按|运算: 1周一，2周二，4周三，8周四，16周五，32周六，64周日
	TimeSection        string   `protobuf:"bytes,3,opt,name=time_section,json=timeSection,proto3" json:"time_section"`                         //配送时段细分: day按天，hour按小时，half_hour按半小时
	AppointmentType    string   `protobuf:"bytes,4,opt,name=appointment_type,json=appointmentType,proto3" json:"appointment_type"`             //预约下单：no无需提前、day提前X天、hour提前X小时、minute提前X分钟
	AppointmentValue   int32    `protobuf:"varint,5,opt,name=appointment_value,json=appointmentValue,proto3" json:"appointment_value"`         //预约下单的天数、小时、分钟
	AppointmentMaxDays int32    `protobuf:"varint,6,opt,name=appointment_max_days,json=appointmentMaxDays,proto3" json:"appointment_max_days"` //最长预约天数(0只能当天配送)
	Ranges             []string `protobuf:"bytes,7,rep,name=ranges,proto3" json:"ranges"`                                                      //范围 待定
	DeliveryTimes      []string `protobuf:"bytes,8,rep,name=delivery_times,json=deliveryTimes,proto3" json:"delivery_times"`                   // 配送时段 待定
}

func (x *TimedArrival) Reset() {
	*x = TimedArrival{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimedArrival) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimedArrival) ProtoMessage() {}

func (x *TimedArrival) ProtoReflect() protoreflect.Message {
	mi := &file_configService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimedArrival.ProtoReflect.Descriptor instead.
func (*TimedArrival) Descriptor() ([]byte, []int) {
	return file_configService_proto_rawDescGZIP(), []int{1}
}

func (x *TimedArrival) GetRepeatType() string {
	if x != nil {
		return x.RepeatType
	}
	return ""
}

func (x *TimedArrival) GetRepeatWeeks() int32 {
	if x != nil {
		return x.RepeatWeeks
	}
	return 0
}

func (x *TimedArrival) GetTimeSection() string {
	if x != nil {
		return x.TimeSection
	}
	return ""
}

func (x *TimedArrival) GetAppointmentType() string {
	if x != nil {
		return x.AppointmentType
	}
	return ""
}

func (x *TimedArrival) GetAppointmentValue() int32 {
	if x != nil {
		return x.AppointmentValue
	}
	return 0
}

func (x *TimedArrival) GetAppointmentMaxDays() int32 {
	if x != nil {
		return x.AppointmentMaxDays
	}
	return 0
}

func (x *TimedArrival) GetRanges() []string {
	if x != nil {
		return x.Ranges
	}
	return nil
}

func (x *TimedArrival) GetDeliveryTimes() []string {
	if x != nil {
		return x.DeliveryTimes
	}
	return nil
}

// 配送范围规则
type DeliveryRangeRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaName      string      `protobuf:"bytes,1,opt,name=area_name,json=areaName,proto3" json:"area_name"`                 //区域名称
	StartingPrice int64       `protobuf:"varint,2,opt,name=starting_price,json=startingPrice,proto3" json:"starting_price"` //起送价
	DeliveryPrice int64       `protobuf:"varint,3,opt,name=delivery_price,json=deliveryPrice,proto3" json:"delivery_price"` //配送费
	Shape         string      `protobuf:"bytes,4,opt,name=shape,proto3" json:"shape"`                                       //划分方式: 1-半径,2-自定义
	CircleRadius  float32     `protobuf:"fixed32,5,opt,name=circle_radius,json=circleRadius,proto3" json:"circle_radius"`   //圆半径，公里内【半径】
	CenterPoint   *MapPoint   `protobuf:"bytes,6,opt,name=center_point,json=centerPoint,proto3" json:"center_point"`        //中心点坐标【半径】
	Coordinates   []*MapPoint `protobuf:"bytes,7,rep,name=coordinates,proto3" json:"coordinates"`                           //自定义坐标列表
}

func (x *DeliveryRangeRule) Reset() {
	*x = DeliveryRangeRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryRangeRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryRangeRule) ProtoMessage() {}

func (x *DeliveryRangeRule) ProtoReflect() protoreflect.Message {
	mi := &file_configService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryRangeRule.ProtoReflect.Descriptor instead.
func (*DeliveryRangeRule) Descriptor() ([]byte, []int) {
	return file_configService_proto_rawDescGZIP(), []int{2}
}

func (x *DeliveryRangeRule) GetAreaName() string {
	if x != nil {
		return x.AreaName
	}
	return ""
}

func (x *DeliveryRangeRule) GetStartingPrice() int64 {
	if x != nil {
		return x.StartingPrice
	}
	return 0
}

func (x *DeliveryRangeRule) GetDeliveryPrice() int64 {
	if x != nil {
		return x.DeliveryPrice
	}
	return 0
}

func (x *DeliveryRangeRule) GetShape() string {
	if x != nil {
		return x.Shape
	}
	return ""
}

func (x *DeliveryRangeRule) GetCircleRadius() float32 {
	if x != nil {
		return x.CircleRadius
	}
	return 0
}

func (x *DeliveryRangeRule) GetCenterPoint() *MapPoint {
	if x != nil {
		return x.CenterPoint
	}
	return nil
}

func (x *DeliveryRangeRule) GetCoordinates() []*MapPoint {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

// 地图坐标
type MapPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lng float32 `protobuf:"fixed32,1,opt,name=lng,proto3" json:"lng"` //经度
	Lat float32 `protobuf:"fixed32,2,opt,name=lat,proto3" json:"lat"` //纬度
}

func (x *MapPoint) Reset() {
	*x = MapPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapPoint) ProtoMessage() {}

func (x *MapPoint) ProtoReflect() protoreflect.Message {
	mi := &file_configService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapPoint.ProtoReflect.Descriptor instead.
func (*MapPoint) Descriptor() ([]byte, []int) {
	return file_configService_proto_rawDescGZIP(), []int{3}
}

func (x *MapPoint) GetLng() float32 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *MapPoint) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

type ConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *TimelyDeliveryConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config"`
	Info   string                `protobuf:"bytes,2,opt,name=info,proto3" json:"info"`
}

func (x *ConfigResponse) Reset() {
	*x = ConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResponse) ProtoMessage() {}

func (x *ConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_configService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResponse.ProtoReflect.Descriptor instead.
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return file_configService_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigResponse) GetConfig() *TimelyDeliveryConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ConfigResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_configService_proto protoreflect.FileDescriptor

var file_configService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22,
	0x95, 0x07, 0x0a, 0x14, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x79, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x63,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x43, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x5f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x0c, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x0b, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x65, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x6b, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4b, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6b, 0x6d, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4b,
	0x6d, 0x46, 0x65, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x6b, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4b, 0x6d, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6b, 0x6d, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x4b, 0x6d, 0x46, 0x65, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x57,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x46, 0x65, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x64, 0x41, 0x72, 0x72, 0x69,
	0x76, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x72,
	0x69, 0x76, 0x61, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x64, 0x41, 0x72, 0x72, 0x69, 0x76,
	0x61, 0x6c, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x15, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0xbe, 0x02, 0x0a, 0x0c, 0x54, 0x69, 0x6d, 0x65,
	0x64, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x61, 0x78, 0x44, 0x61, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0xa6, 0x02, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x52, 0x61,
	0x64, 0x69, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x0c, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x73, 0x22, 0x2e, 0x0a, 0x08, 0x4d, 0x61, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x61,
	0x74, 0x22, 0x5c, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x6c, 0x79, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32,
	0xa9, 0x02, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x43, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x79, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1e, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x79, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x18, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x04, 0x53, 0x61, 0x76,
	0x65, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x79, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a,
	0x0e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12,
	0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x79, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f,
	0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_configService_proto_rawDescOnce sync.Once
	file_configService_proto_rawDescData = file_configService_proto_rawDesc
)

func file_configService_proto_rawDescGZIP() []byte {
	file_configService_proto_rawDescOnce.Do(func() {
		file_configService_proto_rawDescData = protoimpl.X.CompressGZIP(file_configService_proto_rawDescData)
	})
	return file_configService_proto_rawDescData
}

var file_configService_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_configService_proto_goTypes = []interface{}{
	(*TimelyDeliveryConfig)(nil), // 0: services.TimelyDeliveryConfig
	(*TimedArrival)(nil),         // 1: services.TimedArrival
	(*DeliveryRangeRule)(nil),    // 2: services.DeliveryRangeRule
	(*MapPoint)(nil),             // 3: services.MapPoint
	(*ConfigResponse)(nil),       // 4: services.ConfigResponse
}
var file_configService_proto_depIdxs = []int32{
	3,  // 0: services.TimelyDeliveryConfig.pickup_point:type_name -> services.MapPoint
	1,  // 1: services.TimelyDeliveryConfig.timed_arrival:type_name -> services.TimedArrival
	2,  // 2: services.TimelyDeliveryConfig.ranges:type_name -> services.DeliveryRangeRule
	3,  // 3: services.DeliveryRangeRule.center_point:type_name -> services.MapPoint
	3,  // 4: services.DeliveryRangeRule.coordinates:type_name -> services.MapPoint
	0,  // 5: services.ConfigResponse.config:type_name -> services.TimelyDeliveryConfig
	0,  // 6: services.ConfigService.Index:input_type -> services.TimelyDeliveryConfig
	0,  // 7: services.ConfigService.Get:input_type -> services.TimelyDeliveryConfig
	0,  // 8: services.ConfigService.Save:input_type -> services.TimelyDeliveryConfig
	0,  // 9: services.ConfigService.DeliverySwitch:input_type -> services.TimelyDeliveryConfig
	4,  // 10: services.ConfigService.Index:output_type -> services.ConfigResponse
	4,  // 11: services.ConfigService.Get:output_type -> services.ConfigResponse
	4,  // 12: services.ConfigService.Save:output_type -> services.ConfigResponse
	4,  // 13: services.ConfigService.DeliverySwitch:output_type -> services.ConfigResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_configService_proto_init() }
func file_configService_proto_init() {
	if File_configService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_configService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimelyDeliveryConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimedArrival); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryRangeRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_configService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_configService_proto_goTypes,
		DependencyIndexes: file_configService_proto_depIdxs,
		MessageInfos:      file_configService_proto_msgTypes,
	}.Build()
	File_configService_proto = out.File
	file_configService_proto_rawDesc = nil
	file_configService_proto_goTypes = nil
	file_configService_proto_depIdxs = nil
}
