// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: integralCommodityService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IntegralCommodity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                 //ID
	ExchangeType   string       `protobuf:"bytes,2,opt,name=exchange_type,json=exchangeType,proto3" json:"exchange_type"`          //兑换类型：0 纯积分兑换，1-积分+金额兑换
	CategoryId     int64        `protobuf:"varint,3,opt,name=category_id,json=categoryId,proto3" json:"category_id"`               //分类id
	SpuId          int64        `protobuf:"varint,4,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`                              //商品id
	Md5Key         string       `protobuf:"bytes,5,opt,name=md5_key,json=md5Key,proto3" json:"md5_key"`                            //md5key
	Integral       int64        `protobuf:"varint,6,opt,name=integral,proto3" json:"integral"`                                     //积分
	Money          int64        `protobuf:"varint,7,opt,name=money,proto3" json:"money"`                                           //金额
	Stock          int64        `protobuf:"varint,8,opt,name=stock,proto3" json:"stock"`                                           //可兑换数量
	ExchangedCount int64        `protobuf:"varint,9,opt,name=exchanged_count,json=exchangedCount,proto3" json:"exchanged_count"`   //已兑换数量
	LimitNum       int64        `protobuf:"varint,10,opt,name=limit_num,json=limitNum,proto3" json:"limit_num"`                    //限制数量，件/人
	Sort           int32        `protobuf:"varint,11,opt,name=sort,proto3" json:"sort"`                                            //排序值
	IsOnlyExchange string       `protobuf:"bytes,12,opt,name=is_only_exchange,json=isOnlyExchange,proto3" json:"is_only_exchange"` //只能兑换：0否，1是
	Describe       string       `protobuf:"bytes,13,opt,name=describe,proto3" json:"describe"`                                     //积分兑换说明
	CreatedAt      string       `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt      string       `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Product        *ProductInfo `protobuf:"bytes,16,opt,name=product,proto3" json:"product"`
}

func (x *IntegralCommodity) Reset() {
	*x = IntegralCommodity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integralCommodityService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegralCommodity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegralCommodity) ProtoMessage() {}

func (x *IntegralCommodity) ProtoReflect() protoreflect.Message {
	mi := &file_integralCommodityService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegralCommodity.ProtoReflect.Descriptor instead.
func (*IntegralCommodity) Descriptor() ([]byte, []int) {
	return file_integralCommodityService_proto_rawDescGZIP(), []int{0}
}

func (x *IntegralCommodity) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IntegralCommodity) GetExchangeType() string {
	if x != nil {
		return x.ExchangeType
	}
	return ""
}

func (x *IntegralCommodity) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *IntegralCommodity) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *IntegralCommodity) GetMd5Key() string {
	if x != nil {
		return x.Md5Key
	}
	return ""
}

func (x *IntegralCommodity) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *IntegralCommodity) GetMoney() int64 {
	if x != nil {
		return x.Money
	}
	return 0
}

func (x *IntegralCommodity) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *IntegralCommodity) GetExchangedCount() int64 {
	if x != nil {
		return x.ExchangedCount
	}
	return 0
}

func (x *IntegralCommodity) GetLimitNum() int64 {
	if x != nil {
		return x.LimitNum
	}
	return 0
}

func (x *IntegralCommodity) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *IntegralCommodity) GetIsOnlyExchange() string {
	if x != nil {
		return x.IsOnlyExchange
	}
	return ""
}

func (x *IntegralCommodity) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *IntegralCommodity) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *IntegralCommodity) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *IntegralCommodity) GetProduct() *ProductInfo {
	if x != nil {
		return x.Product
	}
	return nil
}

type IntegralCommodityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int64  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords string `protobuf:"bytes,3,opt,name=keywords,proto3" json:"keywords"`
	//----------
	Id             int64    `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	OrderId        int64    `protobuf:"varint,6,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	ExchangeType   string   `protobuf:"bytes,7,opt,name=exchange_type,json=exchangeType,proto3" json:"exchange_type"` //兑换类型：0 纯积分兑换，1-积分+金额兑换
	SpuId          int64    `protobuf:"varint,8,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`                     //商品id
	Md5Key         string   `protobuf:"bytes,9,opt,name=md5_key,json=md5Key,proto3" json:"md5_key"`                   //md5key
	Integral       int64    `protobuf:"varint,10,opt,name=integral,proto3" json:"integral"`                           //积分
	IsOnlyExchange string   `protobuf:"bytes,11,opt,name=is_only_exchange,json=isOnlyExchange,proto3" json:"is_only_exchange"`
	Md5KeyList     []string `protobuf:"bytes,12,rep,name=md5_key_list,json=md5KeyList,proto3" json:"md5_key_list"`
}

func (x *IntegralCommodityRequest) Reset() {
	*x = IntegralCommodityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integralCommodityService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegralCommodityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegralCommodityRequest) ProtoMessage() {}

func (x *IntegralCommodityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integralCommodityService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegralCommodityRequest.ProtoReflect.Descriptor instead.
func (*IntegralCommodityRequest) Descriptor() ([]byte, []int) {
	return file_integralCommodityService_proto_rawDescGZIP(), []int{1}
}

func (x *IntegralCommodityRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *IntegralCommodityRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *IntegralCommodityRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *IntegralCommodityRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IntegralCommodityRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *IntegralCommodityRequest) GetExchangeType() string {
	if x != nil {
		return x.ExchangeType
	}
	return ""
}

func (x *IntegralCommodityRequest) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *IntegralCommodityRequest) GetMd5Key() string {
	if x != nil {
		return x.Md5Key
	}
	return ""
}

func (x *IntegralCommodityRequest) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *IntegralCommodityRequest) GetIsOnlyExchange() string {
	if x != nil {
		return x.IsOnlyExchange
	}
	return ""
}

func (x *IntegralCommodityRequest) GetMd5KeyList() []string {
	if x != nil {
		return x.Md5KeyList
	}
	return nil
}

type IntegralCommodityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *IntegralCommodity   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Items  []*IntegralCommodity `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
	Pager  *common.Pager        `protobuf:"bytes,3,opt,name=pager,proto3" json:"pager"`
	Info   string               `protobuf:"bytes,4,opt,name=info,proto3" json:"info"`
}

func (x *IntegralCommodityResponse) Reset() {
	*x = IntegralCommodityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integralCommodityService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegralCommodityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegralCommodityResponse) ProtoMessage() {}

func (x *IntegralCommodityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integralCommodityService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegralCommodityResponse.ProtoReflect.Descriptor instead.
func (*IntegralCommodityResponse) Descriptor() ([]byte, []int) {
	return file_integralCommodityService_proto_rawDescGZIP(), []int{2}
}

func (x *IntegralCommodityResponse) GetEntity() *IntegralCommodity {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *IntegralCommodityResponse) GetItems() []*IntegralCommodity {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *IntegralCommodityResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *IntegralCommodityResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type ProductSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ProductInfo `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
	Pager *common.Pager  `protobuf:"bytes,3,opt,name=pager,proto3" json:"pager"`
	Info  string         `protobuf:"bytes,4,opt,name=info,proto3" json:"info"`
}

func (x *ProductSearchResponse) Reset() {
	*x = ProductSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integralCommodityService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSearchResponse) ProtoMessage() {}

func (x *ProductSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integralCommodityService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSearchResponse.ProtoReflect.Descriptor instead.
func (*ProductSearchResponse) Descriptor() ([]byte, []int) {
	return file_integralCommodityService_proto_rawDescGZIP(), []int{3}
}

func (x *ProductSearchResponse) GetItems() []*ProductInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ProductSearchResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *ProductSearchResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_integralCommodityService_proto protoreflect.FileDescriptor

var file_integralCommodityService_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62,
	0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x03, 0x0a, 0x11, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x64, 0x35, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x64, 0x35, 0x4b, 0x65, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73,
	0x4f, 0x6e, 0x6c, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0xd1, 0x02, 0x0a, 0x18, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x64,
	0x35, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x64, 0x35,
	0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12,
	0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x4f, 0x6e, 0x6c,
	0x79, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x64, 0x35,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x64, 0x35, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x19,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x31,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x7d, 0x0a, 0x15, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0xff, 0x03, 0x0a, 0x18, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x1a, 0x23, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4c, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4c, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53,
	0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f,
	0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_integralCommodityService_proto_rawDescOnce sync.Once
	file_integralCommodityService_proto_rawDescData = file_integralCommodityService_proto_rawDesc
)

func file_integralCommodityService_proto_rawDescGZIP() []byte {
	file_integralCommodityService_proto_rawDescOnce.Do(func() {
		file_integralCommodityService_proto_rawDescData = protoimpl.X.CompressGZIP(file_integralCommodityService_proto_rawDescData)
	})
	return file_integralCommodityService_proto_rawDescData
}

var file_integralCommodityService_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_integralCommodityService_proto_goTypes = []interface{}{
	(*IntegralCommodity)(nil),         // 0: services.IntegralCommodity
	(*IntegralCommodityRequest)(nil),  // 1: services.IntegralCommodityRequest
	(*IntegralCommodityResponse)(nil), // 2: services.IntegralCommodityResponse
	(*ProductSearchResponse)(nil),     // 3: services.ProductSearchResponse
	(*ProductInfo)(nil),               // 4: services.ProductInfo
	(*common.Pager)(nil),              // 5: common.Pager
}
var file_integralCommodityService_proto_depIdxs = []int32{
	4,  // 0: services.IntegralCommodity.product:type_name -> services.ProductInfo
	0,  // 1: services.IntegralCommodityResponse.entity:type_name -> services.IntegralCommodity
	0,  // 2: services.IntegralCommodityResponse.items:type_name -> services.IntegralCommodity
	5,  // 3: services.IntegralCommodityResponse.pager:type_name -> common.Pager
	4,  // 4: services.ProductSearchResponse.items:type_name -> services.ProductInfo
	5,  // 5: services.ProductSearchResponse.pager:type_name -> common.Pager
	0,  // 6: services.IntegralCommodityService.Create:input_type -> services.IntegralCommodity
	0,  // 7: services.IntegralCommodityService.Update:input_type -> services.IntegralCommodity
	0,  // 8: services.IntegralCommodityService.Delete:input_type -> services.IntegralCommodity
	0,  // 9: services.IntegralCommodityService.Detail:input_type -> services.IntegralCommodity
	1,  // 10: services.IntegralCommodityService.Search:input_type -> services.IntegralCommodityRequest
	1,  // 11: services.IntegralCommodityService.ProductSearch:input_type -> services.IntegralCommodityRequest
	2,  // 12: services.IntegralCommodityService.Create:output_type -> services.IntegralCommodityResponse
	2,  // 13: services.IntegralCommodityService.Update:output_type -> services.IntegralCommodityResponse
	2,  // 14: services.IntegralCommodityService.Delete:output_type -> services.IntegralCommodityResponse
	2,  // 15: services.IntegralCommodityService.Detail:output_type -> services.IntegralCommodityResponse
	2,  // 16: services.IntegralCommodityService.Search:output_type -> services.IntegralCommodityResponse
	3,  // 17: services.IntegralCommodityService.ProductSearch:output_type -> services.ProductSearchResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_integralCommodityService_proto_init() }
func file_integralCommodityService_proto_init() {
	if File_integralCommodityService_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_integralCommodityService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegralCommodity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integralCommodityService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegralCommodityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integralCommodityService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegralCommodityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integralCommodityService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_integralCommodityService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_integralCommodityService_proto_goTypes,
		DependencyIndexes: file_integralCommodityService_proto_depIdxs,
		MessageInfos:      file_integralCommodityService_proto_msgTypes,
	}.Build()
	File_integralCommodityService_proto = out.File
	file_integralCommodityService_proto_rawDesc = nil
	file_integralCommodityService_proto_goTypes = nil
	file_integralCommodityService_proto_depIdxs = nil
}
